Here's a function to view youtube video using mplayer:

<pre>
(defun w3m-yt-view ()
  "View a YouTube link with mplayer."
  (interactive)
  (let ((url (or (w3m-anchor) (w3m-image))))
    (cond ((string-match "youtube" url)
           (string-match "[^v]*v.\\([^&]*\\)" url)
           (let* ((vid (match-string 1 url))
                  (info (with-temp-buffer
                          (w3m-retrieve 
                           (format "http://www.youtube.com/get_video_info?video_id=%s"
                                   vid))
                          (buffer-string))))
             (string-match "&token=\\([^%]*\\)" info)
             (let ((vurl (format "http://www.youtube.com/get_video?video_id=%s&t=%s=&fmt=18"
                                 vid
                                 (match-string 1 info))))
               (start-process "mplayer" nil "mplayer" "-quiet" "-cache" " 8192"
                              (nth 5 (w3m-attributes vurl))))))
          (t
           (message "Not yt URL.")))))
</pre>

[new:mgi:2010-07-23 12:48 UTC]
This is already obsolete (because Youtube has already changed). Here's a new and (IMO) better option. It uses [http://bitbucket.org/rg3/youtube-dl/wiki/Home youtube-dl], an easy to set up Python script that keeps track of Youtube changes quite often.

<pre>
(defun w3m-yt-view ()
  "View a YouTube link with youtube-dl and mplayer."
  (interactive)
  (let ((url (or (w3m-anchor) (w3m-image))))
    (string-match "[^v]*v.\\([^&]*\\)" url)
    (let* ((vid (match-string 1 url))
           (out (format "%s/%s.mp4" w3m-default-save-directory vid)))
      (call-process "youtube-dl" nil nil nil "-U" "-q" "-c" "-o" out url)
      (start-process "mplayer" nil "mplayer" "-quiet" out))))
</pre>
