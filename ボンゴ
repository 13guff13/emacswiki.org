ボンゴは美しく, 柔軟で便利なEmacs向けのバッファ志向メディアプレイヤーで, [[EMMS]] 2.0から並行して開発されています.  Gnu Emacs 21以上で走ります.

; '''コード''': http://github.com/dbrock/bongo
; '''メーリングリスト''': <code><bongo-devel@nongnu.org></code> (see http://lists.nongnu.org/mailman/listinfo/bongo-devel) --- in Gmane as <code>gmane.emacs.bongo.devel</code> (see http://dir.gmane.org/gmane.emacs.bongo.devel)

ボンゴに含まれている注目すべき機能
* 分割プレイリストとライブラリバッファ(それぞれあなたはいくつものバッファーを持ってもいいでしょう --- もしあなたがプレイリストを機能的に必要としないのであれば両方共ゼロでもオッケーでしょう),
* 各アーティストやアルバムのための折りたたみ可能なセクションを持つ階層的なバッファ,
* ボンゴバッファーを編集をするためのEmacsに似たバインディング (edit playlists much like you would regular text),

* プログレスメーターを兼ねたイケてるビジュアルシーキングインタフェース (hit `s'),

* ビジュアルオーディオボリュームコントロール ([[Volume]], which is actually a stand-alone package),

* オーディオCDについての情報の取得と再生とのための内蔵サポート,
* `lastfmsubmitd'を使ってLast.fmへ情報を提供するための内臓サポート,
* the ability to perform arbitrary actions (stopping playback is a simple example) once playback reaches certain points in the playlist, using so-called “action tracks”,

* zero-configuration, out-of-the-box rock’n’roll action.

ボンゴは現在VLC, mpg321, ogg123, speexdec, Ti''''''MidityとMik''''''Modのためのバックエンドが存在します.
全てのバックエンドは一時停止と再開をサポートしますが,VLCとmpg321は対話式のシーキングをサポートします.
あなたの持っている非対話式バックエンドの定義はとても簡単です.
例えば, これは定義された内蔵バックエンドのいくつかの方法です:

 (define-bongo-backend speexdec
   :matcher '(local-file "spx"))

 (define-bongo-backend timidity
   :pretty-name "TiMidity"
   :extra-program-arguments '("--quiet")
   :matcher '(local-file "mid" "midi" "mod" "rcp" "r36" "g18" "g36"))

もちろん, あなたのシーキングのような対話式操作のためのサポートがついている複雑なバックエンドを追加することは同様に可能です.
例えば, [[BongoMPlayer]]を見よ.
BongoHacksで気の利いたハッキングのコレクションがあります.

== Last.fm ==

'''2006年11月11日の時点で, もし`lastfmsubmit' 実行可能ファイルを見つけることができるならばLast.fm機能がデフォルトで有効になっています'''(もしそれがあなたの`exec-path'になければ, `lastfmsubmit-program-name'をカスタマイズしてください).
個々のプレイリストバッファーのためにBongo Last.fm モードを切り替えるためには,`bongo-lastfm-mode'を使え.
全てのプレイリストバッファーのためにそれを切り替えるためには`bongo-global-lastfm-mode'を使うかカスタマイズしろ.
(bongo-lastfm.elファイルはbongo.elへマージされました, そしてカスタムを使用している場合それはあなたの<code>~/.emacs</code>に何かを置く必要はなくなりました.)
