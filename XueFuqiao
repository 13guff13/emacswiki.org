== About Me ==
<pre>
(minibuffer-message "Welcome to my homepage! ;-)")
</pre>
I use Emacs.

My name is Xue Fuqiao.  English is not my
native language; please excuse typing errors.  I have been a GNU/Linux
user since 2008.  I've been an [[Emacsite]] since 2009 and I began to write
programs in EmacsLisp since 2011.  I started with [[XEmacs]], switched to
[[SXEmacs]], back to XEmacs, then to GuileEmacs, and now I'm using Emacs.
I prefer to learn new things from reference manuals, instead of
tutorials.  Currently I use Emacs on an old laptop with a
ColemakKeyboard.  My favorite font is [http://www.proggyfonts.com
ProggyTiny].

Many thanks to the people who contributed or are contributing to
emacsen and EmacsWiki.  My daily life and work becomes very
interesting.  I use Emacs for everything, even when editing text files.

I was born and raised in Xinjiang, China, and I'm currently a student of [http://www.ncut.edu.cn NCUT].  My major is
Communication Engineering.  Feel free to ask anything about Emacs :)

I'm a [http://www.fsf.org/free-software-supporter/ FreeSoftwareSupporter] and a [http://www.gp.org Green Party] supporter.

You can contact me using (please send plain text mail, not HTML):
<pre>
(concat (list 120 102 113) [46] (mapconcat (function (lambda (x) (format "%c" (1- x)))) "gsff" "") "@" "gmail" "." "com")
</pre>

== My Emacs Invocation ==

<pre>
emacs -fs -nbi -fn "ProggyTiny-9" -cr coral &
</pre>

or sometimes:
<pre>
emacs -nw -f gnus
</pre>

== My Accounts ==
* [http://emacsconf.org Emacsconf]
xfq

* GitHub
[https://github.com/xfq xfq]

* WikEmacs
[http://wikemacs.org/wiki/User:Xfq Xfq]

* Savannah
[https://savannah.gnu.org/users/xfq xfq]

* identi.ca
[http://identi.ca/xfq/all xfq]

* [[Freenode]]
[::xfq]

* Wikipedia
[http://en.wikipedia.org/wiki/User:Xfq Xfq]

== RSI ==
Started physiotherapy on June, 2012.

== Some Sentences I Like ==
* There is no system but GNU, and Linux is one of its kernels.

* I could have made money this way, and perhaps amused myself writing code. But I knew that at the end of my career, I would look back on years of building walls to divide people, and feel I had spent my life making the world a worse place.

* Once GNU is written, everyone will be able to obtain good system software free, just like air.

* Talk is cheap. Show me the code.

* Microsoft is not the answer.  Microsoft is the question.  NO is the answer.

* The GNU GPL was not designed to be "open source".

* You can leave politics alone, but politics won't leave you alone.

* I am a pessimist by nature. Many people can only keep on fighting when they expect to win. I'm not like that, I always expect to lose. I fight anyway, and sometimes I win.

* Isn't vi that text editor with two modes... one that beeps and one that corrupts your file?

* It is a logical impossibility to make a language more powerful by omitting features, no matter how bad they may be.  -- [[WikiPedia:John_Hughes_(computer_scientist)|John Hughes]]

* While any text editor can save your files, only Emacs can save your soul.

* My other car is a cdr.

* A bad day in () is better than a good day in {}.

* Lisp is a programmable programming language.

* Don't worry about what anybody else is going to do. The best way to predict the future is to invent it.

* Those who have been respectful to Emacs will be allowed to live, and shall become its slaves; as for those who slight Emacs...

== My Init Files (It's a mess currently) ==
https://github.com/xfq/xfq-emacs-init-files

== My ~/.Xdefaults ==
<pre>
Emacs.bitmapIcon: off
Emacs.font: ProggyTiny-9
Emacs* menubar.margin: 0
Emacs* toolBar: 0
Emacs.useXIM: off
</pre>

== My ~/.sawfish/rc ==
Coming soon.

== My .stumpwmrc ==
Coming soon.

== My ~/.conkerorrc ==
Coming soon.

== My Emacs Screenshot ==
[[image:XFQScreenShotPage]]

== I Like ==
* ArtificialIntelligence
* Coreboot
* cpio and shar
* Dragora GNU/Linux
* DuckDuckGo
* Dvips
* English
* FilesystemHierarchyStandard
* GnuCompilerCollection
* GnuDebugger
* GnuAspell
* GnuBazaar
* GnuTLS
* GnuOctave
* GnuAutotools
* GnuGeneralPublicLicense and GnuFreeDocumentationLicense
* gzip
* GnuGo
* Grav-mass
* HappyHackingKeyboard
* LaTeX
* LambdaExpression
* Lempel-Ziv coding (LZ77)
* LibreJS
* libxml
* Linux-libre and GNU Mach
* LispLanguage
* MassiveMultiauthorCollaborationSite
* mbox
* MIPS
* MIT
* MLDonkey
* NNTP
* POSIX
* RegularExpression
* RSA
* Savane
* SecureShell
* STARTTLS
* SELinux
* Sawfish and StumpWM
* TeXLive
* Ogg
* Trackball
* UnicodeEncoding
* [[TECO]]
* html tidy
* scp
* zlib
* top

== Wish List==
* Implement a version control system in EmacsLisp.
* Extended text-properties (to make overlays obsolete) in Emacs.
* Implement an OCR system in EmacsLisp.
* Make emacsclient work across most network connections.
* Implement a search engine in EmacsLisp.
* Make a keyboard layout for Emacs.  I have used ColemakKeyboard and DvorakKeyboard but I'm not satisfied with both of them.
* Implement a mailing list manager in EmacsLisp.
* Port XWEM and XLIB to Emacs.
* Implement a DHCP client in EmacsLisp.
* Make GNU Emacs support both [[Guile]] and EmacsLisp.
* Implement a FTP server in EmacsLisp.
* Implement a spell checker in EmacsLisp.
* Add a command line argument named ##--slim##, it can invoke Emacs with only the bare-minimum EmacsLisp libraries needed for quick editing.
* FFI support in Emacs.
* Make all Unix and Unix-like systems come with Emacs built-in.
* Make EmacsLisp simpler and cleaner.
* Implement a URL Shortener in EmacsLisp.
* Make Emacs/W3 be able to deal with HTML5.
* Implement a DOM binding for EmacsLisp.
* Make Emacs/W3 parse XSL.
* Make Emacs support more image formats.
* Implement multithreaded features in Emacs.
* Make the face code to be simpler, clearer and faster.
* Make an OpenPGP implementation in EmacsLisp.
* Implement a EmacsLisp library that generates XPMs dynamically.

= Comments =

It looks like you have a lot of work to do! It may be worth looking at
the clx package for Common Lisp to see if it could be ported to
Elisp. It would be cool to be able to display an X-window in an Emacs
window. One problem with doing this sort of thing properly is that,
unlike most versions of Common Lisp, Elisp isn't (yet?)
multi-threaded. I have a feeling that it would take a lot of work to
convert it. One thing that might be possible is to build a clone of
Elisp on top of Common Lisp I don't know how efficient that would
be. But it would require that all Elisp code works in a
lexical-binding environment. If it could be done you would get
multi-threading for free and such things as the clx library for
manipulating X.

----
CategoryHomepage
