portrait:http://gravatar.com/avatar/e94960f8e47c178e206a869c3b81165d

Iâm [::nicferrier], a hacker trying to do interesting things. I use Emacs every day all the time. [[http://nic.ferrier.me.uk|Here's Nic's blog]].


I've used Emacs in some form since 1989. And GNU-Emacs every day, all the time for the last 15 years. I've done extensive Java, C, Python, ActionScript and Shell development inside Emacs, as well as a bunch of other languages. 

The last couple of years I've started to look at ELisp as a practical language (since it had closures basically) in which I might //one day// do all my work.

== About me ==

I work for [[http://thoughtworks.com|ThoughtWorks]] doing !DevOps stuff. 

I am trying to start [[http://teamchat.net|TeamChat.net]], a ChatOps company for teams built on Elnode, ShoesOff and other Emacs technology. 

I used to be the CTO at woome.com where we built video tools to help people get laid.

I maintain the [[http://marmalade-repo.org|marmalade Emacs package repo]] and am porting it to [[Elnode]].

I am the author and maintainer of [[Elnode]], the Emacs Async Webserver; more information about that in this page.

I hang out on [[EmacsChannel|#emacs]] a lot, I'm listed [[EmacsChannelPeople|here]] and [[EmacsChannelDemographics|here]].  I wish that both of those references could be auto-generated.

== Recent Emacs related blog posts ==

* [http://skillsmatter.com/podcast/home/this-year-in-emacs/te-6689|Nic talking about the year in Emacs at Skillsmatter]

* [http://nic.ferrier.me.uk/blog/2013_01/bad-marmalade|Problems with Marmalade]

* [http://nic.ferrier.me.uk/blog/2013_01/year-in-emacs|The next year's Emacs work]

* [http://nic.ferrier.me.uk/blog/2012_07/tips-and-tricks-for-emacslisp|EmacsLisp tips and tricks]

* [http://nic.ferrier.me.uk/blog/2012_07/emacs-packages-for-programmers|tips and tricks for EmacsLisp developers on using packages]  

* [http://nic.ferrier.me.uk/blog/2011_10/emacs_lisp_is_good_further_reports_suggest about using lexical scope to code sentinels better, with an example macro]

* [http://nic.ferrier.me.uk/blog/2011_09/elisp_testing ERT has been included in trunk so now EmacsLisp TDD is possible]

* [http://nic.ferrier.me.uk/blog/2010_10/elnode about Elnode, the EmacsLisp asycnc HTTP server]


== Elnode: an asynchronous HTTP server for Emacs ==
// ... or node.js for Emacs //

[[Elnode]] is an asynchronous TCP server handling HTTP.

Elnode is in the [http://marmalade-repo.org/packages/elnode marmalade repository]

As of now Elnode is functional. I am starting to write things with it:

* a pastebin style collabarative editor
* [[http://teamchat.net|TeamChat.net]] a ChatOps engine mashing up IRC, webapps and ChatBots.
* [[https://github.com/nicferrier/seville|the new version of Marmalade]] which would also be a reusable ELPA archive
* [[Elwiki]] an EmacsWiki engine

Other stuff I am considering:

* dynamic OrgAgenda export
* browser integration tools, for example an Emacs password store


== Creole ==

[[Creole]] is a Wiki markup language very like the one used here on [[Oddmuse|EmacsWiki]]. 

I develop and maintain the EmacsLisp version of a [[Creole]] [[http://github.com/nicferrier/elwikicreole|parser and HTML exporter]].

We are using [[Creole]] to develop [[Elwiki]], an EmacsWiki engine in EmacsLisp run with [[Elnode]].


== Frame size ==

Changing font size is a pain so I wrote [[FrameSize]].


== Email under Emacs ==

I've never liked gnus. But I do like Emacs as a mail platform so I've always maintained my own mail code.

Back in the 90s I wrote an [[imapua|Emacs IMAP user agent based on the GNUs IMAP library]]. It worked ok but I found that IMAP doesn't scale to big inboxes.

I've worked on a succession of different email clients since then, the current incarnation being [http://github.com/nicferrier/emacs-maildir|Emacs Maildir]. It's fast, it's simple, it's easy.

== Emacs Daemon RC ==

Here's my daemon rc script:

{{{
#!/bin/bash

WHO=$(whoami)
[ "$WHO" != "nferrier" ] && exec su -c "$0 $*" - nferrier

EMACS=/home/nferrier/usr/emacs/bin/emacs

SERVERNAME=elnode
SOCKETPATH=/tmp/emacs$UID/$SERVERNAME

case $1 in

  start)
        ${EMACS}client -s $SOCKETPATH -e '(print (emacs-version))'
        if [ $? -ne 0 ] ; then $EMACS --daemon=$SERVERNAME ; fi
        ;;
 
  stop)
 	${EMACS}client -s $SOCKETPATH -e '(print (emacs-version))'
 	if [ $? -eq 0 ] ; then ${EMACS}client -s $SOCKETPATH -e '(kill-emacs)' *scratch* ; fi
 	;;
 
  status)
        if [ ! -S $SOCKETPATH ] ; then exit 1 ; fi
 	${EMACS}client -s $SOCKETPATH -e '(print (emacs-version))'
 	;;

esac

# End
}}}

[[https://gist.github.com/1966843|Here's the GIST of the same script]].
 
== Emacs in a screen terminal: colors ==

I do some remote pair programming inside screen. I would like to use emacs. Standard colors are too difficult for me to read (my eyes are going!).

vim has the very nice: 

{{{
set background=dark
}}}

which turns up the brightness on dark font faces. According to #emacs we have no equivalent.

So I wrote one:

{{{
(defvar dark-background nil)

(defun toggle-dark-background ()
  (interactive)
  (let ((difficult-colors
         '("red" "blue" "medium blue")))
    (mapc
     (lambda (face)
       (and (member (face-attribute face :foreground)  difficult-colors)
            (set-face-bold-p face (not dark-background))))
     (face-list)))
  (setq dark-background (not dark-background)))
}}}  

This toggles bold on the dark ones, which I think is all the vim thing is doing.

== Packages For Config - Small, Portable Init Files ==

[:PackagesForConfig]Another interest of mine is achieving portable Emacs config.  My plan is to achieve this through use of packages.

The idea is to:

* put your config in a package and make it depend on the packages you are using
* whenever you install something re-check the depends in your config package and make a new package if necessary
* have a command to uninstall something, or to garbage collect no longer used dependancies
* installing your emacs elsewhere is just installing the config package
* encrypted packages would be useful for config
* separate config for machine specific things, this can be done with CustomizeThemes

[[https://gist.github.com/3159186|This gist]] shows my self installing Emacs config except for the customizations.  The customizations are insecure because they contain passwords and such, hence the need for encrypted packages.

Solving the problem of what is machine specific and what is not is hard.

== Gravatar from Emacs ==

The image above is my [[http://gravatar.com|Gravatar]]. It's a useful service that ties an email address to an image, so if someone gives you an email you can maybe find a picture of them.

You need to hash the email to generate the url though, here's how in EmacsLisp:

{{{
(print (md5 (downcase "nic@example.com")) (current-buffer))
}}}

== How to write a modern browser for Emacs ==

Here's another plan of mine:

* make a small webkit process in C that:
** starts
** loops around a long poll request to http://localhost:6003/emacs/
** responses can cause js to load, keys to be bound to event sends, etc...
* make a deferring elnode app that can drive the webkit process
** elisp should define what keys do
*** elnode receives a //user pressed this key// event and responds with the message to the webkit window
**** eg: //user pressed o// 
**** emacs asks url?
**** when it has url elnode responds to request with //open url x//

Difficult bits about this are how to co-ordinate the ui, it's ok to have emacs being the collection point for data but you want the webkit window on the screen at the same time. Maybe most ui should still be done in the webkit window.


== List of various other ELisp bits and pieces ==

I've done quite a few other packages for Emacs, most are on github but check these out:

* [[WikiDoc]] -- a program to make wiki documentation from Elisp functions, [[http://marmalade-repo.org/packages/wikidoc|marmalade repo here]], [[http://github.com/nicferrier/elwikidoc|github here]]
* fakir -- a library to make faking Emacs Lisp functions easier [[http://marmalade-repo.org/packages/fakir|marmalade repo here]], [[http://github.com/nicferrier/emacs-fakir|github here]]
 
And some other stuff I haven't packaged and probably never will:

* [[pastebin]] -- a simple interface to the [http://www.pastebin.com pastebin.com] webservice
* [[rcircPresence]] -- for syncing rcirc with some other presence thing (eg: skype)
* [[imapua]] -- a purely IMAP based email client for Emacs
* [[trac_editor]] -- a very simple interface to trac.py
* WorldTime -- showing a whole day of times
* [[tzhelp]] -- a small set of tools for dealing with timezones

== Emacs under Mercurial ==

I used to maintain a mercurial copy of the emacs bzr repo at [https://bitbucket.org/nic/emacs bitbucket].

[https://bitbucket.org/nic/emacs-update/changeset/14a32e93c535 here is the update script I used].

I no longer maintain that, people weren't interested.


---- 
CategoryHomepage
