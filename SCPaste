= SCPaste =

SCPaste is a simple tool to post the contents of a buffer to a public place.

Lisp:scpaste.el

It uses Lisp:htmlize.el to convert font-lock coloring to HTML and then
copies the file via SCP. See http://p.hagelb.org.

[new:YannHodique:2008-04-02 20:47 UTC]
Hi, you may be interested in using TrampMode for dealing with transport (and generalizing it). For example, something like 
<code>(htmlize-file "~/.emacs" "/ssh:host:dotemacs.html")</code> would not be that far from what you're doing.

[new]
You might consider using HtmlFontify which can take care of a bit more fontification than [[Htmlize]].
HtmlFontify will hopefully also be part of GNU Emacs soon.

[new:PhilHagelberg:2008-04-03 02:48 UTC]
YannHodique: of course; why didn't I think of that? Then we get Windows compatibility for free. I will also check out HtmlFontify; if that's going to be included in Emacs then it makes sense to incorporate it. Thanks!

[new:VegardVesterheim:2009-05-15 07:38 UTC]
A small patch to allow pasting of the region as well

<pre>
*** scpaste.el	15 May 2009 07:30:40 -0000	1.1
--- scpaste.el	15 May 2009 07:30:01 -0000
***************
*** 108,114 ****
  (defun scpaste (original-name)
    "Paste the current buffer via `scp' to `scpaste-http-destination'."
    (interactive "MName (defaults to buffer name): ")
!   (let* ((b (htmlize-buffer))
           (name (url-hexify-string (if (equal "" original-name)
                                        (buffer-name)
                                      original-name)))
--- 108,119 ----
  (defun scpaste (original-name)
    "Paste the current buffer via `scp' to `scpaste-http-destination'."
    (interactive "MName (defaults to buffer name): ")
!   (scpaste-region (point-min) (point-max) original-name))
! 
! (defun scpaste-region (start end original-name)
!   "Paste the current buffer via `scp' to `scpaste-http-destination'."
!   (interactive  "r\nMName (defaults to buffer name): ")
!   (let* ((b (htmlize-region start end))
           (name (url-hexify-string (if (equal "" original-name)
                                        (buffer-name)
                                      original-name)))


</pre>
