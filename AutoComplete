Auto completion with popup menu.

Downloads and full documentation are found at the following page:

http://cx4a.org/software/auto-complete/

== Features ==

* Visual interface
* Reduce overhead of completion by using statistic method
* Extensibility
* Lightweight

== Screenshot ==

[[image:AutoCompleteScreenshot]]

== Extensions ==

Lisp:auto-complete-extension.el is some enhancement by AndyStewart.

Lisp:auto-complete-octave.el    is some enhancement by Yen-Chin,Lee.

Lisp:auto-complete-etags.el     is some enhancement by Yen-Chin,Lee.

Lisp:auto-complete-verilog.el   is some enhancement by Yen-Chin,Lee.

[http://github.com/brianjcj/auto-complete-clang Clang source for Auto Complete]

Other extensions are found in [[AutoCompleteSources]].

== Development Version Notes ==
If you are using the current development version of AutoComplete (0.20 at the time of this edit) be aware that ac-source-semantic is now included in the package.  Furthermore, if you are using the semantic source,  make sure that you have required semantic-ia in your init file.  If you do not then it falls back to a method of gathering the tags that appears to not check the semantic cache slowing the whole thing up rather tremendously (especially with omnicompletion).

Speaking of omnicompletion, the way it functions was changed recently.  Since it is not documented yet here is an example of how it works:


  (add-hook 'c-mode-common-hook '(lambda ()

          ;; ac-omni-completion-sources is made buffer local so
          ;; you need to add it to a mode hook to activate on 
          ;; whatever buffer you want to use it with.  This
          ;; example uses C mode (as you probably surmised).

          ;; auto-complete.el expects ac-omni-completion-sources to be
          ;; a list of cons cells where each cell's car is a regex
          ;; that describes the syntactical bits you want AutoComplete
          ;; to be aware of. The cdr of each cell is the source that will
          ;; supply the completion data.  The following tells autocomplete
          ;; to begin completion when you type in a . or a ->

          (add-to-list 'ac-omni-completion-sources
                       (cons "\\." '(ac-source-semantic)))
          (add-to-list 'ac-omni-completion-sources
                       (cons "->" '(ac-source-semantic)))

          ;; ac-sources was also made buffer local in new versions of
          ;; autocomplete.  In my case, I want AutoComplete to use 
          ;; semantic and yasnippet (order matters, if reversed snippets
          ;; will appear before semantic tag completions).

          (setq ac-sources '(ac-source-semantic ac-source-yasnippet))
  ))

Not terribly difficult but it took me a bit to puzzle out what needed to be done so I thought I would share my results.  [[AndyStewart]] has included the omnicompletion bits into his init file.

-- [[LesHarris]]


== External links ==

[http://www.enigmacurry.com/2009/01/21/autocompleteel-python-code-completion-in-emacs/ Integrating Rope and Yasnippet with Auto Complete].

[http://madscientist.jp/~ikegami/diary/20090215.html#p01 Integrating for Haskell (experimentally, for the Haskell compiler GHC 6.10.1)]

[http://github.com/buzztaiki/auto-complete/raw/master/ac-company.el Use company backend for Auto-Complete]

== Questions and Feedback ==


----
[new]
Non lisp-hacker here. 
How can I add my own completions, and make auto-complete-mode start automatically for any opened file?
Thanks.

For the second part of the question here is what i currently use to bypass ac-modes list:
<pre>
;; dirty fix for having AC everywhere
(define-globalized-minor-mode real-global-auto-complete-mode
  auto-complete-mode (lambda ()
                       (if (not (minibufferp (current-buffer)))
                         (auto-complete-mode 1))
                       ))
(real-global-auto-complete-mode t)
</pre>
----
[new:PhilJackson:2009-01-22 12:26 UTC] Should I expect this to work in a TTY emacsen?

[new]
: Yes. And it's purrty :D
----
[new] How does this compare with CompletionUI and CompanyMode? --TobyCubitt

[new:AndyStewart:2009-02-11 23:03 UTC]
: CompletionUI use tooltip as completion UI, AutoComplete and CompanyMode implement by Overlay.
: Tooltip just can use in X, and overlay can use both X and console.
: Tooltip is slower than overlay when finger is very fast. :)
: But overlay have align render bug with multi-byte language (such as CJK), and tooltip haven't this problem.
: About different between AutoComplete and CompanyMode, in fact they're very similar, but CompanyMode have more bug. -- AndyStewart

[new]
Thanks for the explanation! CompletionUI includes many other user-interfaces besides the tooltip, implements an auto-completion-mode, and includes many other features besides. My aim was to make a swiss-army knife of completion user-interface code, so no one else would have to go through the same tedium! Would you be interested in adding your overlay display code to CompletionUI? --TobyCubitt
----
[new]
AutoComplete stops working as soon as I enable Flymake. I'm using the development version.
--[[TiagoCamargo]]
[new:jpkotta:2010-07-26 02:23 UTC]
After loading auto-complete, 
<pre>
 (ac-flyspell-workaround)
</pre>
--[[jpkotta]]
----
[new] 
If I'm editing [[OrgMode]] files, I can start AutoComplete (using \M-/ and not auto start), but if I don't want to make any of the completions, ESC-ESC-ESC doesn't kill the menu. I don't see this problem in other emacs files. Any debugging hints?
----
[new]
AutoComplete version 0.3.0 alpha doesn't work with YASnippet 0.6.1b. Only solution I've found: disable yasnippet as source for completion.
----
[new]
Sorry for inconvenience. Could you check update auto-complete.el and auto-complete-config.el?
--[[Matsuyama]]
----
[new]
I can confirm it still doesnt work(updated version of auto-complete.el and auto-complete-config.el) with latest version of yasnippet. Plus setting it globally doesnt enable it even AC appearing in the mode line.
--[[GlauberPrado]]
----
[new]
Final version of auto-complete-yasnippet.el, tested in both 23.0 and 23.1:

<pre>
(require 'auto-complete)
(require 'yasnippet)

(defun ac-yasnippet-candidate ()
  (let ((table (yas/get-snippet-tables major-mode)))
    (if table
      (let (candidates (list))
            (mapcar (lambda (mode)          
              (maphash (lambda (key value)    
                (push key candidates))          
              (yas/snippet-table-hash mode))) 
            table)
        (all-completions ac-prefix candidates)))))

(defface ac-yasnippet-candidate-face
  '((t (:background "sandybrown" :foreground "black")))
  "Face for yasnippet candidate.")

(defface ac-yasnippet-selection-face
  '((t (:background "coral3" :foreground "white"))) 
  "Face for the yasnippet selected candidate.")

(defvar ac-source-yasnippet
  '((candidates . ac-yasnippet-candidate)
    (action . yas/expand)
    (limit . 3)
    (candidate-face . ac-yasnippet-candidate-face)
    (selection-face . ac-yasnippet-selection-face)) 
  "Source for Yasnippet.")

(provide 'auto-complete-yasnippet)

P.S. I apologize for extra patch on auto-complete.el, it wasn't required. To those who patched: please use original version.
</pre>

----
[new]
Thanks so much! I fixed the problem and commit to the repository. Please check it in the project page.
--[[Matsuyama]]
----
[new]
What about completion with candidates from other buffers? I've tried to add ac-source-words-in-all-buffer to ac-sources, but that didn't give any effect :(

[new]
hi, my enhancement of auto-complete, AutoCompletePlus, :) -- [[ahei]]

[new]
In c++-mode, ac-source-filename can not work, because 
<pre>
(defun ac-sources-prefix-default ()
  "Default implementation for `ac-sources-prefix-function'."
  (require 'thingatpt)
  (car-safe (bounds-of-thing-at-point 'symbol)))
</pre>
and thing-at-point is ahe when point after /home/ahe.
I think auto-complete should have multiple ac-prefix, and then complete those all. -- [[ahei]]

[new]
Can anyone explain how the ac-omni-completion-sources replacement works?  I am not understanding how to use this ac-prefix stuff.  I want to start completion on '.' and '->' for C programming, so foo-> would pop up completions for the struct Foo.  This was working in 0.20 and I'm just not seeing how to set this up again. LesHarris
----
[new]
fix for yasnippet >=0.7.0
<pre>
(defun ac-yasnippet-candidate-1 (table)
  (let ((hashtab (yas/snippet-table-hash table))
        (parent (if (fboundp 'yas/snippet-table-parent)
                    (car (yas/snippet-table-parent table))))
        candidates)
    (maphash (lambda (key value)
               (push key candidates))
             hashtab)
    (setq candidates (all-completions ac-prefix (nreverse candidates)))
    (if parent
        (setq candidates
              (append candidates (ac-yasnippet-candidate-1 parent))))
    candidates))
</pre>
----
[new]
I'm getting the following error message:

Symbol's function definition is void: window-full-width-p

I googled this message, and found the following (at [http://braeburn.aquamacs.org/code/master/etc/NEWS.22]):


* Lisp Changes in Emacs 22.2.
.
.
.

** New function `window-full-width-p' returns t if a window is as wide
as its frame.

The manual states that GNU Emacs 22 or later is required, and the version I am using is GNU Emacs 22.1.1. Is my old version of emacs the source of the error, and if it is, should the manual be corrected to list a newer required version of emacs (at least 22.2)?

[new]
I replaced "(window-full-width-p window)" with "t", then popup.el seems to work fine. -- Anonymous Coward
----
[new]
The gray-shaded inline expansion gets in the way when deleting characters in the midst of a line, as it overlays following existing text. This is a bit inconvenient. Is it possible to suppress completion while actively deleting?

----
[new]
Is it possible to use auto-complete to translate words with a lookup at dict.cc leo.org? 

[new]
Yes, of course. auto-complete is a frame work for completion. But you have to give it the sources to complete from and take care of the output from completion.
(You could of course use Emacs default completion frame work too. Or Icicles etc.)

----
[new]
BUG: Entering two forward slashes (for example to add a comment in C++) causes a delay of several minutes during which one can do nothing else with emacs.

----
[new]
<pre>
infinite loop if type "border-width:" in css-mode
maybe you need to modify auto-complete-config.el file and byte-compile.
</pre>
<pre>
--- auto-complete-config.el.orig	2010-05-29 23:51:11.000000000 +0900
+++ auto-complete-config.el	2010-08-25 20:49:15.000000000 +0900
@@ -344,10 +344,11 @@
 (defconst ac-css-value-classes
   '((absolute-size "xx-small" "x-small" "small" "medium" "large" "x-large"
                    "xx-large")
     (border-style "none" "hidden" "dotted" "dashed" "solid" "double" "groove"
                   "ridge" "inset" "outset")
+    (border-width "thin" "medium" "thick" "inherit")
     (color "aqua" "black" "blue" "fuchsia" "gray" "green" "lime" "maroon" "navy"
            "olive" "orange" "purple" "red" "silver" "teal" "white" "yellow"
            "rgb")
     (counter "counter")
     (family-name "Courier" "Helvetica" "Times")
@@ -475,6 +476,6 @@
   (add-hook 'css-mode-hook 'ac-css-mode-setup)
   (add-hook 'auto-complete-mode-hook 'ac-common-setup)
   (global-auto-complete-mode t))
 
 (provide 'auto-complete-config)
-;;; auto-complete-config.el ends here
+;;; auto-complete-config.el ends here
</pre>
----
You can monkey patch using this somewhere else if you don't want to change autocomplete.el
<pre>
;; CSS autocomplete inifinite loop hacks
(add-to-list 'ac-css-value-classes
	     '(border-width "thin" "medium" "thick" "inherit"))

</pre>
----
[new]
I changed the yasnippet source to support the lastest SVN version of Yasnippet.  In addition, I added a documentation function that gives the name of the expansion and the actual template.


<pre>

(defface ac-yasnippet-candidate-face
  '((t (:background "sandybrown" :foreground "black")))
  "Face for yasnippet candidate."
  :group 'auto-complete)

(defface ac-yasnippet-selection-face
  '((t (:background "coral3" :foreground "white")))
  "Face for the yasnippet selected candidate."
  :group 'auto-complete)

(defun ac-yasnippet-table-hash (table)
  (cond
   ((fboundp 'yas/snippet-table-hash)
    (yas/snippet-table-hash table))
   ((fboundp 'yas/table-hash)
    (yas/table-hash table))))

(defun ac-yasnippet-table-parent (table)
  (cond
   ((fboundp 'yas/snippet-table-parent)
    (yas/snippet-table-parent table))
   ((fboundp 'yas/table-parent)
    (car (yas/table-parent table)))
   ((fboundp 'yas/table-parents)
    (car (yas/table-parents table)))
   )
  )

(defun ac-yasnippet-candidate-1 (table)
  (with-no-warnings
    (let ((hashtab (ac-yasnippet-table-hash table))
          (parent (ac-yasnippet-table-parent table))
          (ac-prefix (ac-yasnippet-prefix))
          candidates)
      (maphash (lambda (key value)
                 (push key candidates))
               hashtab)
      (when ac-prefix
        (setq candidates (all-completions ac-prefix (nreverse candidates)))
        )
      (when parent
        (setq candidates
              (append candidates (ac-yasnippet-candidate-1 parent)))
        )
      candidates)))

(defun ac-yasnippet-candidates ()
  (with-no-warnings
    (if (fboundp 'yas/get-snippet-tables)
        ;; >0.6.0
        (apply 'append (mapcar 'ac-yasnippet-candidate-1 (yas/get-snippet-tables major-mode)))
      (let ((table
             (if (fboundp 'yas/snippet-table)
                 ;; <0.6.0
                 (yas/snippet-table major-mode)
               ;; 0.6.0
               (yas/current-snippet-table))))
        (if table
            (ac-yasnippet-candidate-1 table))))))

(defun ac-yasnippet-document (complete)
  "* Completes Documentation for Yasnippet"
  (let (templates only-one (ret ""))
    (setq templates (mapcar #'cdr 
                            (mapcan #'(lambda (table)
                                        (yas/fetch table complete))
                                    (yas/get-snippet-tables))))
    (mapc #'(lambda (template)
              (setq ret (format "%s%s\n%s\n" ret (yas/template-name template) (yas/template-content template))))
          templates)
    (when (string-match "\n\\'" ret)
      (setq ret (replace-match "" nil nil ret)))
    ret))

(defun ac-yasnippet-prefix ()
  "* Gets Yasnippet Prefix."
  (if (looking-back "[^ ]*")
      (match-string 0)
    nil
    )
  )

(ac-define-source yasnippet
  '((depends yasnippet)
    (candidates . ac-yasnippet-candidates)
    (action . yas/expand)
    (candidate-face . ac-yasnippet-candidate-face)
    (selection-face . ac-yasnippet-selection-face)
    (document . ac-yasnippet-document)
    (requires . 3)
    (prefix . "\\(\\<[^ ]*\\)")
    (symbol . "a")))
</pre>

--MatthewFidler

[new]
In windows the pos-tip doesn't work.  To get it to work change

<pre>
(eq window-system 'x)
</pre>

to

<pre>
(memq window-system '(x w32))
</pre>

I emailed maintainer, but I haven't heard anything.

--MatthewFidler

[new]
BUG: Do not display completion when there is only one completion *and* the word is already complete! That's just plain nonsensical!

----
CategoryCompletion


