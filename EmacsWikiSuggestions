This page is for recording (or discussion) of [::Suggestions] about the EmacsWiki Web site. 

If you want to record or discuss problems with the Web site (not with Emacs), please do so at EmacsWikiProblems.

Make sure your suggestion doesn't exist already or that your question has already been answered by checking the HowTo and WikiQuestions pages, respectively.

Discussion about the front page of the Wiki is at [[SiteMap Discussion]].

Discussion about the table of contents at the top of each page is at TableOfContentsDiscussion.

Discussion about the "Goto Bar", the links at the top and bottom of each page, is at GotoBarDiscussion.

Discussion about the TextFormattingRules used in contributing to pages  is at TextFormattingDiscussion.

'''Add your suggestions below this line.'''

== NearMap ==

If the NearMap must go it is probably because it included a moribund group of Wikis.  At one time Meatball and Community Wiki held promise.  What if it included WardsWiki (the WikiWiki) or the related Wikis on the InterMap or the WikiNode?

* http://c2.com/wiki/links.txt

This feature might still be useful. -- AaronHawley

== Cross-referencing basic Lisp info ==

Someone who had been using Emacs for some time came across an EmacsWiki page and complained on OpenQuestions that the Lisp code didn't have instructions how to use it.  It's a fair criticism.  We had a similar criticism awhile back that resulted in improving the InstallingPackages page.

I'm adding something like "Run this code by EvaluatingExpressions in Emacs or by adding it to your InitFile for Emacs" and hoping it's sufficient.

It's going to be a big pain to add them to every single Emacs Lisp code listing. -- AaronHawley

[new]
if you have the admin password there is a way to do global search and replace operations using Perl regular expressions -- if you want to try that? -- AlexSchroeder

== Be Able To Specify Which Manual, for `Manual:' Links ==

I recently added a glossary entry for `macro'.  I added this link: Manual:macros.  Unfortunately, there is also a `macros' page in the CC mode manual, so this link sends you to a page where you need to pick from the two manuals.  The choice will not be obvious to a newbie.

It would be good to be able to somehow specify the manual: `(elisp)'. E.g. ##[[Manual (elisp):macros]]## or some such.  Being able to specify more than one manual would be a nice-to-have (without it one would just create multiple links). -- DrewAdams



== Elisp files status ==

I just saw that Elena had tested some libraries for capitalising and found that

  > auto-cap.el doesn't work;
  > - auto-capitalize.el raises an error after the first word, then it
  > doesn't work any more.

This could be a lot of work for different users. Could we please try to find a way to mark libraries as working/nonworking? Maybe for different Emacs versions?

This is not the first time I make a suggestion similar to this.
However it is a very difficult problem so it is no surprise that we have not made any giant step forwards here,
but maybe we should try...?

Since elisp files are treated a bit special maybe there is some way to hook in new functionality like the one above?
(And maybe there could be added another functionality: storing the files in a repository like Launchpad - but that is another story.)

[new:DrewAdams:2009-08-07 02:34 UTC]
Yes, we've been around this block before... Bad idea (depending on what you mean). Individual libraries typically have some page associated with them where a user can provide feedback about problems. Notifying the library author is the best way to handle such feedback -- the author is likely to be the only one to do anything about fixing problems, in any case.

It's certainly a bad idea to have some simple yes/no or score as an indication of whether or how well a library works. And one person's "works" is another persons "doesn't work". Better to post specific problem descriptions. And it's best to deliver them to the person who will fix them (either via the wiki or in some other way).

Treating software problems via bug reports is, as always, the way to go. Just one opinion. -- DrewAdams

[new]
Yes, just working/non-working is of course not what I mean.
But the current situation is in my opinion unacceptable.
If someone has found a problem there should be an easy uniform way to report it (so it gets reported) --
and an easy uniform way to know about it (so that next person does not need to try and the author can get aware of what has happened).

Some kind of a bug tracker tailored to the needs here. -- LennartBorgman

[new:DrewAdams:2009-08-07 05:35 UTC]
Reported to whom? 

1. Reported to the library maintainer? That's best done on an individual basis. Some code is posted here but its maintainers seldom look here -- in that case, it's best to contact them by whatever means are described in the library. Even for other libraries here, I don't see the point of a central bug repository or scoreboard.

I look on the wiki often, and users can post bug reports for my libraries here, no problem. But I prefer to get bug reports by email, since there is often an back-and-forth of information that is simpler by email. I prefer that [[Icicles]] users use `M-x icicle-send-bug-report', which prepares an email. I imagine that different library maintainers have different preferences. Jane might like Twitter; John might like smoke signals.

2. Reported to other users? That too is best done on the particular page dedicated to that library -- that's where its users look for tips, problems, Q&A, and other info about that particular library. Again, a central tips or problem-description repository would be much less useful, IMO.

Bug ''tracking''? That's something else again. That too tends to be specific to the particular library and maintainer. Don't expect someone whose file was posted here long ago or by someone else to follow bugs through an EmacsWiki bug tracker.

I really think handling any kind of information relative to code posted here -- whether questions, bugs, tips, discussion, or anything else, is best handled in the pages here that concern that particular code, not in some consolidating bug tracker. That's in the nature of wiki contribution and sharing. I don't see the value of the "uniformity" you propose. Again, just one opinion. -- DrewAdams

[new]
Ok, you are against my proposal.
You seem to think the current situation is the best.

So why do you think of that it currently does not work?
Is not that a problem?

What do you think that a user that download a library that does not work think?

Where should the problem currently be reported on the wiki?
Should a user that founds a problem change the code in the library to say "this does not work", or?
(That might be a way, actually.) -- LennartBorgman

[new:DrewAdams:2009-08-07 14:30 UTC]
I don't see a particular problem, but I recognize that it could happen that a user not know how to contact the maintainer of some code s?he finds here. If that happens (no contact info in the file, no wiki homepage for the maintainer, no other info about the maintainer anywhere, no help from Google), then I suppose the user's only recourse is to write something up here, asking if others know how to contact the maintainer.

I'm not saying you don't see a problem. I'm saying I don't see your proposal as being a good solution. But it would be good to hear from others. Just one opinion. -- DrewAdams

[new]
I see a problem for example in the case I started this thread with and I have seen a lot of similar problems before.

I also see a problem in that there is no place to put the information in so that it can be shared.
Should a user that discovers a problem simply change the elisp file so that it barks or just put a comment in it, or?

And there is no "problem history" which also could help users trying something or finding a problem.

Beeing able to search for a special error message is something more that can be useful.
(Yes, it can be put in a comment in the elisp file, but that will disappear from searching after the problem is fixed so no one will see it if they are not fast enough
to discover the problem.)

I could go on...

[new]
In general, I think adding a bug tracker to the site and maintaining it is a chore I'm not looking forward to. Does anybody volunteer? I'd be willing to add code that will not only print a _Download_ link but also a bugtracking link for every source file.

I agree with Drew's sentiment, however. The individual files are not big projects. At least for my own files, I get about one or two emails per year, and most of them I no longer maintain anyway. I'd never check a bucktracking site, I'd never set up some sort of email notification, I wouldn't provide more support, work harder on bugs, or prioritize according to the needs of strangers on the Internet. I don't see myself in the target audience for a bug tracker.

Now, if *somebody else* set up a bugtracker, and authors who want to use it add some sort of special token to their source files, and I automatically link to the appropriate bug tracker accounts -- that might be worth an experiment. -- AlexSchroeder

[new]
Maybe a common bugtracker for all elisp files hosted on Emacs Wiki?
Then individual authors could add a token to those files for which they want to use that bugtracker.
They should then of course subscribe themselves to this bug tracker.

However I would like some structured bug handling including at least Emacs version.
Is there any bugtracker that can handle this?
(I suppose we should use one of the bugtrackers available and hosted on some good site like Launchpad.)
-- LennartBorgman

[new]
Will you set something up? I'm willing to write some code to connect elisp sources hosted on Emcs Wiki to link to an external bugtracker. -- Alex

[new]
I believe we maybe should think more about the structure needed first.
And how we can lower the threshold for users to use it (or perhaps whether there are any benefits of lowering the threshold?).

== User Names on RecentChanges Page ==

It would be good if user names were treated normally at RecentChanges, that is, to show a non-existant page like a non-existant page is usually shown. People might be encouraged to follow it and create a home page.

[new]
I haven't thought about this in a long time. Maybe you're right. -- AlexSchroeder

== Keep more revisions of each page ==

The history for a page should show several revisions. Currently, past revisions are removed eventually. In the worst case, this leaves exactly one revision. Even if the _diff_ at the bottom of a page continues to show the diff between the no longer extant last revision and the current revision, some more information would be helpful.

[new]
I've never had a need for this. I'll leave the suggestion standing. Perhaps more people want to support this? On the other hand,
I could add a link to the [[SVN repository]]. What do you think of that? Eg. the history for AlexSchroeder would also contain a link to
http://svn.savannah.gnu.org/viewvc/emacswikipages/AlexSchroeder?root=emacswiki -- AlexSchroeder


== Cross-Reference Alphabetical and Chronological Library Lists ==

Please put a link to the chronological listing of libraries on page [http://www.emacswiki.org/elisp/ Alphabetical List], and put a link to the alphabetical listing on page [EmacsWiki:action=rc;match=%5C.%28el%7Ctar%29%28%5C.gz%29%3F%24;from=1117497600;showedit=1 Chronological List] -- preferably near the top of the page. -- DrewAdams

[new]
These pages are generated automatically by the wiki script; writing code to provide this feature seems excessive. -- AlexSchroeder

== Downloading Elisp Files ==

There was recently a discussion on the developers list about saving elisp files from a web browser.
AFAICS if you save what you see in the browser you can get problem with certain characters.
This problem will be bigger the more non-ascii characters the elisp file contains.
The simplest way to avoid this seems to me to be to right click the file and choose /Save Link As/ or something similar.

What about telling this beside the /Download/ link on the elisp pages? -- LennartBorgman

[new]
I actually have a suggestion in the ElispArea telling people to try and avoid anything but ASCII or UTF-8 encoded files when uploading. I'm not sure your suggestion works. If it does, it certainly seems like a hack to me. The problem is that the server sends a HTTP header indicating that the content is UTF-8 encoded. If it is not, then the bytes are simply invalid. Whether the browser handles the bytes correctly, ignores the HTTP header, or drops the characters is undefined, as far as I am concerned. If you really need those ISO-2022 or KOI-8 encoded files, then use the _Replace text with a file_ link below the Save button to really upload a file. This file will then be handled correctly by the browser since in almost all cases, the browser will offer to save it instead of displaying it. -- AlexSchroeder

[new]
I am not sure. However please read the message from Jason here:
http://lists.gnu.org/archive/html/emacs-pretest-bug/2007-02/msg00241.html.
To me it looks like this leads to the same conclusion that I came to.
If the webserver is not properly configured the way I suggested above may still be a way to download a file as binary.

[new]
The way I read it, Jason doesn't provide any new information. He says the webserver doesn't change anything. That is correct. I say that the browser is getting incorrectly encoded bytes, and what happens when you do a "save" or "save as" is undefined. It might work in most cases. In the same thread Drew also mentions that the wiki strips control characters, since those are illegal in XHTML pages, irrespective of encoding used. Thus, using "save as" instead of "save" will probably solve many problems, but certainly not all. The only way to be sure that all problems are solved correctly is by replacing the page text with an uploaded file, as explained elsewhere.

The only thing we could do is either refuse page edits that attempt to add control characters or invalid encoding, thereby warning users, or automatically convert it into an uploaded page, hopefully with an appropriate explanation somewhere.

-- Alex

[new]
I do not believe the browser recieves incorrectly encoded bytes. I thought that it recieved the raw bytes and then interpreted them with the help of the mime headers. Is that not the case?

Using right-click + save-as solves the downloading problem, but not the problem with editing.
-- LennartBorgman

[new]
And the control character problem remains unsolved (mostly ^L, of course). -- Alex

== Layout ==

=== Edit Page ==

What about moving the "Please make sure..." text, plus the Username field above the text-input editing box? That would reduce the need to scroll the page by placing the Save and Preview buttons closer to the editing box (using Preview more than once while editing is common). In fact, it would be great if those two buttons could be on the same line as the "This change is a minor edit" check box, making them even closer to the edit box. -- DrewAdams

[new]
At the time I did this on purpose to make sure people read the blurb... :/

As for hitting Preview a lot: The access key should be P, so try M-p or C-p in your browser.

Other than that, if you have a CSS-based suggestion, we can try it out.
-- AlexSchroeder


=== Keys ===

[new]
Adding some style changes to break out &lt;code&gt; from the surrounding text would be very helpful for key strokes.  Especially if they are something like '<code>C-x (</code>' which is used for starting a keyboard macro. -- DocWhat

[new]
Do you mean in addition to using a monospaced font, something like a light gray background?
Alternatively, the weird accents-used-as-apostrophes such as `C-x C-c' usually work.
Unfortunately, the regular expression used prevents `C-x (' from working. :(

The particular regular expressions used, straight from the Perl code:

  if (/\G(\`|‘)([CM][- ][- A-Za-z0-9<>;:#]+)(\'|’)/cg
      or /\G(\`|‘)([-A-Za-z0-9\/\*]+[=]?)(\'|’)/cg) {
    return $q->code('&#x2018;' . $2 . '&#x2019;');
  }

Any suggestions for improvement? It would obviously be easy to style these occurrences.
But how?
-- AlexSchroeder

== Please write a summary ==

2007-08-12

* Without any comment at the summary the feed is absolute useless. Please consider writing a short but informative summary for your changes.

* I think it is quite helpful to know when an information was written. Every comment should have a date in front of.

* Most informations are useless for emacs beginners because the article is starting with a high assumption. Therefore there should be a standard layout for emacs modes like 1. what is it good for? 2. what i need to run it? 3. how could it get started? 4. which should be the minimum configuration? 5. everything else a geek have to know.

[new:AlexSchroeder:2007-08-12 08:19 UTC]
The situation is just the same on RecentChanges. I find that in terms of peer review, the author is usually more important than the summary; unknown authors have a higher chance of being checked by me. Unfortunately most feed readers do not support the RSS 2.0 WikiModule. Perhaps many people subscribe to the full feed including diff. That would be a good way to check out what has changed regardless of summary. If you're really desperate, you could try the [http://www.emacswiki.org/cgi-bin/emacs?action=rss;full=1;page=0;diff=1 RSS feed with diff but without page content]...

As for time stamps: Aren't we aiming for "timeless" information? At least as far as Emacs releases go. We will have people running Emacs 22 for a decade now, for all I know. Old information is not necessarily useless, so putting dates on ordinary pages can be misleading as well. The only time a time stamp makes sense is when you're putting personal thoughts on a page -- like this conversation, for example. But a wiki can be something between a FAQ and a manual, and neither has time stamps.

When it comes to page content, I guess you're right. We're somewhere between the FAQ (but there aren't many frequently asked questions), and an extension of the ElispManual. We're certainly not the manual itself.

== Drew Adams' Libraries == 

Drew I respect your work and all that you've done with Emac and on EmacsWiki. However, PLEASE can a emacswiki pages be required by sanction to be limited to only 1 (One!) reference to instances of Drew's libraries, and then *ONLY* after other relevant examples, code, etc. pertinent to the a pages context. This site is *SERIOUSLY* limited by Drew's spam and suffers because of it to the extent that it is becoming unusable because of the superfluous `Icicles.*' references strewn about.  There is a point at which the entire Emacs community suffers because of Drew's insistence on xrefs to anything remotely related to his libraries. -- mon_key

[new]
The wiki encourages people to post their own code, and to cross-references pages, and by extension, people will cross reference their own code wherever it seems appropriate. If nobody else is as prolific, then that's hardly Drew's fault. On the contrary, *I wish other people would add more crossreferences.*

There's also a philosophical point, here. How is Drew's code different from other people's code? The only thing I see is that his code is not part of Emacs. But the wiki was created to enable just that: *Hosting code and documentation that is not part of Emacs.* There will always be forces that move the wiki in some direction, and it's ok to support particular goals. In fact it's ok to not like Drew's contributions. But the correct response is to make something better. Add crossreferences to even better pages. Make the crossreferences themselves better by commenting them and saying what the referenced library does and whether it does it well. Be constructive. Help build a better wiki by integrating other people's work instead of preventing them from contributing just because you don't agree with their point of view.

I have trouble understanding how this site is "bold-caps-seriously" limited by Drew's contributions, and how his contributions can in all honesty be called "spam". The tone of the complaint makes it hard for me to take it seriously, even though I tried to give as straight an answer as I could.

Also, you might consider not complaining anonymously.

-- AlexSchroeder

[new]
I've added a sig, now its not anonymous. I _hope_ I do my best to try and contribute constructively and to make judicious commenting on libraries and xrefs. That said, I tend to put them in my source which seems like a reasonable way to voice support for particular authors, goals, pkgs etc. You are correct, and I agree, the matter is a bit of a philosophical point. If everyone xrefd with Drew's zeal as a philosophical matter I personally think the site would suffer, obv. YMMV. As I say, I truly do respect what Drew has done w/ Icicles; this doesn't make it OK to splatter it about at the vaguest possible connection. FWIW there is a search bar, it is quite useful and I'm surprised sometimes by how readily it will point _me_ to what _I_ am looking for.  -- mon_key

[new]
Maybe the problem is that Drew's libraries can be monolithic, [[Icicles]] in particular; There is some great stuff in [[Icicles]] but I don't want it all.
That said, I don't find his cross-referencing excessive. --CH

== CSS (headers, printing) ==

[new]
For some ideas on print style sheets, see [http://alistapart.com/articles/goingtoprint/ Eric Meyer's article on A List Apart]. One particularly nice idea shows how to display the URL with hyperlinked text, which would be handy here.
--AmyYoung

[new]
What exactly should we do? -- AlexSchroeder

[new]
Could we go back to the situation where in default CSS the rendering of different headers level differ only in the font size (but do differ) down until last HTML header level? -- JakubNarebski

[new]
Not unless more people support this since I don't like it. -- AlexSchroeder

[new]
In graphical browsers second-level headers currently are the same size as regular text, just italic.  This does not standout at all, making them bold would be much better in my eyes.  For example I just added a page with a long list of code snippets at the end. I reorganized them thematically and then added second-level headers. Boy that was less readable as before! So I had to add the horizontal lines back that I previously removed.  Ps: why do we skip = and use == instead? -- JonasBernoulli

[new]
Take a look at the [[CSS]] page. That will allow you to use your own CSS instead of relying on the default. If you write a CSS file that makes a significant improvement and convince some other long-time users of the site, I'll be happy to use it instead of what we have right now.

As to the /why/ of the current CSS: I'm happy with the look of H2 and H3 headers. I believe HTML pages should have but one H1 element -- the one at the top of the page, and I believe any page on this wiki should be written with just H2 and H3 sections and subsections. I find the need for H4 subsubsections to be a sign that the text ought to be reorganized instead. I also find horizonzal lines unnecessary except when creating the pseudo-footers separating categories and related pages from the rest of the page. It's how I interpret the suggestions given by Robert Bringhurst in his _The Elements of Typographical Style_, p. 61ff. Typographically, poise is mad of white space. Don't permit the titles to oppress the text. Use as many levels of headings as you need: no more and no fewer. There were people who didn't like the amount of whitespace I prefer, which is why I'm using the theme "with more whitespace around headers and small-caps". -- AlexSchroeder

== Use div#main etc ==

Could you please put id on relevant div tags so it is possible to play a bit more with the CSS? (like &lt;div id="main"> )

-- LennartBorgman

[new]
There is div.content and there is div.wrapper.  I'm not a CSS expert, so I can't tell what it is you're insinuating that makes adding another div necessary for CSS trickery? -- AaronHawley

[new]
This are CSS classes, not Id:s. Putting id:s on some important div tags makes it easier to under stand IMO. -- LennartBorgman

== Click the heading to search for pages in this category / that link here ==

This bothers me similarly to the above since it just adds clutter for anyone who knows what clicking on a header does.  I would like to remove this too but this would probably not be well received.  I would suggest that this information is somehow shown on all pages but in an less intrusive way.

Maybe somewhere in the footer close to where the language links are too.  Then again this link ("Pages linking here") as well as the links to the translations can easily be missed.  Maybe both kinds should be placed somewhere more visible?  But if you do this please do so in a way that makes it easy to hide it using a style sheet.  -- JonasBernoulli

== Safari Reader ==

[new:JoonhwanLee:2011-10-24 12:54 UTC]
It'd be nice if i can read emacswiki pages with safari's new 'reader' tol feature... or is there any option for this already? - JoonhwanLee

[new]
On RecentChanges, click on the various RSS links. Works for me on my iPhone. – Alex

[new:JoonhwanLee:2011-10-24 15:01 UTC]
Oh, there's a way already. good. but, would  be better to read a certain page ;) Thx anyway.
----
CategoryEmacsWikiSite
