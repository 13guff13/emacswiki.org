The SlickEdit editor has clever line-wise behavior: if no text is selected, the copy and cut commands act on the current line instead. (TextMate and VisualStudio are purported to do this also.)

MacChan came up with a couple of ways to get the same behavior in Emacs. (It is assumed that [TransientMarkMode Transient Mark Mode] is enabled globally -- that is, ##(transient-mark-mode t)## -- which is the default in Emacs 23 and onwards.)

== Advice ==

The most elegant solution is to [AdvisingFunctions advice] ##kill-ring-save## and ##kill-region## (Emacs' default copy and cut commands). The code below can be put in <tt>[InitFile .emacs]</tt>:

    (defadvice kill-ring-save (before slick-copy activate compile)
      "When called interactively with no active region, copy a single line instead."
      (interactive
       (if mark-active (list (region-beginning) (region-end))
         (message "Copied line")
         (list (line-beginning-position)
               (line-beginning-position 2)))))

    (defadvice kill-region (before slick-cut activate compile)
      "When called interactively with no active region, kill a single line instead."
      (interactive
       (if mark-active (list (region-beginning) (region-end))
         (list (line-beginning-position)
               (line-beginning-position 2)))))

Thus, `M-w' with no selection copies the current line, `C-w' kills it entirely, and `C-a M-w C-y' duplicates it (compare with `dd' and `yyp' in [ViKeys vi]). Below is a comparison of default behavior for deleting lines among editors.

* Emacs: `C-S-backspace' (or `C-a C-k C-k')
* Vim: `dd'
* !SlickEdit: `C-x' (will cut the whole line without selection)
* !UltraEdit: `C-e'
* nano (or proprietary Pico): `C-k'

Someone asked: "Doing this as advice (as opposed to a new function bound to `C-w') seems like a bad idea -- what happens if some other elisp function calls ##kill-region##?" This shouldn't be a problem, however, since the advice only takes effect when the functions are called [InteractiveFunction interactively].

== Functions ==

An alternative to ##defadvice## is to define custom copy and cut commands.

    ;; Implement SlickEdit's default copy and cut behavior.
    ;; If region is inactive, copy and cut will operate on the current line.
    ;; (As if the current line is currently selected.)
    ;;
    ;; Please send comments to emailmac (at) gmail com

    (defun slick-copy ()
      (interactive)
      "Copy the current line if region is inactive.
    Otherwise it behaves just like `kill-ring-save'."
      (condition-case VAR (progn (mark) (kill-ring-save (region-beginning) (region-end)))
        ('mark-inactive
         (kill-ring-save (line-beginning-position) (line-beginning-position 2))
         (message "Copied line"))))

    (defcustom slick-save-to-kill-ring t
      "Specify whether slick-cut should use the kill-ring.
     If `nil', it will delete the line instead of killing it.")

    (defun slick-cut (toggle-save-to-kill-ring)
      (interactive "P")
      "Cut the current line if region is inactive.
    Otherwise it behaves just like `kill-region'.

    If prefix argument is specified, will use `delete-region'
    instead (in case you are deleting a bunch of junk and you don't
    want to pollute your kill-ring.) Prefix argument will toggle back
    to `kill-region' again."
      (condition-case VAR (progn (mark) (kill-region (region-beginning) (region-end)))
        ('mark-inactive
         (if toggle-save-to-kill-ring
             (setq slick-save-to-kill-ring
                   (if slick-save-to-kill-ring '() t)))
         (if slick-save-to-kill-ring
             (progn (kill-region (line-beginning-position) (line-beginning-position 2))
                    (message "Cut line"))
           (progn (delete-region (line-beginning-position) (line-beginning-position 2))
                  (message "Killed line"))))))

    (global-set-key "\M-w" 'slick-copy)
    (global-set-key "\C-w" 'slick-cut)

== Discussion ==

I like the defadvice, very nice solution.  I changed the ##line-beginning-position 2## to be ##line-end-position## so that I don't get an extra new line when I paste. -- Dmb

[new]
For killing the current line, there's the ##kill-whole-line## function, usually bound to 'C-S-backspace'. That's a bit easier than the 'C-a C-k C-k' suggested above. -- sockmonk

----

See also CopyingWholeLines and WholeLineOrRegion.

----
CategoryEmulation
CategoryRegion
