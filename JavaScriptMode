For more general information on working with JavaScript in Emacs, see the JavaScript page.

A mode for JavaScript editing has been built into Emacs since 23.2.

js-mode includes:

* Support for cc-mode's comment wrapping.
* C preprocessor support -- yes, people use this with JavaScript.
* Full suite of movement commands, including ##beginning-of-defun##, ##end-of-defun##, and so on.
* Configurable recognition of class definitions. JavaScript, being a prototype-based language, has no "classes" per se, but there are constructions used to mean the same thing.
* Hierarchical ##imenu## support using the aforementioned class definition recognition. In addition to recognizing top-level functions, ##imenu## will recognize methods.
* Improved fontification of regular expression literals

== Other JavaScript modes ==

Other JavaScript modes include [[Js2Mode]], which has built-in syntax checking, linting and other goodies, and [http://github.com/thomblake/js3-mode/ js3-mode], which combines Js2Mode and Emacs's own js-mode.

== Fix for Greasemonkey scripts ==

The following fix from [[EmacsInitFileOfSylecn|Sylecn]] addresses a bug where the metadata block in Greasemonkey scripts confuses the syntax highlighter:

    (eval-after-load 'js
      '(progn
         (setq js--regexp-literal-fix
               "[^=][=(,:]\\(?:\\s-\\|\n\\)*\\(/\\)\\(?:\\\\.\\|[^/*\\]\\)\\(?:\\\\.\\|[^/\\]\\)*\\(/\\)")
         (setq js-font-lock-syntactic-keywords-fix
               ;; "|" means generic string fence
               `((,js--regexp-literal-fix (1 "|") (2 "|"))))
         (setq js-font-lock-syntactic-keywords js-font-lock-syntactic-keywords-fix)))

----
ProgrammingModes
CategoryJavaScript
