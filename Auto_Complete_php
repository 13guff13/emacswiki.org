=ac-php   [http://melpa.org/#/ac-php,[img:http://melpa.org/packages/ac-php-badge.svg]]=

emacs auto-complete for php

use [https://github.com/xcwen/phpctags,phpctags] gen tags 

and use <tt>ac-php</tt>  work with tags 

==Table of Contents==

* [#test,Test]
* [#usage,Usage]
* [#php-extern-for-complete,php extern for complete]
* [#rebuild-tags,rebuild tags]
* [#fqa,FQA]


==Test==

* install <tt>php5-cli</tt> command  for phpctags
<tt>bash 
\#UBUNTU
localhost:~/$ sudo apt-get install php5-cli 
</tt>
* install <tt>cscope</tt> command  for <tt>ac-php-cscope-find-egrep-pattern</tt>
<tt>bash 
\#UBUNTU
localhost:~/$ sudo apt-get install cscope
</tt>
* example:
[img:https://raw.githubusercontent.com/xcwen/ac-php/master/images/ac-php.gif]


<tt>bash
\#backup old .emacs
cp ~/.emacs ~/.emacs.bak
</tt>

save it as <tt>~/.emacs</tt>
<tt>elisp
  (setq package-archives
        '(("melpa" . "http://melpa.milkbox.net/packages/")) )
  (package-initialize)
  (unless (package-installed-p 'ac-php )
    (package-refresh-contents)
    (package-install 'ac-php )
    )
  (require 'cl)
  (require 'php-mode)
  (add-hook 'php-mode-hook
            '(lambda ()
               (auto-complete-mode t)
               (require 'ac-php)
               (setq ac-sources  '(ac-source-php ) )
               (yas-global-mode 1)
               (define-key php-mode-map  (kbd "C-]") 'ac-php-find-symbol-at-point)   ;goto define
               (define-key php-mode-map  (kbd "C-t") 'ac-php-location-stack-back   ) ;go back
               ))
</tt>

<tt>bash
cd ~/
git clone https://github.com/xcwen/ac-php/
\#test php files in ~/ac-php/phptest
\#open file for test
emacs ~/ac-php/phptest/testb.php
</tt>

=Usage=

* install <tt>php5-cli</tt> command  for phpctags
<tt>bash 
\#UBUNTU
localhost:~/$ sudo apt-get install php5-cli 
</tt>
* install <tt>cscope</tt> command  for <tt>ac-php-cscope-find-egrep-pattern</tt>
<tt>bash 
\#UBUNTU
localhost:~/$ sudo apt-get install cscope
</tt>
* install <tt>ac-php</tt> from melpa
<tt>elisp
(setq package-archives
    '(("melpa" . "http://melpa.milkbox.net/packages/")) )
</tt>


"M-x" :<tt>package-list-packages</tt>  find  <tt>ac-php</tt> install

* emacs php-mode function  define


<tt>elisp
  (add-hook 'php-mode-hook
            '(lambda ()
               (auto-complete-mode t)
               (require 'ac-php)
               (setq ac-sources  '(ac-source-php ) )
               (yas-global-mode 1)
               (define-key php-mode-map  (kbd "C-]") 'ac-php-find-symbol-at-point)   ;goto define
               (define-key php-mode-map  (kbd "C-t") 'ac-php-location-stack-back   ) ;go back
               ))
</tt>

<tt>ac-php-remake-tags</tt> ;; <strong>if source is changed ,re run this commond for update tags</strong>

<tt>ac-php-show-tip</tt> ;; show define at point

<tt>ac-php-cscope-find-egrep-pattern</tt> ;; find current-word in project 

* mkdir ".tags"  in root of project


<tt>bash
cd /project/to/path #  root dir of project
mkdir .tags
</tt>
\<strong> DONE 

==Php Doc for complete==

define class memeber type :

<tt>public  $v1;</tt>  =>
<tt>php
/</strong><strong>
 </strong> @var classtype
 <strong>/
public $v1;
</tt>

define class function   return type:

<tt>public  function get_v1()</tt>  =>
<tt>php
/</strong><strong>
 </strong> @return classtype 
 <strong>/
public function get_v1()
</tt>

define variable: 

<tt>$value=new Testa ();</tt> => 
<tt>php
/</strong><strong> @var $value  Testa </strong>/
$value=new Testa();
</tt>

like this
<tt>php
class Testa {
    /<strong></strong>
     <strong> @var Testb; 
     </strong>/
    public  $v1;
    /<strong></strong>
     <strong> @var \Test\TestC; 
     </strong>/
    public  $v2;
    public function set_v1($v){
        $v=trim($v);
        //define value type
        /<strong></strong> @var $v Testb<strong>/
        $v=new Testb();
        $this->v1=$v;
    }
    /</strong><strong>
     </strong> 
     <strong> @return  \Test\TestC; 
     </strong>/
    public function get_v1(){
        $this->get_v1("ss");
    }
}
</tt>

==Rebuild Tags==

tags file location dir is in  <tt>.tags</tt>   for example:  <tt>/project/to/path/.tags</tt>
<tt>bash
localhost:~/ac-php/phptest/.tags$ tree .
.
├── tags-data.el
└── tags_dir_jim
    ├── a.tags
    ├── testa.tags
    └── testb.tags
1 directory, 4 files
</tt>

<strong>if source is changed ,re run this commond for update tags</strong>: <tt>ac-php-remake-tags</tt> 

if php file cannot pass from <tt>phpctags</tt>.

you can find any  error from <tt>Messages</tt> buffer  fix it and next

like this 
<tt>
phpctags[/home/jim/phptest/testa.php] ERROR:PHPParser: Unexpected token '}' on line 11 - 
</tt>
you need fix testa.php  error and re run <tt>ac-php-remake-tags</tt>

if show:
<tt>
no find .tags dir in path list :/home/jim/phptest/ 
</tt>

mk .tags dir  like this:

<tt>mkdir /home/jim/phptest/.tags</tt>

or

<tt>mkdir /home/jim/.tags</tt>

or

<tt>mkdir /home/.tags</tt>

==FQA==
