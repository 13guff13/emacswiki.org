Git is a distributed version control system much like [[Mercurial]], [[Bazaar]]
and DaRcs.  It was written for the linux kernel hackers but it is now used by other high-profile FreeSoftware projects.

Git is available from http://git-scm.com/. Documentation can be found at http://git-scm.com/documentation.

== Emacs Standard Support ==

Git is supported by ##vc-git## since 22.1, accessible via
VersionControl and
DistributedVersionControl.

##vc-git## is reported to work well.
NB You should probably upgrade Emacs to obtain standard vc-git support as vc-git is not being back-ported.
There are two front end wrapper packages that can be used with ##vc-git##:

# [http://github.com/tsgates/git-emacs/tree/master git-emacs], which provides status bar icons for git status

# ##git.el## and ##git-blame.el## (a frontend to the git-blame command line tool) which are distributed in the Git source distribution in the
<tt>[http://www.kernel.org/git/?p=git/git.git;a=tree;hb=HEAD;f=contrib/emacs contrib/emacs]</tt>
directory (already installed in Debian as part of ##git-core##, or more recently in the separate ##git-el## package). The README file supplied in ##contrib/emacs## explains how to install them. Some introductory tutorial material located at [http://parijatmishra.wordpress.com/2008/09/06/up-and-running-with-emacs-and-git/ Up and Running with Emacs and Git]

In emacs 23 the command showing the repository status C-x v d has been rewritten, it supports checking in multiple files/directories at a time, and has fancy display.  It can be extended with git specific functions.
vc-git-grep can be used and a UI for git grep.
vc-git.el also includes support for git blame, in the vc-annotate command (C-x v g).

== Magit ==

[[Magit]] is the most popular interface to git. If you are new to git and do not need support for other vcs this is likely the package you should try first.

* Get it from: http://magit.github.com/magit
* Manual: http://magit.github.com/magit/magit.html

== Other packages ==

*Egg* (*Emacs got Git*) was forked from Magit and has developed independently for several years.

* Homepage: http://github.com/byplayer/egg
* Repository: ##git clone git://github.com/byplayer/egg.git ##
* Documentation: 
** http://bogolisk.blogspot.com/ (older version, still useful and includes screenshots)

*egit* is an Emacs Git history interface intended to be similar to qgit or gitk. Requires git.el.

* Homepage: http://github.com/jimhourihan/egit/tree/master
* Repository: ##git clone git://github.com/jimhourihan/egit.git##

*Gitsum* is a mode to do interactive partial commits with Emacs in the style of ##darcs record##.

* Homepage: http://github.com/chneukirchen/gitsum/tree/master
* Repository: ##git clone git://github.com/chneukirchen/gitsum.git ##
* See also: http://chneukirchen.org/blog/archive/2008/02/introducing-gitsum.html

*git-emacs* is yet another git mode on emacs for newbies.

* Homepage: http://github.com/tsgates/git-emacs/tree/master
* Repository: ##git clone git://github.com/tsgates/git-emacs.git##
* Documentation: http://files.taesoo.org/git-emacs/git-emacs.html

*mo-git-blame* is an interactive and iterative major mode for git blame.

* Homepage: http://www.bunkus.org/blog/2009/10/an-interactive-iterative-git-blame-mode-for-emacs/
* Repository: ##git clone git://github.com/mbunkus/mo-git-blame.git##
* Documentation: https://github.com/mbunkus/mo-git-blame/blob/master/README

*tortoise-git.el* is a simple interface to TortoiseGit within emacs

* Homepage: http://floatsolutions.com/blog/2010/05/tortoisegit-interface-for-emacs/
* Repository: http://github.com/openist/tortoise-git-emacs

GitDwim defines context-aware commands.

== Also see ==

* EmacsFromGit -- A Git mirror of the Emacs CVS repository is available.
* [http://github.com github] is a popular website to host and browse git repositories.
* [http://xtalk.msk.su/~ott/en/writings/emacs-vcs/EmacsGit.html Work with Git from Emacs] is an article by AlexOtt that provides more information about each of the mentioned packages.
* [http://files.taesoo.org/git-emacs/git-emacs.html A Guided Tour of emacs-git] (by TSKim)

== Configuration ==

=== Debian ===

If you are using the Debian git packages, you can add the following to
your ##.emacs## to make all of these available (if you are not
using the Debian packages, adjust the path to suit):

'''Note''': This does not work in Emacs 23.0 - git is included.


  (setq load-path (cons (expand-file-name "/usr/share/doc/git-core/contrib/emacs") load-path))
  (require 'vc-git)
  (when (featurep 'vc-git) (add-to-list 'vc-handled-backends 'git))
  (require 'git)
  (autoload 'git-blame-mode "git-blame"
            "Minor mode for incremental blame for Git." t)

git.el will look into your git configuration for committer name and email address.  If that fails, it uses the Emacs defaults.  If you rely on environment variables for your configuration, beware. (And consider `git-committer-name' and `git-committer-email')

=== How to use Git with VC ===

Question: I would like to do everything from within Emacs (without having to
resort to the command-line).  I was able to create a new repository with
`vc-create-repo', but don't know how to add all the files in the
directory with `vc-next-action' -- something akin to (eventually
calling the backend command) ##git add .## -- without having to add each
file separately.  Any tips?

Answer: With vc-git.el 2007-11-29 or later, you can do

* `C-x v d' to see the (empty) directory; then
* `v t' to toggle visibility of "modified" files; then
* `m' to mark files to add; and finally
* `v v' to do the next action (i.e, commit)

NOTE: This does not seem to work with remote repos (vc-git.el 2010-03-09).

Question: How do I revert an uptodate file to a previous version? How do I manage branches?

[1]: Sorry, but it is absolutely unclear what vc-git.el (coming with emacs23) provides. Neither Info nor vc-git.el give any information about what works with remote repositories and how (cloning, staging, registering, commiting, ...).
What is stash?
What is the master-file?
Why does vc-dir not show the remote-url?

----
CategoryVersionControl
