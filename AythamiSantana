== Datos personales ==

Aythami Santana. Las Palmas, Canarias, España. AKA. [::u4a].

== Comentarios ==

¿Estas perdido? Te dire que “Emacs is the extensible, customizable, self-documenting real-time display editor!”. Si, para que voy a traducir si esta es la mejor y mas breve manera de definirlo.

Lo que me movio a usar emacs fue la necesidad y el desconcierto de tener que aprender a usar un nuevo editor con cada lenguage de programacion.

Bajo mi punto de vista Emacs, ademas de sus excelentes capacidades de edicion, ofrece mediante Elisp, una interfaz totalmente customizable de los sistemas operativos basados en UNIX.


Puntos clave para la edicion efectiva:
 
 - Movimiento (keystrokes, marcas, enlaces)
 - Busqueda de datos y documentacion (resaltado de busqueda, ctext, cscope, grep)
 - Autocompletado y correccion
 - Vision estructurada (resaltado de sintaxis, folding)

== Modos que uso ==

erc -- mensajeria instantanea(irc, messenger, gtalk...)

c-mode -- programar en c y c++

gud -- Depuracion

eshell -- Consola

tramp -- Edicion y compilacion remota

emms -- Reproduccion de audio y video

w3m: -- Navegar

calc -- calculadora algebraico-cientifica


== Capturas ==

[[image:AythamiScreenshot1]]

== Mis configuraciones ==

AythamiSantanaDotEmacs

== Mis proyectos ==

=== Bot simple para msn usando bitlbee ===

<pre>
(defun respuesta-rexp(base ristra)                                                                                           
  ;; Busca exp regulares de la base de conocimiento en la ristra                                                             
  (cond                                                                                                                      
   ((eq base nil) nil)                                                                                                       
   ((string-match (car(car base)) ristra) (cdr(car base)))                                                                   
   ((respuesta-rexp (cdr base) ristra))))                                                                                    
                                                                                                                             
(defun bot (proc parsed)                                                                                                     
  ;; Activar el bot y cargar la base del conocimiento                                                                        
  (interactive)                                                                                                              
  (save-excursion                                                                                                            
    (switch-to-buffer "#emacs-es")                                                                                           
    (goto-char (point-max))                                                                                                  
    (setq nick (replace-regexp-in-string "!.*" ": " (erc-response.sender parsed)))                                           
    (cond                                                                                                                    
     ( (not (search "chisme" (erc-response.contents parsed))) nil)                                                           
     ( (search "ayuda" (erc-response.contents parsed))                                                                       
       (erc-cmd-SAY (concat nick "Comandos disponibles: date tiempo guagua memoriza")) )                                     
     ( (search "fecha" (erc-response.contents parsed)) (erc-cmd-SAY (concat nick (eshell-command-result "date"))) )          
     ( (search "tiempo" (erc-response.contents parsed)) (erc-cmd-SAY (concat nick (tiempo "gran+canaria"))) )                
     ( (search "guagua" (erc-response.contents parsed)) (erc-cmd-SAY (concat nick (guagua "48"))) )                          
     ( (search "memoriza" (erc-response.contents parsed)) (memo(erc-response.contents parsed)) (erc-cmd-SAY (concat nick (ca\
r conocimiento))) )                                                                                                          
     ( t  (erc-cmd-SAY (concat nick (car(respuesta-rexp conocimiento (erc-response.contents parsed))))) ) )))                
                                                                                                                             
(add-hook 'erc-server-PRIVMSG-functions 'bot t)                                                                              
                                                                                                                             
(load-file "~/elisp/chismebd.el")
</pre>

==== Funcionalidades ====

<pre>
(defun memo(cosa)                                                                                                            
  (push cosa conocimiento))                                                                                                  
                                                                                                                             
(defun geturl(url)                                                                                                           
  (call-process "curl" nil "temp" nil url))                                                                                  
                                                                                                                             
(defun tiempo(lugar)                                                                                                         
  (geturl (concat "http://www.wunderground.com/cgi-bin/findweather/getForecast?query=" lugar))                               
  (switch-to-buffer "temp")                                                                                                  
  (goto-char(point-min))                                                                                                     
  (search-forward "tempf")                                                                                                   
  (search-forward "value=")                                                                                                  
  (copy-region-as-kill (+ (point) 1) (+ (point) 3))                                                                          
                                        ;(kill-buffer "temp")                                                                
  (concat (car kill-ring) "F"))                                                                                              
                                                                                                                             
(defun guagua(linea)                                                                                                         
  (geturl (concat "www.guaguas.com/lineas/linea" linea ".htm"))                                                              
  (switch-to-buffer "temp")                                                                                                  
  (goto-char(point-min))                                                                                                     
  (search-forward "celdaminutos\">")                                                                                         
                                        ;(search-forward "value=")                                                           
  (copy-region-as-kill (+ (point) 1) (+ (point) 3))                                                                          
  (kill-buffer "temp")                                                                                                       
  (concat "Sale " (car kill-ring) " Vuelve " (car kill-ring)))                                                               
                                                                                                                             
(defun html2text()                                                                                                           
  (interactive)                                                                                                              
  (while (/= (point) (point-max))                                                                                            
    (kill-region (- (search-forward "<") 1) (search-forward ">"))))
</pre>

==== Base de conocimiento ====

<pre>
;chismebd.el
;---

(setq conocimiento '(                                                                                                        
                     ("saluda" "hola a todos")                                                                               
                     ("h?o+la\\|buenas\\|nas" "Hola, sabias que soy un bot?")                                                
                     ("adios\\|chao\\|nos vemos\\|hasta luego" "Venga")                                                      
                     ("put[ao]\\|cabrona?\\|perr[ao]\\|mamona?" "Tu o tu madre?")                                            
                     ("mierda\\|coÃ±o\\|teta\\|culo\\|polla\\|cojones" "Comportese")                                         
                     ("j[aeiou]+" "Que risa")                                                                                
                     ("\!" "Que bien")                                                                                       
                     ("Que\\|Como\\|Cuando\\|Donde\\|Por que\\|Para que" "Ni idea")                                          
                     (".*" "Soy un bot")))
</pre>

== Enlaces externos ==

 <include "http://del.icio.us/rss/arreche/emacs">

== Diverso ==

[new]
Welcome to the wiki! :) Nice to see some more Spanish pages on the wiki. I thought it was interesting to see how you changed the purpose of [[ÁreaElisp]]. In English, the ElispArea explains how to upload and download elisp files. I guess it is no longer needed. We have the elisp code stuff in CategoryCode. I don't think you have to do anything – I think the language groups should be able to use their pages as they wish. -- AlexSchroeder

----
CategoryHomepage
