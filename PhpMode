== Overview ==

Major mode for editing PHP files

== Download ==

* http://php-mode.sourceforge.net -- maintained by AaronHawley that supports Emacs 22 (CcMode 5.31).
** This is included in [NxhtmlMode nXhtml] with only slight modifications, and seems to be the most popular. (However this is still version 1.4.1)
** There is also Lisp:php-mode-improved.el, a version by DavidHouse branched from the version in nxhtml-mode that fixes a couple of annoying bugs (see the comments at the top of that file).
* http://www.ontosys.com/src/php-mode.el -- maintained by FredYankowski
* http://www.loveshack.ukfsn.org/emacs/index.html#cc-php-js -- patch for CC mode from Emacs 22.1, and files byte-compiled for Emacs 21/22.  See http://www.loveshack.ukfsn.org/emacs/index.html#html-php.el for PHP embedded in HTML.
* http://deboutv.free.fr/lisp/php/index.php - Deboutv php-mode, originally for Xemacs
* http://mewde.googlecode.com/files/php-mode-new.el -- Mewde Project php-mode maintained by AhmetUsal; updated 2008-10-07
** Based on the Deboutv Xemacs and Sourceforge php-mode.This is mixed mode.  [http://mewde.blogspot.com/2008/10/new-update-for-emacs-php-mode.html Details here.] Some big differences from Deboutv inheritance mode; code comments inserting Sourceforge php-mode style; php-templates doesn't automatic insert; Class-function templates has shortcuts; otherwise; M-x php-template-TAB list all options, then you can select and insert.  We don't have old "Sources" menu, etc.But we have natural Imenu and outline support with additional templates menu.
Auto-completes PHP functions and handles indentation both Sourceforge php-mode and Deboutv php-mode style. It has templating support for class, functions, and loops. Plus; all Sourceforge php-mode features supporting. I tested with emacs23 environment; both vista and Ubuntu hardy; even works with yasnippet mode together; just disable abbrev-minor-mode, or if you are insert php template, function etc; after typing and tabbing completion; type M-Space then going on; it works fine...

== Related modes ==

Beside those php-mode there are the following possibilities to mix them with better HTML support. See also MultipleModes.

* MuMaMo
* MmmMode
* Lisp:two-mode-mode.el

For example; I don't use any multiple major mode for php; I put all yasnipet html snippets to inside php snippets; and I use with new php-mode for complex php-html code pages.

== Mewde php-mode ==

[new]
This, in comparison to the modes that primarily coerce CcMode to work nicely with PHP, has a great deal of features. Perhaps I overlooked something in the documentation, but it doesn't seem to handle comments that begin with two forward slashes. --ShadyTrees

[new]
: Looking through the php-mode.el file it looks like there is a mistake on line 2579. I just started learning elisp/how to make modes this morning though, so that's probably wrong. I fixed it in mine though, and it seems to be working. I uploaded my version of the file and more detail about what i /think/ is going on in [http://code.google.com/p/mewde/issues/detail?id=3 a bug I filed] on the mewde google code site. I have no reason to think it won't blow up, although if it does I'll comment here and at the bug -[http://blog.quodlibetor.com quodlibetor]

[new]
Is mewde php-mode better than the one included with nXhtml?
Could someone please make a comparison and also check if this php-mode works with latest nXhtml?

== Multiple modes with MuMaMo ==

It has built-in support for toggling between html-mode/nxhtml-mode and php-mode. See MultipleModes.

I am including a very slightly modified version of Aaron's php-mode version in [NxhtmlMode nXhtml].


== Multiple modes using mmm-mode.el ==

http://sourceforge.net/projects/mmm-mode

The PHP mode by FredYankowski explains how to do this in the commentary. For those of you using other PHP modes, add the following to your ~/.emacs:

{{{
(require 'mmm-mode)
(setq mmm-global-mode 'maybe)
(mmm-add-mode-ext-class nil "\\.php3?\\'" 'html-php)
(mmm-add-classes
 '((html-php
    :submode php-mode
    :front "<\\?\\(php\\)?"
    :back "\\?>")))
(autoload 'php-mode "php-mode" "PHP editing mode" t)
(add-to-list 'auto-mode-alist '("\\.php3?\\'" . sgml-html-mode))
}}}

If you'd like to know how you can use mmm-mode to combine psgml-mode, php-mode, and css-mode to get a really fancy web authoring environment, take a look at HtmlModeDeluxe.

Another approach is to narrow the buffer of an HTML file to show just the PHP block and switch to PHP-mode.  This is the approach taken by HtmlHelperMode.

== Using two-mode-mode ==

* http://www.braindump.dk/en/wiki/?wikipage=XEmacsPHP (broken)

I found the following in the wayback machine from the site listed above. This mode seems to work quite well is a very light-weight. I had to edit two-mode-mode.el to use 'php-mode' for PHP files rather then C++ mode but other then that, it cooks just fine.

{{{
(setq auto-mode-alist
      (append '(
		("\\.html$" . two-mode-mode)
		("\\.php$" . two-mode-mode)
		("\\.php3$" . two-mode-mode) )
	      auto-mode-alist) )
}}}

- JamesKnight

== Easy Toggling between PHP & HTML modes ==

I use the following lisp in my JonathanArnoldDotEmacs files:

{{{
;; Toggle between PHP & HTML Helper mode.  Useful when working on
;; php files, that can been intertwined with HTML code
(defun toggle-php-html-mode ()
  (interactive)
  "Toggle mode between PHP & HTML Helper modes"
  (cond ((string= mode-name "HTML helper")
         (php-mode))
        ((string= mode-name "PHP")
         (html-helper-mode))))

(global-set-key [f5] 'toggle-php-html-mode)
}}}

Now I can quickly toggle between PHP & HTML mode, depending on what I'm mostly going to be editing.

- JonathanArnold

== Debugging ==

[http://trac.sakura.ne.jp/geben/ GEBEN] is a basic debug package that I just discovered and am in the process of trying out. It is a DBGp client (i.e. emacs debug mode using XDebug). -M

== Improved Imenu by Class ==

[http://www.oak.homeunix.org/~marcel/blog/articles/2008/07/18/nested-imenu-for-php php-imenu.el] organizes the imenu for php-mode a little differently.  Instead of listing all classes separate from all functions, it lists functions within a class, like most other IDEs do.

[new]
This wasn't included in the recent release of php-mode (2008-11-04), since it was more of a bug-fix release.  However, it is indeed worth investigating in a later release. -- AaronHawley
[new]

== Simplest grammar for the Semantic Bovinator ==

[[semantic-php-simplest-grammar.by]]


== Quick documentation lookup ==

I didn't see such a feature in the php-mode I use so I whipped up a quick solution. If you press F1 when standing on a symbol you can quickly look up its online documentation. Here it is:

<pre>
(add-hook 'php-mode-hook 'my-php-mode-stuff)

(defun my-php-mode-stuff ()
  (local-set-key (kbd "<f1>") 'my-php-symbol-lookup))


(defun my-php-symbol-lookup ()
  (interactive)
  (let ((symbol (symbol-at-point)))
    (if (not symbol)
        (message "No symbol at point.")

      (browse-url (concat "http://php.net/manual-lookup.php?pattern="
                          (symbol-name symbol))))))
</pre>

== Discussion ==

[new]
I would like comments on both the single and multiple mode choices above. What strengths and weaknesses does the different versions have?
Can they be merged?
-- LennartBorgman


----
CategoryModes


