At least three Emacs modes have been released for editing Dos scripts (batch files):

== batch-mode ==

By Agnar Renolen (2002). Similar to ##dos-mode##, but with fewer features.

Lisp:batch-mode.el does not recognize ::comments, :.labels, %~args, underscored_variables, -options, or --options. No commands to run script or show help for Dos commands. No code navigation support or code templates.

Using the term /batch mode/ here can be misleading, since the GNU Emacs Manual says: "Batch mode is used for running programs written in Emacs Lisp from shell scripts, makefiles, and so on." This is what CategoryBatchMode is about.

== cmd-mode ==

By Tadamegu Furukawa (2001-2005). Similar to ##dos-mode##, but with fewer features.

CmdMode does not recognize ::comments, :.labels, /options, -options, or --options. Script cannot be run from Emacs with args. Code navigation misses :.labels and is not as feature-rich as imenu+outline.

== dos-mode ==

By Arni Magnusson (2003-2010). The recommended mode for editing Dos scripts.

DosMode supports all of the features listed above, borrowing and improving ideas from ##batch-mode## and ##cmd-mode##. It also provides imenu+outline navigation and code templates.

[new]
But it does not seem to handle ##@rem## comments. Or am I missing something? -- Anonymous

[new]
Fixed, ##@rem## comments are now recognized. Thanks for the feedback! -- Arni Magnusson

[new]
I added indentation for ##dos-mode## via the lisp file DosIndent -- Matthew Fidler

[new]
I think it is better to autoload ##dos-mode##? i.e., put a ;;;###autoload before its definition. -- WilliamXu

[new]
Fixed, an ;;;###autoload cookie has been added. Thanks for the feedback! -- Arni Magnusson

[new]

Highlight !delayed-expansion-variables!

{{{
diff --git a/misc/dos.el b/misc/dos.el
index 1540c84..e3cd49d 100644
--- a/misc/dos.el
+++ b/misc/dos.el
@@ -22,6 +22,7 @@
 ;; font-lock-warning-face        cp
 ;; font-lock-constant-face       [call] prog
 ;; font-lock-variable-name-face  %var%
+;; font-lock-variable-name-face  !var!
 ;; font-lock-type-face           -option
 ;;
 ;; Installation:
@@ -120,6 +121,7 @@ that:
        '("^:[^:].*" .                        font-lock-doc-face)
        '("\\<set\\>[ \t]*\\(\\w+\\)"      (1 font-lock-variable-name-face))
        '("%\\(\\w+\\)%?"                  (1 font-lock-variable-name-face))
+       '("!\\(\\w+\\)!"                   (1 font-lock-variable-name-face))
        '("[ =][-/]+\\(\\w+\\)"            (1 font-lock-type-face append))
        (cons (regexp-opt COMMANDS    'words) font-lock-builtin-face)
        (cons (regexp-opt CONTROLFLOW 'words) font-lock-keyword-face)
}}}

[new]
Fixed, ##!var!## variables are now recognized. Thanks for the feedback! -- Arni Magnusson

== ntcmd-mode ==

Lisp:ntcmd.el is a new DOS script mode that uses a parser to fully
understand the cmd language. Does not natively include templating and
outlining: use other minor modes, like [[Yasnippet]], for that.

----
== General discussion ==

[new]
Why is ##dos-mode## "the recommended mode for editing Dos scripts"? -- Lennart Borgman

[new]
Mainly because of the shortcomings of ##batch-mode## and ##cmd-mode## listed above, improved code navigation, better documentation, and the code conforming to Emacs Lisp conventions.

The three modes are really quite similar, so it would be best to combine all desired features in one mode. If there are any features you find lacking in ##dos-mode##, please leave comments here so I can include them in the next release. Users can also add personal features with ##dos-mode-hook##. -- Arni Magnusson

[new]
While ##dos-mode## does have navigation support, the current version does it through generic emacs outline-mode, while ##cmd-mode## does it through native, integrated navigation.  The problem with the native emacs outline-mode is that you don't get syntax highlighting, for one thing, while you are in outline mode.  So I prefer ##cmd-mode## just because of that. -- Eli Boling


----
CategoryProgramming
