See also: LocalVariables, FileLocalVariables

From the manual, Manual:Directory%20Variables:

: If you put a file with a special name ##.dir-locals.el## in a
directory, Emacs will read it when it visits any file in that directory
or any of its subdirectories, and apply the settings it specifies to
the file's buffer.  Emacs searches for `.dir-locals.el' starting in the
directory of the visited file, and moving up the directory tree.

The `.dir-locals.el' file should hold a specially-constructed list.
This list maps Emacs mode names (symbols) to alists; each alist
specifies values for variables to use when the respective mode is
turned on.  The special mode name `nil' means that its alist applies to
any mode.  Instead of a mode name, you can specify a string that is a
name of a subdirectory of the project's directory; then the
corresponding alist applies to all the files in that subdirectory.

Here's an example of a `.dir-locals.el' file:

     ((nil . ((indent-tabs-mode . t)
              (tab-width . 4)
              (fill-column . 80)))
      (c-mode . ((c-file-style . "BSD")))
      (java-mode . ((c-file-style . "BSD")))
      ("src/imported"
       . ((nil . ((change-log-default-name . "ChangeLog.local"))))))

----

Emacs (23.2.1) will not attempt to apply directory local variables
to buffers visiting remote files (via tramp).

We can advise `hack-dir-local-variables' to work around this, if you
are willing to incur the associated performance cost (which can be
relatively minimal in some situations).

     ;; Enable directory local variables with remote files. This facilitates both
     ;; the (dir-locals-set-class-variables ...)(dir-locals-set-directory-class ...)
     ;; and the dir-locals.el approaches.
     (defadvice hack-dir-local-variables (around my-remote-dir-local-variables)
       "Allow directory local variables with remote files, by temporarily redefining
     `file-remote-p' to return nil unconditionally."
       (flet ((file-remote-p (&rest) nil))
         ad-do-it))
     (ad-activate 'hack-dir-local-variables)

And an example of using this without dir-locals.el:

     (dir-locals-set-class-variables
      'plone-core
      '((nil . ((buffer-read-only . t)))))

     (dir-locals-set-class-variables
      'plone-instance
      '((nil . ((indent-tabs-mode . nil)
                (fill-column . 80)))
        ;; (python-mode . (()))
        ;; (nxhtml-mode . (()))
        ))

     (dir-locals-set-directory-class
      "/scpc:(user)@(host):/home/(user)/Plone/" 'plone-core)

     (dir-locals-set-directory-class
      "/scpc:(user)@(host):/home/(user)/Plone/zinstance/" 'plone-instance)

----

As of Emacs 24:

* You can stop directory local vars from applying to subdirectories.
Add an element (subdirs . nil) to the alist portion of any variables
settings to indicate that the section should not apply to
subdirectories.

* Directory local variables can apply to some file-less buffers.
Affected modes include dired, vc-dir, and log-edit.  For example,
adding "(diff-mode . ((mode . whitespace)))" to .dir-locals.el will
turn on `whitespace-mode' for %%*vc-diff*%% buffers.  Modes should call
`hack-dir-local-variables-non-file-buffer' to support this.
