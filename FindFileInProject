This library provides a couple methods for quickly finding any file
in a given project. It depends on GNU find.

A project is found by searching up the directory tree until a file
is found that matches `ffip-project-file'. (".git" by default.)
By default, it looks only for files whose names match
`ffip-patterns',

If you have so many files that it becomes unwieldy, you can set
`ffip-find-options' to a string which will be passed to the `find'
invocation in order to exclude irrelevant subdirectories. For
instance, in a Ruby on Rails project, you may be interested in all
.rb files that don't exist in the "vendor" directory. In that case
you could set `ffip-find-options' to "-not -regex \".*vendor.*\"".

All these variables may be overridden on a per-directory basis in
your .dir-locals.el.  See (info "(Emacs) Directory Variables") for
details.

It's available via [http://marmalade-repo.org/packages/find-file-in-project Marmalade Repo]

== Alternatives ==

[[Projectile]] is one very comprehensive alternative.

Similar functionality can be found in fuzzy-find-in-project.
Link: https://github.com/justinweiss/fuzzy-find-in-project

Another alternative is [[Gpicker]].

Yet another alternative: Lisp:ifind-mode.el

And also simp
Link: http://github.com/re5et/simp
In addition to finding file in project, simp includes project specific rgrepping which takes project ignored directories into account.

IDO mode also features something similar. See  ido-auto-merge-delay-time. [http://emacswiki.org/emacs/InteractivelyDoThings IDO Mode]


----

CategoryProgrammerUtils
CategoryProject
