MinEmacs wants to help the OneTrueEditor become a lighter yet even more instantly extendable environment by repackaging GNU Emacs as a careful minimum of bundled functionality that also makes extra EmacsLisp or 'c' language changes available through AutoExtend.


== Implementation Pseudocode ==
<pre>
#!/bin/pseudocode_interpreter
## MinEmacsSetup --- Download a subset of GNU Emacs source; patch for AutoExtend; Compile; Package; Advertise.

# Download
# use the --ignore switch, (or whatever) to make the VersionControl avoid downloading the files we don't use.
SomeVC.exe Savannah.GNU.org/emacs co emacs
cd emacs

merge AutoInstall
merge AutoExtend

./configure
make bootstrap
make

# Now use packaging tools to create .deb, .rpm, .msi, .autopackage, etc.
# This is also a great way to build an incremental GNU distro ... GNUnix.
</pre>



== Discussion ==

MinEmacs is a term (probably) introduced by PatrickAnderson to describe the idea that the user should be able to select a subset of the packages distributed with Emacs at compile time and/or be able to add or remove these packages later on. This would make the OneTrueEditor become a lighter yet even more instantly extended environment.

This idea is somewhat related to the idea of a package manager for Emacs Lisp packages. However while there are some areas that overlap these two ideas can be implemented separately.

=== Implementation outline ===

First it has to be decided *which files belong to which package*. There has to be one special package which contains the files that are absolutely necessary for Emacs to work properly.

Then these *packages have to be seperated* somehow. Currently the lisp subdirectory of the Emacs source contains some subdirectories. But these are not related to individual packages. While it is not absolutely necessary to split the packages into subdirectories, this seams like a reasonable choice.

I (JonasBernoulli) believe it would be a good idea to not only use seperate directories for packages but even give each package it's own (git) *submodule*.

It has been decided that Emacs development will switch to bzr at some point in the futur. From my limited experience with bzr I do not know if bzr supports something like submodules in git, but have a feeling that it doesn't (shared repositories isn't the same thing). Of course these submodules would have to *retain the history* of the contained files since the dawn of time.

(So if you really like this idea and git you better get going implementing it because it might otherwise stay a fork forever. It's probably a very bad idea to ask rms to reconsider git for Emacs, unless you have an extremly good reason. Implementing MinEmacs might be such a reason. Might!)

So now that you have carefully split-up packages into submodules the build system has to be adapted to cope with the new situation. As a start it might be enough to *modify the Makefiles* so that one can select packages by *editing some variable*.

Last but not least there has to be an *easy way for users to select packages* using some interface. Possibly a package manager internal to Emacs.  As a start it is probable better to extend the normal build steps with an additional step (some shell script) to disable packages.

PatrickAnderson proposed building native packages for various GNU/Linux distributions et cetera. I don't think that's such a good idea as the "et cetera" at the end of the last line suggests. A also think that all sources should be distributed with Emacs with no regard to what packages the user is allowed to exclude (not only in the vc tree but also in archives). And in that case native packages just wouldn't make much sense, while causing lots of problems.

== Messages ==
[new]
http://github.com/tarsius/emacs-internal contains branches for individual packages distributed with GNU Emacs. However these branches do not contain any useful commit messages. However the master branch of contains file packages.spec which assigns files to packages. This hasn't been done very carefully but might still serve as a starting point.

This repository has been created for different purposes where history isn't important and some errors in file to package mapping isn't a big problem. While I find the idea of MinEmacs interesting, my focus is on packages *not* distributed with Emacs. -- JonasBernoulli

[new]
Hi PatrickAnderson. I am working an the [[Emacs Lisp Mirror]] [...]. -- JonasBernoulli

[new]
Thanks Jonas.  I'd like read-access as soon as you have something to share, and might be able to contribute if we find our goals align enough.  -- PatrickAnderson

[new]
You might be interested in http://github.com/tarsius/emacs-internal (finally something available...). -- JonasBernoulli

[new]
Thanks for the update Jonas.  I've temporarily lost steam for this project, so I'm glad you're pressing ahead. -- PatrickAnderson

