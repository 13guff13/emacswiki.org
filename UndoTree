Emacs has a powerful undo system. Unlike the standard undo/redo system in most software, it allows you to recover <em>any</em> past state of a buffer (whereas the standard undo/redo system can lose past states as soon as you redo). However, this power comes at a price: many people find Emacs' undo system confusing and difficult to use, spawning a number of packages that replace it with the less powerful but more intuitive undo/redo system (see CategoryUndo).

Both the loss of data with standard undo/redo, and the confusion of Emacs' undo, stem from trying to treat undo history as a linear sequence of changes. It's not. The <code>undo-tree-mode</code> provided by this package replaces Emacs' undo system with a system that treats undo history as what it is: a branching tree of changes. This simple idea allows the more intuitive behaviour of the standard undo/redo system to be combined with the power of never losing any history. An added side bonus is that undo history can in some cases be stored more efficiently, allowing more changes to accumulate before Emacs starts discarding history.

It gets better. You don't have to imagine the undo tree, because <code>undo-tree-mode</code> includes an undo-tree visualizer which draws it for you, and lets you browse around the undo history.

The only downside to this more advanced yet simpler undo system is that it was inspired by Vim. But, after all, most successful religions steal the best ideas from their competitors!

The latest version (version 0.1.2, released November 2009) can be obtained from:

* Undo-tree package download: http://www.dr-qubit.org/download.php?file=undo-tree/undo-tree.el
* Web-site: http://www.dr-qubit.org/emacs.php#undo-tree

-- TobyCubitt

----
CategoryUndo
