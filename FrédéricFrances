Bonjour ceci est ma première page sur le wiki d'Emacs.

CategoriePagePerso

== Qui suis-je ? pourquoi j'utilise Emacs ? ==
Cette page est ma première sur le Wiki d'Emacs, comme je ne connais pas encore très bien la mise en page sous Wiki il peut y avoir quelques incohérences dans la mise en page.

Je suis un utilisateur assidu d’Emacs depuis 1999 environ. Cette utilisation est faite dans le cadre de mon travail ou j’utilise aussi cygwin-x (mais là c’est une autre histoire).

== Comment j’ai appris le Lisp ==

Il y'a quelques années j'ai travaillé sur la maintenance d’une application développée en Lisp dans une grosse entreprise.

== Ce que j'en fais maintenant ==

Par la suite, j'ai été amené à travailler sur d'autres technologies et d'autres langages, cela ne m'a pas empêché de continuer à utiliser Emacs et de l'adapter à mes besoins.


== Mes modes ==

* un mode pour rational test real time        (bientôt quand il sera propre)
* [[kis-mode]] -- un mode pour le développement kabira (KIS) (En cours de wikisation)
* [[diameter-avp]] -- un petit bout de lisp m'ayant servi a valider des traces hexadecimale sur le protocole diameter rfc-3588

== Mon .emacs (unsafe) ==

Ce .emacs est utilisé par moi ainsi que quelques collègues (que j'ai converti à l'utilisation d'émacs) et marche sur plusieurs types d'environnements (Windows / Unix / Cygwin)

J'ai volontairement supprimé ou renommé certaines informations (adresse IP / login / noms de scripts lancé depuis emacs) pour des raisons de confidentialité.
 
-------------------------------------------------------------------------------------
    ;;; .emacs-ffrances : mon .emacs (retravaillé)
    ;; ------------------------------------------------------------------------------
    ;; Configuration Emacs:
    ;; ------------------------------------------------------------------------------
    ;; Contiens les éléments principaux de ma configuration.
    ;; ------------------------------------------------------------------------------
    
    ;; Imprimante.
    (setq ps-printer-name '"\\\\serveur-impression\\imprimante")
    
    
    ;; ------------------------------------------------------------------------------
    ;; Paramétrage lié au système et aux utilisateurs....
    ;; ------------------------------------------------------------------------------
    
    ;; Détermination du login sur  <IP ENLEVEE>
    (cond
     ((equal (user-login-name) "xxxxxxx")
      (message "user xxx")
      (defconst ffr-ftp-user-login-name "xxx" "Trigramme sur <IP ENLEVEE>")
      )
     )
    (cond
     ((equal (user-login-name) "YYYYYYY")
      (defconst ffr-ftp-user-login-name "yyy" "Trigramme sur <IP ENLEVEE>")
      (message "user yyy")
      )
     )
    (cond
     ((equal (user-login-name) "ZZZZZZZ")
      (defconst ffr-ftp-user-login-name "ZZZ" "Trigramme sur <IP ENLEVEE>")
      (message "user ZZZ")
      )
     )
    
    (defconst ffr-cygwin-root (getenv "CYGWIN_ROOT") "C:\\Cygwin Chemin d'acces a cygwin")
    
    
    ;; ------------------------------------------------------------------------------
    ;; Détection du Système.
    ;; ------------------------------------------------------------------------------
    (message "Chargement de _emacs.")
    
    (cond 	
     ((equal system-type 'windows-nt)
      (message "Emacs sous windows-NT")
      )
     )
    (cond
     ((equal system-type 'cygwin)
      (message "Emacs sous cygwin")
      )
     )
    
    (cond
     ((equal system-type 'usg-unix-v)
      (message "Emacs sous Unix")
      )
     )
    
    ;; ------------------------------------------------------------------------------
    ;; Path pour les sites lisp perso.
    ;; ------------------------------------------------------------------------------
    
    ;; Chemin pour les .el.
    (add-to-list 'load-path (concat
    			 (getenv "HOME")
    			 "/site-lisp"))
    
    ;; Chemin pour les éxecutables spécifique.
    (add-to-list 'exec-path (concat
    			 (getenv "HOME")
    			 "/bin"))
    
    ;; ------------------------------------------------------------------------------
    ;; Spécifique Windows
    ;; ------------------------------------------------------------------------------
    (cond ((equal system-type 'windows-nt)
    ;       (require 'gnuserv nil t)
    ;       (load "gnuserv")
    ;       (setenv "GNUSERV_SHOW_EMACS" "1")
    ;       (unless gnuserv-frame
    ;	 (gnuserv-start)
    ;	 (setq gnuserv-frame (selected-frame)))
           (set-default-font "-*-Courier-*-r-*-*-12-97-*-*-c-*-*-ansi-")
           )
          )
    
    
    ;; ------------------------------------------------------------------------------
    ;; Certains mode perso que j'utilise sur mon projet actuellement
    ;; bientôt sur le wiki.
    ;; ------------------------------------------------------------------------------
    (require 'kis-mode nil t)     ;; pour kabira (KIS) et wiki quand il sera propre.
    (require 'logmode-mode nil t) ;; trop spécifique pour être utile sur wiki.
    
    ;; ------------------------------------------------------------------------------
    ;; Configuration générale
    ;; ------------------------------------------------------------------------------
    (fset 'yes-or-no-p 'y-or-n-p)
    (setq font-lock-support-mode 'fast-lock-mode)
    (global-font-lock-mode t)
    (line-number-mode t)
    (column-number-mode t)
    (transient-mark-mode t)
    
    (setq display-time-mail-file   t)                ;; Disable mail information
    (setq display-time-form-list (list 'time 'load)) ;; Disable date and mail information
    (setq display-time-day-and-date t)
    (setq display-time-24hr-format t)
    (display-time-mode t)
    (show-paren-mode t)
    (setq show-paren-style (quote expression))
    
    ;; auto insertion des compléments de parenthèses
    ;; récupéré de emacsfr.org
    (defun ffr-insert-parentheses () 
      "insert parentheses and go between them" 
      (interactive)
      (insert "()")
      (backward-char 1))
    
    (defun ffr-insert-square-brackets () 
      "insert brackets and go between them"
      (interactive)
      (insert "[]")
      (backward-char 1))

    (defun ffr-insert-braces ()
      "insert curly braces and go between them"
      (interactive)
      (insert "{}")
      (backward-char 1))
    
    (defun ffr-insert-simple-quotes ()
      "insert simple quotes and go between them"
      (interactive)
      (insert "''")
      (backward-char 1))
    
    (defun ffr-insert-double-quotes () 
      "insert double quotes and go between them" 
      (interactive)
      (insert "\"\"")
      (backward-char 1))
    
   (defun ffr-insert-invert-quotes () 
      "insert inverted quotes and go between them" 
      (interactive)
      (insert "``")
      (backward-char 1))
   
  (defun ffr-insert-angle-brackets () 
      "insert > and go between them" 
      (interactive)
      (insert "<>")
      (backward-char 1))
    
    (global-set-key "("  'ffr-insert-parentheses)       ;;inserts "()"
    (global-set-key "["  'ffr-insert-square-brackets)   ;;inserts "[]"
    (global-set-key "{"  'ffr-insert-braces)            ;;inserts "()"
    ;;(global-set-key "<"  'ffr-insert-angle-brackets)    ;;inserts "<>"
    ;;(global-set-key "\"" 'ffr-insert-double-quotes)     ;; insert """"
    ;;(global-set-key "'"  'ffr-insert-simple-quotes)     ;; insert "''"
    ;;(global-set-key "`"  'ffr-insert-invert-quotes)     ;; insert "``"
    
    ;; ------------------------------------------------------------------------------
    ;; paramétrage pour utiliser ange ftp.
    ;; ------------------------------------------------------------------------------
    (defconst ffr-ange-ftp-login-calimero
      (concat "/"
    	  ffr-ftp-user-login-name
    	  "@<IP ENLEVEE>:"))
    
    (defun ffr-dired-calimero-home ()
      "Ouvre une fenêtre dired sur le repertoire home calimero"
      (interactive)
      (dired
       (concat ffr-ange-ftp-login-calimero "~"))
      )
    
    (defun ffr-dired-calimero-varsoft-projet ()
      "Ouvre une fenêtre dired sur le repertoire home calimero"
      (interactive)
      (dired
       (concat ffr-ange-ftp-login-calimero "/varsoft/projet"))
      )
    
    (require 'easymenu nil t)
    
    (easy-menu-define
      ffr-menu-perso global-map "Personal Menu keymap."
      '("Menu-personnel"
    	["- Calimero ---------------" nil nil]
    	["Calimero ~/               "
    	 ffr-dired-calimero-home (fboundp 'ffr-dired-calimero-home)]
    	["Calimero /varsoft/projet     "
    	 ffr-dired-calimero-varsoft-projet (fboundp 'ffr-dired-calimero-varsoft-projet)]
    	)
      )
    
    (easy-menu-add ffr-menu-perso)
    ;; Calimero
    (global-set-key [f12]  'ffr-dired-calimero-home)
    (global-set-key [f11]  'ffr-dired-calimero-varsoft-projet)
    
    
    (message "Custom-set-variables ...")
    (custom-set-variables
     '(archive-zip-case-fiddle t)
     '(archive-zip-extract (quote ("unzip")))
     '(archive-zip-use-pkzip nil)
     '(fast-lock-cache-directories '("~/.emacs-flc"))
     '(menu-bar-mode nil)
     '(scroll-bar-mode nil)
     '(case-fold-search t)
     '(dabbrev-case-fold-search t)
     '(dabbrev-case-replace t)
     '(dabbrev-ignored-buffer-names (quote ("*Messages*" "*Completions*" "*Help*" "*Buffer List*")))
     '(dabbrev-ignored-buffer-regexps (quote ("\\\\*ftp*")))
     '(dabbrev-upcase-means-case-search t)
     '(delete-selection-mode nil nil (delsel))
     '(mode-line-format (quote (#("-" 0 1 (help-echo "mouse-1: select window, mouse-2: delete others, mouse-3: delete ...")) mode-line-mule-info mode-line-modified mode-line-frame-identification mode-line-buffer-identification #("   " 0 3 (help-echo "mouse-1: select window, mouse-2: delete others, mouse-3: delete ...")) global-mode-string #("   %[(" 0 6 (help-echo "mouse-1: select window, mouse-2: delete others, mouse-3: delete ...")) (:eval (mode-line-mode-name)) mode-line-process minor-mode-alist #("%n" 0 1 (help-echo "mouse-2: widen" local-map (keymap (mode-line keymap (mouse-2 . mode-line-widen)))) 1 2 nil) #(")%] " 0 1 (help-echo "mouse-1: select window, mouse-2: delete others, mouse-3: delete ...") 1 4 nil) (which-func-mode ("" which-func-format #(" " 0 1 (help-echo "mouse-1: select window, mouse-2: delete others, mouse-3: delete ...")))) (line-number-mode (#("L%l" 0 3 (help-echo "mouse-1: select window, mouse-2: delete others, mouse-3: delete ...")) #(" " 0 1 (help-echo "mouse-1: select window, mouse-2: delete others, mouse-3: delete ...")))) (column-number-mode (#("C%c" 0 3 (help-echo "mouse-1: select window, mouse-2: delete others, mouse-3: delete ...")) #(" " 0 1 (help-echo "mouse-1: select window, mouse-2: delete others, mouse-3: delete ...")))) (-3 . #("%p" 0 1 (help-echo "mouse-1: select window, mouse-2: delete others, mouse-3: delete ...") 1 2 nil)) #(" % " 0 3 (help-echo "mouse-1: select window, mouse-2: delete others, mouse-3: delete ...")))))
     )
    
    (if (equal system-type 'usg-unix-v)
        (custom-set-faces
         '(modeline ((t (
    		     :background "SteelBlue" 
    		     :foreground "chartreuse1")))) 
    				 
         '(scroll-bar ((t (
    		       :background "SteelBlue" 
    				   :foreground "chartreuse1"))))
         '(tool-bar ((((type x w32 mac) (class color)) (:background "red" :foreground "wheat" :box (:line-width 1 :style released-button)))))
         '(fringe ((t (:background "steelblue" :foreground "pale green"))))
         )
      (custom-set-faces
       '(modeline ((t (:background "grey10" 
    				:foreground "chartreuse1" 
    				:box (:line-width 3 :color "SteelBlue") :slant italic :weight extra-bold :height 1.1 :width condensed :family "bookman"))))
       '(scroll-bar ((t nil)))
       '(tool-bar ((((type x w32 mac) (class color)) (:background "red" :foreground "wheat" :box (:line-width 1 :style released-button)))))
       '(fringe ((t (:background "steelblue" :foreground "pale green" :weight bold))))
       )
      )
    
    (setq search-highlight t)
    
    ;; mnemonic DOS/UNIX/MAC/...
    (setq eol-mnemonic-dos       " [Dos ]")
    (setq eol-mnemonic-unix      " [Unix]")
    (setq eol-mnemonic-mac       " [Mac ]")
    (setq eol-mnemonic-undecided " [unk?]")
    
    (setq ps-right-header '("/pagenumberstring load"
    			time-stamp-dd/mm/yyyy time-stamp-hh:mm:ss))
    
    ;; ------------------------------------------------------------------------------
    ;; Spécifique Unix
    ;; ------------------------------------------------------------------------------
    (cond
     ((equal system-type 'usg-unix-v)
      (message "Emacs sous Unix")
      (tool-bar-mode nil)
      (scroll-bar-mode t)
      )
     )
    
    (require 'logmode-mode nil t)
    
    (cond (window-system
    	   (global-set-key [C-down-mouse-3] 'imenu)
    	   )
          )
    
    (add-hook 'lisp-mode-hook  '(lambda () (imenu-add-to-menubar "Funcs")))
    
    ;; ------------------------------------------------------------------------------
    ;; Lancement de commande sur un machine distante.
    ;; ------------------------------------------------------------------------------
    
    ;; Lancement d'une commande sur un hote distant.
    (defun ffr-remote-action (action)
      "Execute une commande sur calimero"
      (interactive "s Commande:")
      (let ((ffr-default-dir default-directory))
        (cd (getenv "TMP"))
        (shell-command (concat ffr-cygwin-root "\\bin\\rsh.exe <IP ENLEVEE> -l "ffr-ftp-user-login-name
    			   " \". ~/.profile > /dev/null && " action "\"" "&") "~\\action.log" "~\\action.log") 
        (cd ffr-default-dir)
        )
      )
    
    ;; Lancement d'un script sur un hôte.
    (defun ffr-remote-toto ()
      "Lance le script toto"
     (interactive )
     (let ((ffr-default-dir default-directory))
       (cd (getenv "TMP"))
       (shell-command (concat ffr-cygwin-root "\\bin\\rsh.exe <IP ENLEVEE> -l "ffr-ftp-user-login-name
    			  " \". ~/.profile > /dev/null && ~/bin/toto.sh \"" "&") "~\\inject.log" "~\\inject.log" )
       (cd ffr-default-dir)
       )
     )
    
    ;; Lancement d'un script sur un hôte avec un paramètre.
    (defun ffr-remote-reset-base (ressource)
      "Lance le script reset base"
      (interactive "s Ressource:")
      (let ((ffr-default-dir default-directory))
        (cd (getenv "TMP"))
        (shell-command (concat ffr-cygwin-root "\\bin\\rsh.exe <IP ENLEVEE> -l "ffr-ftp-user-login-name
    			   " \". ~/.profile > /dev/null && ~/bin/reset_base.sh "ressource" \"" "&") "~\\reset_base.log" "~\\reset_base.log")
        (cd ffr-default-dir)
        )
      )
    
    ;; Lancement d'un script perl local sur un fichier.
    (defun tlv2man (filename)
       "Convert this buffer to a readable log."
       (interactive "f log filename ") 
       (let ((ffr-default-dir default-directory))
         (cd (file-name-directory filename))
         (shell-command (concat "perl -Id:\\FFRANCES\\perl d:\\FFRANCES\\perl\\tlv2man.pl " filename) "~\\tlv2man.log" "~\\tlv2man.log")
         (cd ffr-default-dir)
         )
       )

    ;; ------------------------------------------------------------------------------
    ;; quelque mode automatique pour certains types de fichier.
    ;; ------------------------------------------------------------------------------
    (add-to-list 'auto-mode-alist '("\\.ini\\'" . shell-script-mode))
    (add-to-list 'auto-mode-alist '("\\.cfg\\'" . shell-script-mode))
    (add-to-list 'auto-mode-alist '("\\.env\\'" . shell-script-mode))
    (add-to-list 'auto-mode-alist '("\\.php\\'" . c-mode)) ;; j'ouvre rarement du php
    (add-to-list 'auto-mode-alist '("\\.inc\\'" . c-mode)) ;; donc pas de php-mode
    
    ;; ------------------------------------------------------------------------------
    ;; Fin de la configuration.
    ;; ------------------------------------------------------------------------------
    (setq make-backup-files nil)
    (setq auto-save-mode nil)
    (put 'upcase-region 'disabled nil)
    
    ;; pas de fichier de démarage.
    (setq inhibit-startup-message t)
    
    ;; ------------------------------------------------------------------------------
    ;; Si le fond n'est pas noir il y'a un problème au chargement du .emacs
    ;; ------------------------------------------------------------------------------
    (set-background-color "black")
    (set-foreground-color "wheat")
    (set-cursor-color "LavenderBlush4")

-------------------------------------------------------------------------------------

* [[kis-mode]]
* CategoriePagePerso


== Commentaires/Questions ==

* N'ayant pas trouvé d'autre moyen de contacter l'auteur de cette page, je me permets d'ajouter cette section.
Je suis très intéressé par le mode pour Rational Test Real Time, même s'il n'est pas encore "propre"...
Pourriez-vous le diffuser dès maintenant, svp ?

== Réponse ==

j'ai un peu laissé tombé la mise a jour de cette page, mais j'y repasse de temps en temps, je vais voir si j'arrive à la retrouver.
frances dot frederic chez gmail com


----
CategoryHomepage
