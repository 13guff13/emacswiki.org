Here are few commands that you can use to be op on channels. There are also key bindings.

    (defun-rcirc-command op (nicks)
      "Send OP for `nicks'.
    Limitation: in its interactive form, you can only op one nick."
      (interactive (list (completing-read "Op nick: "
                                          (with-rcirc-server-buffer rcirc-nick-table))))
      (dolist (nick (split-string nicks " "))
        (rcirc-send-string process
                           (format "ChanServ OP %s %s" target nick))))

    (defalias 'rcirc-cmd-opme
      '(lambda (&optional args process target)
         (interactive)
         (rcirc-cmd-op rcirc-nick))
      "Request a ChanServ OP on my current nick in the current channel.")

    (defalias 'rcirc-cmd-deop
      '(lambda (nicks &optional process target)
         (interactive (list (completing-read "De-op nick: "
                                             (with-rcirc-server-buffer rcirc-nick-table))))
         (let ((nicks (concat "-" (mapconcat 'identity (split-string
                                                        nicks) " -"))))
           (rcirc-cmd-op nicks)))
      "Send DE-OP for `nicks'.
    Limitation: in its interactive form, you can only de-op one nick.")


    (defalias 'rcirc-cmd-deopme
      '(lambda (&optional args process target)
         (interactive)
         (rcirc-cmd-deop rcirc-nick)))

    (define-key rcirc-mode-map (kbd "C-c C-O") 'rcirc-cmd-op)
    (define-key rcirc-mode-map (kbd "C-c C-o") 'rcirc-cmd-opme)
    (define-key rcirc-mode-map (kbd "C-c C-d") 'rcirc-cmd-deopme)
    (define-key rcirc-mode-map (kbd "C-c C-D") 'rcirc-cmd-deop)
