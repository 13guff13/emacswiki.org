Many modern editors and IDEs can graphically indicate the location of the fill column, either by shading the area to the right of the fill column or by drawing a thin line (in design parlance, a "rule") down the length of the editing window.  The package [[fill-column-indicator.el]] (by AlpAker) implements both of these facilities in Emacs.

The two different styles of fill-column indication look like this:

|| [[image:FciShadingStyle]] || [[image:FciRuleStyle]] ||
|| "Shading" style || "Rule" style ||

== Installation and Usage ==

Put the package file in your load path and put ##(require 'fill-column-indicator)## in your .emacs.

To toggle graphical indication of the fill column in a buffer, use the command ##fci-mode##.  

The style of indication is controlled by the variable ##fci-style##.  The recognized values are ##'shading## and ##'rule## (the default value is ##'shading##).  Buffer-local values are supported, so one can use different styles in different buffers.

The rule can be customized by width and color; the shading can be customized by foreground and background color.  For details on these and other options, see the headers in the package file.

As of version 0.30, fci-mode should work on both graphical and character terminals.  Note that rule style will work differently in the two cases.  On graphical terminals, the rule is drawn using bitmap images; on character terminals, it is drawn using characters (by default, it uses "|", i.e., ascii 124).

== See also ==

* ColumnMarker
* HighlightCurrentColumn -- Highlight the current column when Emacs is idle, or momentarily, or in such a way that the highlighting tracks the cursor. An extension of <tt>[[column-marker.el]]</tt>.
* ModeLinePosition for a way to highlight the column number in the mode-line when the cursor is past some limit column you set.
* MarginMode
* EightyColumnRule

==Dicussion==

===Problems when Using Emacs as a Daemon===
[new]
Really neat stuff :)

I've just spotted a small problem. In order to use with EmacsAsDaemon one needs to comment out these lines:

    (unless window-system
        (error "Fill-column-indicator only works on window systems"))

[http://www.emacswiki.org/emacs/Jos%c3%a9_Alfredo_Romero_L. j.a.]

[new:AlpAker:2011-04-05 00:17 UTC]

[Some ensuing back and forth edited out.]  After playing around with emacsclient for a while, I think you're right:  The best thing to do is not throw any kind of error when Emacs is running as a daemon, and instead depend on the user to figure out when they can invoke fci-mode and when they can't.  Thanks for pointing out the problem. --AA

[new:AlpAker:2011-04-15 22:59 UTC]

As of 0.30, the package should be able to handle daemon mode gracefully.  Shading style will work fine on both graphical and character terminals.  Rule style will work fine as well, displaying the graphical rule on graphical terminals and the textual rule on character terminals.   (One problematic edge case remains:  If you invoke the mode while on a character terminal then visit the same buffer on a graphical terminal using the same Emacs instance, the textual rule will be displayed on both.  I haven't decided on the best way to detect and handle this case.  The reverse scenario--opening on a graphical terminal then visiting on character terminal--shouldn't be a problem.  I imagine these cases arise quite infrequently.) --AA

===Problem using dabbrev-expand===
[new]
With <tt>fci-mode</tt> active in a buffer, using <tt>dabbrev-expand</tt> at the end of a line seems to jump the point down a couple of lines lines. So a buffer containing:

  abcdef

  abc

  foofoo

Position the point after the second <tt>abc</tt> and use <tt>dabbrev-expand</tt>, I get the correct expansion, but the point jumps to the third <tt>o</tt> in <tt>foofoo</tt>. Without <tt>fdi-mode</tt> I get the correct expansion and the point is left after the expanded <tt>abcdef</tt>.

[new:AlpAker:2011-04-06 17:19 UTC]]

I've uploaded a new version (0.28) that fixes the bug.  -- AA
 
[new]

The new version (0.28) works great, thanks for the quick fix!

===Interesting Interaction With show-paren-mode===

[new]

First, awesome package, I've been looking for something like this for years! But, like a typical ungrateful user I'm going to immediately follow my thanks with a bug report!

If I have just the following in my .emacs:

<pre>
(show-paren-mode t)
(setq show-paren-style 'expression)

;; So I can load fill-column-indicator
(defconst elisp-directory (expand-file-name "~/.elisp/"))
(add-to-list 'load-path elisp-directory)
(require 'fill-column-indicator)
</pre>

Then open up a new file in <code>c-mode</code>.

Add the following content to the file,

<pre>
int
main ()
{
  /* Next line has some whitespace on it, the line after that is completely empty. */
      

}
</pre>

At this point we should have <code>{</code> to <code>}</code> highlighting on, and <code>fci-mode</code> off. Position the point at the character immediately after the closing <code>}</code> and hopefully we should see a highlighted block. Next turn on <code>fci-mode</code> and see how the highlighting changes.

I have no idea how easy this would be to fix, and it's not a huge issue, just thought it was worth mentioning.

[new:AlpAker:2011-04-21 18:52 UTC]

Thanks for pointing this out.  The problem is caused by the way fci-mode pads out the end of lines to make the rule or shading appear at the fill column: it puts an overlay on newline characters with a before-string property that contains the necessary amount of padding.  Unfortunately, the face attributes of overlay before-strings aren't merged with those of other overlays that cover the same region, so the show-paren highlighting doesn't appear on the padding.

This will probably be an issue with libraries other than paren.el, and I'm going to have to think about how to fix things in robust fashion.  In the meantime, here's a version with a workaround: [link removed; this code is now part of the main version].  --AA

[new]

I can't comment on the how much of a hack this is, my elisp isn't that great :) But this does seem to fix the problem for me so far. I'll switch to using this at work after the weekend and see how I get on.

[new:AlpAker:2011-04-27 23:50 UTC]

(A few days later).  So far, every way I can think of to make the fill-column padding automatically pick up parenthesis highlighting will break support for character terminals.  So I've cleaned up the earlier hack and made it, for now, the Official Way We Do Things.   (Btw, you might want to have a look at [[mic-paren.el]], which is an improvement on paren.el in just about every respect.) --AA

===From the (E-)Mailbag===

[new]

I want the fill-column indicator to be appear at column 80, but it only appears at column 70.  How do I set it to use a different column?

[new:AlpAker:2011-04-05 00:17 UTC]

Fci-mode uses the whatever value you have ##fill-column## set to.  As 70 is the default, you probably haven't set ##fill-column## to your desired value.  You can use the command ##set-fill-column## to change the value of ##fill-column## in a buffer, or put ##(setq-default fill-column 80)## in your .emacs to set it globally. --AA

[new]

How can I get the package to work properly on a character terminal?

[new:AlpAker:2011-04-05 00:17 UTC]

When running on a character terminal, Emacs outsources rendering to the terminal emulator; as a result, certain display features aren't supported.  These latter include the overlay properties fci-mode depends on.  The bottom line is that it will only work on window-system displays. --AA

[new:JasonMcBrayer:2011-04-05 12:24 UTC]

Note that on a character terminal, there are other packages you can use. WhiteSpace will optionally highlight lines that are longer than a specific value. It doesn't look as good as FillColumnIndicator, but pretty reasonable for a termainal. I think there are other packages that take a similar approach.

[new:AlpAker:2011-04-15 01:13 UTC]

I've uploaded a new version (0.30) that should work on (most) char terminals. --AA


----
CategoryFilling 
