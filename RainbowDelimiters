<b>[[RainbowDelimiters]]</b> is a "rainbow parentheses"-like mode for coloring parentheses, brackets, and braces based on their nesting depth. It gives a visual reference for which delimiters match, and what statements are at the same depth - if two statements are the same level, they will be the same color.

Great care has been taken to make this mode FAST. You shouldn't see any change in scrolling or editing speed when it's on even when working in delimiter-rich languages like Clojure, Lisp and Scheme.

You can customize the colors [[RainbowDelimiters]] uses. The default colors are intentionally subtle; they are unobtrusive enough to make the mode worth looking at even if you usually don't like rainbow parentheses modes. 

= Download: =
* Lisp:rainbow-delimiters.el

* Current release: <b>1.2.1</b> (2011-03-29)
** Conform to ELPA conventions.


= Setup instructions: =
1. Add Lisp:rainbow-delimiters.el to your load-path.

2. Byte-compile the file (necessary for speed):
<pre>
M-x byte-compile-file <location of rainbow-delimiters.el>
</pre>

3. Add the following to your dot-emacs/init file:
<pre>
(require 'rainbow-delimiters)
;; Add hooks for modes where you want it enabled, for example:
(add-hook 'clojure-mode-hook 'rainbow-delimiters-mode)
</pre>

4. **OPTIONAL**: You can also activate the mode temporarily in a buffer with:
<pre>
M-x rainbow-delimiters-mode
</pre>

== Customizing the color scheme: ==
To *customize the color scheme*, you can use:
<pre>
M-x customize-group rainbow-delimiters
</pre>

The group <code>rainbow-delimiters-faces</code> contains the needed faces. Parens, brackets, and braces all use them. You can change them if you want to customize the color scheme for yourself.

Each nested depth uses a face of the form <code>rainbow-delimiters-depth-#-face</code>. Depth begins at 1, the outermost color. Faces are numbered from 1-12.

*Color-theme.el users:* Further information is available in the Lisp:rainbow-delimiters.el file.

*NOTE*: The default colors are a little easier to tell apart on darker backgrounds, though they look good with any background color. If you want a set of colors specifically for light backgrounds, please leave a note on this wiki page saying so and I'll add the appropriate light/dark options to the faces.

<pre>



</pre>
----
[new]
I think you should change one of the default colors - the dark green. I'm using(maintaining) zenburn(for which you mentioned the default colors are optimized) and I noticed that the dark green
braces don't stand out at all against that particular background making them very hard to discern.

Is there any way to restore the behaviour mentioned in the changelog of having independent depths for each paren type?  In C, most code is within a {} function block which means everything starts at depth 2.  Conditional expressions wrapped in () are also coloured differently depending on whether they're inside a for loop or other code block, but it would be nice if the colour scheme was more consistent (i.e. outer bracket is always the same colour.)  This would work if the depth was tracked independently for each character type.

Is there also a way to add or remove tracking of particular paren types?  I'm not so interested in having {} coloured but very keen on having () highlighted.
----
CategoryFaces CategoryModes ParenthesesAppearance
