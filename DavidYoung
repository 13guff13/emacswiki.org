= About me =

I use Emacs.

This is some Emacs extensive functions I wrote in my daily work.

Lisp:dove-ext.el

= Describe the code now =

== matrixSum == 

Calculate matrix statistics by row & column. Then insert result into current buffer.
Calculation is doing from a predefined shell script named as 'matrixSum'

== come-here ==

Bring content from specific buffer to current buffer. 

== jump ==

Take the command at point, jump to another window, then paste it at prompt. 

If the destination window is not in shell-mode, just paste it to the point over there. This makes jump useful in other text edit modes.


== some ==

Delete all output from interpreter since the one before the last input. Because comint-delete-output just could not do it for you.

== exitshell ==

Exit from recursive shell logins automatically.

== rename-buffer-in-ssh-login ==

Rename buffer to the destination hostname in ssh login

== kill-shell-buffer-after-exit ==

Kill shell buffer after exit from shell process.

== split-window-4 ==

This function splits frame into 4 windows, like following.
{{{
  +-----------------------+----------------------+
  |                       |                      |
  |                       |                      |
  |                       |                      |
  +-----------------------+----------------------+
  |                       |                      |
  |                       |                      |
  |                       |                      |
  +-----------------------+----------------------+
}}}

I used to run shell mode in these windows.

== split-v ==

This function change window from vertical style into horizontal style

{{{

  +----------------------+                 +----------- +-----------+ 
  |                      |           \     |            |           | 
  |                      |   +-------+\    |            |           | 
  +----------------------+   +-------+/    |            |           |
  |                      |           /     |            |           | 
  |                      |                 |            |           | 
  +----------------------+                 +----------- +-----------+ 

}}}

== split-h ==

This function splits window from horizontal style into vertical style


{{{

  +----------- +-----------+                  +----------------------+ 
  |            |           |            \     |                      | 
  |            |           |    +-------+\    |                      | 
  |            |           |    +-------+/    +----------------------+ 
  |            |           |            /     |                      | 
  |            |           |                  |                      | 
  +----------- +-----------+                  +----------------------+ 

}}}


== split-v-3 ==

Similar as split-v, but works with 3 windows

{{{

  +------------------------+                 +----------- +-----------+ 
  |                        |           \     |            |           | 
  |                        |   +-------+\    |            |           | 
  +------------------------+   +-------+/    |            |-----------|
  |           |            |           /     |            |           | 
  |           |            |                 |            |           | 
  +------------------------+                 +----------- +-----------+ 

}}}

== split-h-3 ==

Similar as split-h, but works with 3 windows

{{{
  +----------- +-----------+                  +------------------------+ 
  |            |           |            \     |                        | 
  |            |           |    +-------+\    |                        | 
  |            |-----------|    +-------+/    +------------------------+ 
  |            |           |            /     |            |           | 
  |            |           |                  |            |           | 
  +----------- +-----------+                  +------------------------+ 
}}}

== roll-v-3 ==

Rolling 3 window buffers clockwise

{{{
  +----------- +-----------+                    +----------- +-----------+ 
  |            |     C     |            \       |            |     A     | 
  |            |           |    +-------+\      |            |           | 
  |     A      |-----------|    +-------+/      |     B      |-----------| 
  |            |     B     |            /       |            |     C     | 
  |            |           |                    |            |           | 
  +----------- +-----------+                    +----------- +-----------+ 

  +------------------------+                     +------------------------+ 
  |           A            |           \         |           B            | 
  |                        |   +-------+\        |                        | 
  +------------------------+   +-------+/        +------------------------+ 
  |     B     |     C      |           /         |     C     |     A      | 
  |           |            |                     |           |            | 
  +------------------------+                     +------------------------+ 

}}}

== rename-buffer-in-ssh-login ==

Rename buffer to the destination hostname in ssh login

Since I used to login to a lot of different machines in my daily work, I'd like to have the shell buffer name to represent the hostname of which I am working on.

== rename-buffer-in-ssh-exit == 

Rename buffer to its previous name when user exit from a ssh login.

I do not just login to the destination machine from my GNU Emacs. Instead I used to login to a central host first, and then to login to any destinations from there. 

So I need to have the shell buffer changes accordingly when I exit from a destination host and back to the central one. 

**This function is still in its babyhood. It could only work well in a single shell session. I am not sure how to handle multiple shell sessions simultaneously. And exit from a subshell is also a problem.**

**If anyone has good ideas, its warm welcome here!.**


== kill-shell-buffer-after-exit ==

Kill shell buffer after user exited from shell.

It is very ugly that the shell buffer will keep exist even user has already been exited from it. So I wrote this function to kill it for me.

I chose to use 'set-process-sentinel' function instead of monitor user commands. 'set-process-sentinel' is provided by shell mode itself. So it makes things simpler.

== my-overwrite ==

When overwrite-mode is on, display a red alert at the beginning of mode line. When overwrite-mode is off, remove the alert.


= Discussion =

[new:DrewAdams:2010-07-31 15:41 UTC]
Welcome to the wiki. -- DrewAdams

[new:DavidYoung:2010-07-31 15:48 UTC]
Thanks for your kind greeting. You're so fast. BTW, can you advise me how to make the Lisp:dove-ext.el page becomes a download-able lisp file? I tried many times but always fail. -- DavidYoung

[new:DrewAdams:2010-07-31 16:34 UTC]
Looks to me like you succeeded. -- DrewAdams

[new]
I succeed when I pasted lisp code on the page directly, instead of replace that page with code file.  -- DavidYoung

[new:DrewAdams:2010-08-01 14:01 UTC]
Right. -- DrewAdams


----
CategoryHomepage
