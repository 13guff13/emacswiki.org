: [[image:iciclesimage]]

|| *Previous:*  IciclesIssues || '''[[Icicles]]''' || IciclesIssuesStale || IciclesIssuesClosed || 

----

== Open Icicles Issues ==

This page is for discussion of open issues you might have with library '''<tt>[[icicles.el]]</tt>''' ('''[[Icicles]]'''), including bugs.

See also:

* IciclesIssuesStale -- Issues that users did not follow up on -- never heard back from them. Could mean that the problem is not a problem; could mean that they gave up ;-).

* IciclesIssuesClosed -- Issues that were resolved. Bugs that were fixed. Explanations of non-bugs. Issues from this page (IciclesIssuesOpen) and IciclesIssuesStale are moved there when they are resolved.

* IciclesDiscussion -- General discussion about the library, feedback, possible uses, and possible enhancements.




=== How To Report an Icicles Issue ===

You can report an '''Icicles''' issue (bug) on this page -- please follow the formatting suggestion provided below ([[#HowToUseThisPage]]).

Alternatively, you can report an '''Icicles''' issue by email, by doing 
one of the following:

* Choose item '''Send Bug Report''' from MenuBar menu '''Icicles'''
* `##M-x icicle-send-bug-report##'
* (1) `C-h' from the minibuffer; (2) click button '''Icicles Options and Faces''' in buffer `*Help*'; (3) click link `##Send Bug Report##' in buffer `##*Customize Group: icicles*##'

Always mention your Emacs version and platform (e.g. Windows, GNU/Linux). If you aren't using the latest '''Icicles''' files, let me know which you are using. '''Icicles''' files each have an <code>Update #</code> field in the header, which identifies the file exactly.

The advantage of reporting a bug here is that others can share in the discussion. The advantage of reporting a bug by email is that I will see it immediately. Sometimes I don't notice a bug report on this page for a while.




=== Debugging Tips ===

1. If you use the debugger to report a backtrace, first delete all '''Icicles''' byte-compiled files, so that you use only the source files (##icicles*.el##) for debugging.

2. By default, in ''Icicle'' mode, `M-x' is bound to command '''`icicle-execute-extended-command''''. This is a multi-command, which presents certain advantages over the standard command bound to `M-x' in Emacs, `execute-extended-command' -- see [[Icicles - Multi M-x]] for details.

However, `icicle-execute-extended-command' has one disadvantage: an error backtrace is less informative, which can make debugging more difficult. If you want to see a normal backtrace at the point of error, then do what I do:

  M-: (define-key icicle-mode-map "\M-x" 'execute-extended-command)
  M-x set-variable debug-on-error t




[:HowToUseThisPage]
=== How To Use This Page ===

For readability, please separate each issue thread with `----' (horizontal line), and introduce each entry within a thread with `<code>[new]</code>'. 

Better yet, use this to separate threads (puts space before and after the horizontal line):

 <pre>

 </pre>
 ----
 <pre>

 </pre>






== (Open) Issues ==




''Enter your report below.''








<pre>

</pre>
----
<pre>

</pre>

<pre>
(add-to-list 'load-path "path/to/icicles")
(load-library "icicles")

Debugger entered--Lisp error: (void-variable icicle-mode-map)
</pre>

I get an error when I try to load the icicles library.

1. I am using a recent build of Emacs 23.1.90.1 on Mac OS X 10.5

2. The error only happens if I have byte-compiled the icicles code.  If there are nothing but .el files in the directory it is fine.

3. If I evaluate (load-library "icicles") again it works fine and the package is loaded.

4. (Side note: the discussion on [[IciclesIswitchb]] does not apply to my environment.  The only way I've been able to get iswitchb functionality working is to use all of (iswitchb-mode), (require 'icicles), (iswitchb-default-keybindings), (require 'icicles-iswitchb).)

Perhaps 23.1 isn't supported yet? -- [[rmolinari]]


[new:DrewAdams:2009-12-14 01:33 UTC]
Sorry for your trouble. Thanks for your report, but I will need more info.

1. I do support the release (23.1), but I do not officially support the CVS development code, which is what you are using (23.1.90.1) -- it is too much of a moving target. Nevertheless, I know that there are '''Icicles''' users who do use the latest CVS Emacs with no problem.

2. Make sure that all of the '''Icicles''' files you have are the latest versions. Be sure to start with ##emacs -Q## for a bug recipe.

3. With byte-compiled code, make sure that you load the source files before compiling. It is at least important to load <tt>[[icicles-mac.el]]</tt> before byte-compiling the other files, since it contains macros that they use.

4. If you can get hold of an official release (e.g. Emacs 23.1 or 22.3), see if you can reproduce the problem with it. That might save time if you cannot. It's possible that there is a change in the CVS code that affects this. But I doubt it. Usually, problems of this kind come from compiling and loading sequencing.

5. I'm afraid you will need to do some debugging to figure out what is happening. The load order in <tt>[[icicles.el]]</tt> should be correct. You can try turning on `debug-on-error'. You can try loading each of the byte-compiled files, in turn (in the order given in <tt>[[icicles.el]]</tt>. You can try loading all of the source files except for a single byte-compiled file, in turn.

6. Wrt [[IswitchBuffers|IswitchB]], I'm afraid I can't help. I don't use it, myself. I sanity-tested it briefly with '''Icicles''' long ago, but I don't retest the combination. All I know is what others have written on page IciclesIswitchb. Feel free to update that page if you have additional info. -- DrewAdams

[new]
Hi Drew.  Thanks for the quick reply.  Loading icicles before byte-compiling didn't help so there must be something squirrelly in my setup.  I don't have time to investigate more carefully right now but will try to find time later in the week.  Thanks for a great product!  -- [[rmolinari]]


[new:DrewAdams:2009-12-14 04:38 UTC]
OK, let me know what you find out. Even more details about what you did helps. -- DrewAdams

<pre>

</pre>
----
<pre>

</pre>

<pre>

</pre>
----
<pre>

</pre>
[new] 

Hi Drew,  I am using icicles with AUCTeX ans it works almost perfect with everything except //TeX-complete-symbol// in [http://webpages.math.luc.edu/~rig/home/emacs/lisp/auctex/tex.el tex.el]. 

The main thing is that Icicles seems to generate `*Completion*' buffer (with all the effects like hiding other buffers) but does not jump to minibuffer and stays in original one. So,it's sort of default behavior of //TeX-complete-symbol// but with ICY `*Completion*' buffer. Each time I call for completion, all the buffers are rearranged, with no back up afterwords.

I am an elisp dufus, sorry :(.  Can you please suggest how to modify //TeX-complete-symbol// to make it work with Icicle.

Thanks a ton! -- RedBlue



[new:DrewAdams:2010-01-26 22:29 UTC]

1. Wrt %%AUCTeX%%, be aware of this 
[[Icicles - Object-Action Interaction#AUCTeXbug|AUCTeX bug]]. It doesn't sound like it's related to your problem, but be aware of it.

2. When you use `Tex-complete-symbol' it uses nothing from '''Icicles''' that I can see, except its redefinition of `display-completion-list'. So that must be what you're trying to describe.

It's not clear to me what effect you are describing, however. What do you mean by all the buffers being rearranged and `*Completions*' "hiding other buffers"? The only difference I would expect is wrt the display of completions within `*Completions*' and possibly the window size. You can try sending me (or posting here) a screenshot.

You can also try adjusting these [[user option]]s that affect `*Completions*' display, to see if it helps. They are:

* `<tt>[[Icicles - Customization and General Tips#icicle-candidate-width-factor|icicle-candidate-width-factor]]</tt>'
* `<tt>[[Icicles - Customization and General Tips#icicle-completions-format|icicle-completions-format]]</tt>'
* `<tt>[[Icicles - Customization and General Tips#icicle-Completions-frame-at-right-flag|icicle-Completions-frame-at-right-flag]]</tt>'

* `<tt>[[Icicles - Customization and General Tips#icicle-Completions-text-scale-decrease|icicle-Completions-text-scale-decrease]]</tt>'
* `<tt>[[Icicles - Customization and General Tips#icicle-Completions-window-max-height|icicle-Completions-window-max-height]]</tt>'
* `<tt>[[Icicles - Customization and General Tips#icicle-inter-candidates-min-spaces|icicle-inter-candidates-min-spaces]]</tt>'

There are some other options that also affect `*Completions*' display, but I doubt they are related. To see all such options and their docs, use `M-x customize-group RET Icicles-Completions-Display RET'. But I'm not sure any of the options that affect `*Completions*' display are related to what you are trying to describe.

3. You also seem to be asking why '''Icicles''' completion is not available for this command -- e.g. why the minibuffer is not used etc. '''Icicles''' is mainly about minibuffer completion, not in-buffer text completion such as symbol-completion. In a few instances, I have also added support for some buffer-text completion commands, but they are the exception, since they need to be defined case by case. IOW, buffer-text completion commands generally do not use `completing-read', so they do not benefit automatically from '''Icicles'''.

'''Icicles''' does not do anything special for this particular command; it provides no ''Icicle''-mode replacement for it. So what you get is just the vanilla command, but with the `*Completions*' display differences mentioned, due to the redefinition of `display-completions-list'.

If you want '''Icicles'''-style completion for this command, you will need to define a replacement command for it. I don't have the time now to do that (and I can't be bothered to do it for each possible such symbol-completion vanilla command).

I have done that for `lisp-complete-symbol', `bbdb-complete-name', and `dabbrev-completion'. If you look at those, and compare the '''Icicles''' definitions to the originals, you will likely see how to adapt `TeX-complete-symbol' to get '''Icicles''' completion. The idea is to change only the part of the code that handles the case where there are multiple completions. In that case, you want to let '''Icicles''' use the minibuffer, calling `completing-read'.

The most important thing for me here is #2. Please let me know more clearly what the display problem is: what you see that you do not want to see. Mail me a screenshot if you like. I'll take a look and at least get back to you with an explanation, if not some better help. Thx -- DrewAdams


----
[new]

Yes, thanks a lot for detailed (as always) explanations.  I will do as you said at #3 and try to learn some lisp at the same time.

Concerning #2, I am already embarrassed to have bothered you with that. It was some glitch or something that I can not reproduce after restart of the emacs sessions. 
If I encounter it once again I will definitely make a screen-shot and send it to you. -- RedBlue

[new:DrewAdams:2010-01-27 17:10 UTC]
No problem. If you do try #3 and succeed, I can probably include what you come up with in '''Icicles''', if you like. If you have trouble trying #3 and have questions, email me; perhaps I can help. -- DrewAdams


[new:RedBlue:2010-01-27 19:20 UTC]

So here I am with an screen-shot. The main problem is resizing of the bottom buffer. 
Indeed the resizing does not happen if I have 3 or more windows. But the problem occurs with 2 windows.
Here is the image with buffers before the completion:
[[image:beforeTeX-Completion]]

and after:
[[image:afterTeX-Completion]]


The only inconvenience is resizing the buffer back to normal hight. -- RedBlue


[new:DrewAdams:2010-01-27 22:52 UTC]
What's not clear to me is what is different here from when you do not use '''Icicles'''. I would expect the completions shown in the buffer to be displayed a bit differently (e.g. spacing), and perhaps the window height to be a bit different (see the options mentioned above), but what differences do you see that bother you? I believe that in both cases the `*Completions*' window is not removed (but with '''Icicles''' you can remove it by doing `##C-]##'). -- DrewAdams




<pre>

</pre>
----
<pre>

</pre>
----

|| *Previous:*  IciclesIssues || '''[[Icicles]]''' || IciclesIssuesStale || IciclesIssuesClosed || 


CategoryCompletion
