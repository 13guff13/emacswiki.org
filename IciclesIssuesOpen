: [[image:iciclesimage]]

|| *Previous:*  IciclesIssues || '''[[Icicles]]''' || IciclesIssuesStale || IciclesIssuesClosed || 

----

== Open Icicles Issues ==

This page is for discussion of open issues you might have with library '''<tt>[[icicles.el]]</tt>''' ('''[[Icicles]]'''), including bugs.

See also:

* IciclesIssuesStale -- Issues that users did not follow up on -- never heard back from them. Could mean that the problem is not a problem; could mean that they gave up ;-).

* IciclesIssuesClosed -- Issues that were resolved. Bugs that were fixed. Explanations of non-bugs. Issues from this page (IciclesIssuesOpen) and IciclesIssuesStale are moved there when they are resolved.

* IciclesDiscussion -- General discussion about the library, feedback, possible uses, and possible enhancements.


=== How To Report an Icicles Issue ===

You can report an '''Icicles''' issue (bug) on this page -- please follow the formatting suggestion provided below ([[#HowToUseThisPage]]).

Alternatively, you can report an '''Icicles''' issue by email, by doing 
one of the following:

* Choose item '''Send Bug Report''' from MenuBar menu '''Icicles'''
* `##M-x icicle-send-bug-report##'
* (1) `C-h' from the minibuffer; (2) click button '''Icicles Options and Faces''' in buffer `*Help*'; (3) click link `##Send Bug Report##' in buffer `##*Customize Group: icicles*##'

Always mention your Emacs version and platform (e.g. Windows, GNU/Linux). If you aren't using the latest '''Icicles''' files, let me know which you are using. '''Icicles''' files each have an <code>Update #</code> field in the header, which identifies the file exactly.

The advantage of reporting a bug here is that others can share in the discussion. The advantage of reporting a bug by email is that I will see it immediately. Sometimes I don't notice a bug report on this page for a while.




=== Debugging Tips ===

1. If you use the debugger to report a backtrace then you should first ensure that you are using the '''Icicles''' ''source'' files (##icicles*.el##) and not their byte-compiled versions (##icicles*.elc##).  If you normally use byte-compiled files (recommended), then either load the source files after the byte-compiled files or do not load the byte-compiled files at all.  To prevent loading the byte-compiled files you can either delete them or temporarily move them out of your `load-path'.

2. By default, in ''Icicle'' mode, some code captures errors that are raised, so that you can continue working.  For example, when you initiate an action command from the minibuffer and it raises an error, the error is suppressed so that you can continue with completion.

For debugging you will often want to turn off this capture of errors.  You can do this by temporarily setting `debug-on-error' to non-`nil'.  This will cause an error that would normally be captured (handled, not raised) to enter the debugger.

Similarly, to enter the debugger on `C-g', even in contexts that would normally handle a `quit' signal specially, set `debug-on-quit' to non-`nil'.











[:HowToUseThisPage]
=== How To Use This Page ===

For readability, please separate each issue thread with `----' (horizontal line), and introduce each entry within a thread with `<code>[new]</code>'. 

Better yet, use this to separate threads (puts space before and after the horizontal line):

 <pre>

 </pre>
 ----
 <pre>

 </pre>






== (Open) Issues ==




''Enter your report below.''

<pre>

</pre>
----
<pre>

</pre>



<pre>

</pre>
----
<pre>

</pre>
[new]
Hi Drew,
You made a small mistake and uploaded icicles-chg.el as icicles-mac.el, so icicles stopped working for me :) 

Another, completely different issue:

I use: GNU Emacs 23.2.1 (i486-pc-linux-gnu, GTK+ Version 2.20.0) of 2010-12-11 on raven, modified by Debian and icicles latest version.

The historical candidates feature stopped working for files. Actually M-h works fine, but M-Pause stopped working, only for files.
I use savehist to save icicle-previous-raw-file-name-inputs and icicle-previous-raw-non-file-name-inputs variables, if it matters something.
Please notice me here if you need more precise describe of the problem.

<pre>

</pre>
----
<pre>

</pre>


[new:Anonymous:2011-10-10 04:29 UTC]
Hi Drew,
I would like to have Icicle Imenu (or variant) insert the Imenu match at point.  The use would be
to insert text (Imenu match) anywhere in the file WITHOUT having point jump to another location copy, jump back then paste.
A more interesting version would cycle sub-matches and allow the user to continue selecting\inserting until the user
ended the command. Is this possible? Thanks Mike

[new:DrewAdams:2011-10-10 13:15 UTC]

IIUC, you want to be able to choose a definition start string (e.g. for a function, variable, etc.) in the buffer, and have that string be inserted at point.  And preferably the command to do this would be a multi-command, so you could use `C-RET' to insert multiple such choices.  Is that right?

If so, there is no command to do that, but you could define one.  What is the use case?  Why would you want to, e.g., insert a string such as ##(defun icicle-color-help## in the buffer?  Or did you mean `icicle-imenu-full' instead of `icicle-imenu', so you would insert the full definition (all of its code)?  I still don't understand why that would be helpful -- why not just move to the definition, select it using `C-M-h', jump back, and insert the region?

Please describe what you want a bit more.  To define such a command, you would keep the "choosing" part of the regular '''Icicles''' Imenu command, then just insert that choice at [[point]] using `insert'.  To make it into a multi-command, you would just use `icicle-define-command' instead of `defun'.  I can be more specific about these things, but I would like to better understand why this would be useful: your use case.  Thx -- DrewAdams






<pre>

</pre>
----
<pre>
</pre>

I am using Icicles with emacs 24.0.50 (a pretty recent built right from the bzr repository) on GNU/Linux x86_64.
So far Icicles is working, but I notices one issue: File name completion in shell work does not work. Entering ./ and pressing TAB does not open the Completions buffer. When icicles is disabled, everything works fine. -- ''tor-exit-router42-readme.formlessnetworking.net''


[new:DrewAdams:2011-09-03 00:12 UTC]
Emacs 24 is not yet released, hence not supported by '''Icicles'''.  I have nevertheless tracked some Emacs 24 changes and updated '''Icicles''' accordingly.  But not very much in this regard.

Here is one workaround, after you download the latest '''Icicles''' files:

  (add-hook 'comint-mode-hook
            (lambda () (setq comint-dynamic-complete-functions
                        '(comint-replace-by-expanded-history
                          comint-dynamic-complete-filename))))

That gives you essentially the Emacs 23 '''Icicles''' completion for this.

If you do not want '''Icicles''' to get involved with such completion, then you can instead customize `icicle-comint-dynamic-complete-replacements' to `nil' and customize `icicle-functions-to-redefine' to remove the comint functions that are there by default. HTH -- DrewAdams



----

|| *Previous:*  IciclesIssues || '''[[Icicles]]''' || IciclesIssuesStale || IciclesIssuesClosed || 


CategoryCompletion
