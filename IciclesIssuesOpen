: [[image:iciclesimage]]

|| *Previous:*  IciclesIssues || '''[[Icicles]]''' || IciclesIssuesStale || IciclesIssuesClosed || 

----

== Open Icicles Issues ==

This page is for discussion of open issues you might have with library '''<tt>[[icicles.el]]</tt>''' ('''[[Icicles]]'''), including bugs.

See also:

* IciclesIssuesStale -- Issues that users did not follow up on -- never heard back from them. Could mean that the problem is not a problem; could mean that they gave up ;-).

* IciclesIssuesClosed -- Issues that were resolved. Bugs that were fixed. Explanations of non-bugs. Issues from this page (IciclesIssuesOpen) and IciclesIssuesStale are moved there when they are resolved.

* IciclesDiscussion -- General discussion about the library, feedback, possible uses, and possible enhancements.


=== How To Report an Icicles Issue ===

You can report an '''Icicles''' issue (bug) on this page -- please follow the formatting suggestion provided below ([[#HowToUseThisPage]]).

Alternatively, you can report an '''Icicles''' issue by email, by doing 
one of the following:

* Choose item '''Send Bug Report''' from MenuBar menu '''Icicles'''
* `##M-x icicle-send-bug-report##'
* (1) `C-h' from the minibuffer; (2) click button '''Icicles Options and Faces''' in buffer `*Help*'; (3) click link `##Send Bug Report##' in buffer `##*Customize Group: icicles*##'

Always mention your Emacs version and platform (e.g. Windows, GNU/Linux). If you aren't using the latest '''Icicles''' files, let me know which you are using. '''Icicles''' files each have an <code>Update #</code> field in the header, which identifies the file exactly.

The advantage of reporting a bug here is that others can share in the discussion. The advantage of reporting a bug by email is that I will see it immediately. Sometimes I don't notice a bug report on this page for a while.




=== Debugging Tips ===

1. If you use the debugger to report a backtrace then you should first ensure that you are using the '''Icicles''' ''source'' files (##icicles*.el##) and not their byte-compiled versions (##icicles*.elc##).  If you normally use byte-compiled files (recommended), then either load the source files after the byte-compiled files or do not load the byte-compiled files at all.  To prevent loading the byte-compiled files you can either delete them or temporarily move them out of your `load-path'.

2. By default, in ''Icicle'' mode, some code captures errors that are raised, so that you can continue working.  For example, when you initiate an action command from the minibuffer and it raises an error, the error is suppressed so that you can continue with completion.

For debugging you will often want to turn off this capture of errors.  You can do this by temporarily setting `debug-on-error' to non-`nil'.  This will cause an error that would normally be captured (handled, not raised) to enter the debugger.

Similarly, to enter the debugger on `C-g', even in contexts that would normally handle a `quit' signal specially, set `debug-on-quit' to non-`nil'.











[:HowToUseThisPage]
=== How To Use This Page ===

For readability, please separate each issue thread with `----' (horizontal line), and introduce each entry within a thread with `<code>[new]</code>'. 

Better yet, use this to separate threads (puts space before and after the horizontal line):

 <pre>

 </pre>
 ----
 <pre>

 </pre>






== (Open) Issues ==




''Enter your report below.''






<pre>

</pre>
----
<pre>

</pre>


[new]
Hi Drew,
a fresh checkout of Icicles stopped working on emacs 24.0.90. Here's the backtrace:

<pre>
Debugger entered--Lisp error:
(invalid-function icicle-define-bookmark-command)
  icicle-define-bookmark-command("non-file")
  byte-code("\300\301!\210\302\301!\...
  require(icicles-cmd1)
  byte-code("\300\301!\210\300\302!\...
  require(icicles)
</pre>

-- 46.165.196.182

[new:DrewAdams:2011-10-18 17:00 UTC]
1. A backtrace from byte-compiled code is useless, I'm afraid.  Always load only the ('''Icicles''') source files (##*.el##, not ##*.elc##) before creating a backtrace to report.

2. Please be sure to download the latest '''Icicles''' files.  If you byte-compile the files (not for debugging, but for use), which I recommend, then please read and follow the note in the header of <tt>[[icicles-mac.el]]</tt> (it is repeated in <tt>[[icicles.el]]</tt> and <tt>[[icicles-chg.el]]</tt>).  Here it is again:

<pre>
;;  ******************
;;  NOTE: Whenever you update Icicles (i.e., download new versions of
;;  Icicles source files), I recommend that you do the following:
;;
;;      1. Delete all existing byte-compiled Icicles files
;;         (icicles*.elc).
;;      2. Load Icicles (`load-library' or `require').
;;      3. Byte-compile the source files.
;;
;;  In particular, always load `icicles-mac.el' (not
;;  `icicles-mac.elc') before you byte-compile new versions of the
;;  files, in case there have been any changes to Lisp macros (in
;;  `icicles-mac.el').
;;  ******************
</pre>

(This is the case for ''all'' use of EmacsLisp macros, BTW.)

3. I do not support Emacs 24 for '''Icicles'''.  Emacs 24 has not yet been released.  I use it myself, and you are welcome to use it with '''Icicles''', but all bets are off wrt support and debugging.  If you are using it, I suggest you download the pretest, which is now available. (I cannot test with it, however, since no Windows binary has yet been published, even though the pretest source code was published a month ago.)

Thx -- DrewAdams





<pre>

</pre>
----
<pre>

</pre>
[new]
Hi Drew,
You made a small mistake and uploaded icicles-chg.el as icicles-mac.el, so icicles stopped working for me :) 

Another, completely different issue:

I use: GNU Emacs 23.2.1 (i486-pc-linux-gnu, GTK+ Version 2.20.0) of 2010-12-11 on raven, modified by Debian and icicles latest version.

The historical candidates feature stopped working for files. Actually M-h works fine, but M-Pause stopped working, only for files.
I use savehist to save icicle-previous-raw-file-name-inputs and icicle-previous-raw-non-file-name-inputs variables, if it matters something.
Please notice me here if you need more precise describe of the problem. -- PasJa

[new:DrewAdams:2011-10-11 13:46 UTC]
Sorry about that -- <tt>[[icicles-mac.el]]</tt> should be OK now.

'''''Make sure''''' that you (a) load ##icicles-mac.el##, (b) byte-compile ##icicles-mac.el## (if you byte-compile files -- recommended), then (c) byte-compile all of the other '''Icicles''' files.  It is important to re-byte-compile all files after loading ##icicles-mac.el##, whenever ##icicles-mac.el## has changed.

Dunno about your problem with using `M-pause' with file-name reading.  It works fine for me, with all Emacs versions through a Sept 19 build of Emacs 24 (the latest build I have).  Be sure that you have used `TAB' or `S-TAB' before you hit `M-pause' (or a message will tell you to).

You can try `M-x debug-on-entry icicle-keep-only-past-inputs', perhaps (after loading <tt>[[icicles-mcmd.el]]</tt> -- not the ##.elc##).  The main thing to check when doint that is the value of the value of `minibuffer-history-variable' (which should itself be `file-name-history').  Let me know what you find out.  (Of course, without the correct latest ##icicles-mac.el##, nothing should work well at all.) Thx -- Drew


[new]

Hi Drew, 

I set up a testing enviroment and i've got some more strange errors:

a.) test init.el

    (setq debug-on-error 1)
    (add-to-list 'load-path "/tmp/.emacs.d/") ; start emacs with HOME=/tmp, do not clobber my prod setup

b. content of "/tmp/.emacs.d/"
...
    

 M-x load library RET icicles RET

Then:

   require(icicles-var)
    Debugger entered--Lisp error: (void-function incf)
...
I've stopped here. If we could solve this problem, i will continue to investigate the previous problem. --PasJa

[new:DrewAdams:2011-10-12 13:22 UTC]
My bad.  I made some substantial changes recently that moved things around a bit.  I moved some things to <tt>[[icicles-mac.el]]</tt> and that meant that that file needed to require ##cl.el[c]## when byte-compiling.  This should be OK now.  Please load the latest version of that file, byte-compile all of the '''Icicles''' files (if you use them byte-compiled, which I recommend), then restart Emacs.  Sorry for the trouble.  Thx -- DrewAdams


[new]

So, icicles loading correctly. I use the 'canonical' method to load icicles. My init.el:

    (add-to-list 'load-path "/tmp/.emacs.d/")
    (require 'icicles)
    (icy-mode 1)

Icicles has been downloaded today.

Content of //tmp//.emacs.d/

    -rw-rw-r-- 1 pasja pasja 491787 Oct 12 15:16 icicles-chg.el
    -rw-rw-r-- 1 pasja pasja 359710 Oct 10 23:19 icicles-cmd1.el
    -rw-rw-r-- 1 pasja pasja 408344 Oct 10 23:38 icicles-cmd2.el
    -rw-rw-r-- 1 pasja pasja 359098 Oct  9 17:15 icicles-doc1.el
    -rw-rw-r-- 1 pasja pasja 459966 Oct  9 19:46 icicles-doc2.el
    -rw-rw-r-- 1 pasja pasja  70167 Oct 12 18:09 icicles.el
    -rw-rw-r-- 1 pasja pasja  34134 Oct 11 00:27 icicles-face.el
    -rw-rw-r-- 1 pasja pasja 366856 Oct 10 23:00 icicles-fn.el
    -rw-rw-r-- 1 pasja pasja  59985 Oct 12 18:08 icicles-mac.el
    -rw-rw-r-- 1 pasja pasja 408090 Oct  9 03:41 icicles-mcmd.el
    -rw-rw-r-- 1 pasja pasja 271907 Oct  9 03:39 icicles-mode.el
    -rw-rw-r-- 1 pasja pasja 191423 Oct 10 22:48 icicles-opt.el
    -rw-rw-r-- 1 pasja pasja  76484 Oct  8 19:15 icicles-var.el
    -rw-rw-r-- 1 pasja pasja     97 Oct 13 12:32 init.el

Turned on  `debug-on-entry icicle-keep-only-past-inputs'
The debug output is a little overwhelming :) 
I checked the values with `C-h v' 

minibuffer-history-variable value is file-name-history

file-name-history value is ("~/.emacs.d/icicles-face.el" "~/.emacs.d/icicles-doc1.el" "~/.emacs.d/icicles-chg.el")

I noticed that when i hit S-Tab or Tab the face (blue by default) is not set correctly, so maybe the problem lies somwhere else. In the variables it displays correctly in blue and M-Pause works correctly. 

Another question: 

Why bind this function to M-Pause. They have been placed far from each other on the keyboard. Yeah, i could rebind it, but i try to understand the motivation. 

--PasJa

[new:DrewAdams:2011-10-13 14:35 UTC]

I don't know what you mean by "In the variables it displays correctly in blue and M-Pause works correctly.", but maybe it's not important.

Check the variable values in the debugger, using `e', not just outside using `C-h v'.  If you want, you can step through the debugger (`d' to step, `c' to skip over a step (evaluate it completely)), to see what happens.

For '''Icicles''', I believe there should be nothing special about file-name completion that would make `M-pause' work in general but not for file names.

Dunno what to suggest.  (I assume that you used `TAB' or `S-TAB' prior to hitting `M-pause'.  I assume that you have used `C-pause' once or twice to be sure that past-entry highlighting is turned on.)

Try removing those variables from savehist, to take savehist out of the equation.  Perhaps try clearing the history (e.g. `M-i') and starting over, entering some file names (using `RET') etc. 

The choice of `M-pause' was nothing special, IIRC.  Lots of the '''Icicles''' default choices for keys were based on things like (a) associations, including with historical Emacs defaults, (b) key placement, (c) whether the key needs to be repeatable by holding it down, (d) mnemonic aid, (e) relations to other keys (e.g. `RET', `C-RET', `C-M-RET', `S-RET'...).  But I don't recall any special logic behind the choice of `M-pause'.

You can email me, if you like.  It would probably be easier to dialog that way about your problem.  Sorry for your trouble.  -- DrewAdams

[new]

Hi Drew!

If i understood correctly, `icicle-keep-only-past-inputs' is just some kind of filter function. And if the files don't have the marking ''opened before'', the filter function does not work. That was what i tried to describe.

Used my test enviroment, what i've described before. 

I've already taken out `savehist' and i've hit `C-Pause' many times.

But, if i hit `M-i' i see the previous files!!

Thanks for the explanation about your key choiches!

I've uploaded some screenshots: MetaI MetaPause

I will mess the debugger later...

--PasJa







<pre>

</pre>
----
<pre>

</pre>


[new:Anonymous:2011-10-10 04:29 UTC]
Hi Drew,
I would like to have Icicle Imenu (or variant) insert the Imenu match at point.  The use would be
to insert text (Imenu match) anywhere in the file WITHOUT having point jump to another location copy, jump back then paste.
A more interesting version would cycle sub-matches and allow the user to continue selecting\inserting until the user
ended the command. Is this possible? Thanks Mike

[new:DrewAdams:2011-10-10 13:15 UTC]

IIUC, you want to be able to choose a definition start string (e.g. for a function, variable, etc.) in the buffer, and have that string be inserted at point.  And preferably the command to do this would be a multi-command, so you could use `C-RET' to insert multiple such choices.  Is that right?

If so, there is no command to do that, but you could define one.  What is the use case?  Why would you want to, e.g., insert a string such as ##(defun icicle-color-help## in the buffer?  Or did you mean `icicle-imenu-full' instead of `icicle-imenu', so you would insert the full definition (all of its code)?  I still don't understand why that would be helpful -- why not just move to the definition, select it using `C-M-h', jump back, and insert the region?

Please describe what you want a bit more.  To define such a command, you would keep the "choosing" part of the regular '''Icicles''' Imenu command, then just insert that choice at [[point]] using `insert'.  To make it into a multi-command, you would just use `icicle-define-command' instead of `defun'.  I can be more specific about these things, but I would like to better understand why this would be useful: your use case.  Thx -- DrewAdams






<pre>

</pre>
----
<pre>
</pre>

I am using Icicles with emacs 24.0.50 (a pretty recent built right from the bzr repository) on GNU/Linux x86_64.
So far Icicles is working, but I notices one issue: File name completion in shell work does not work. Entering ./ and pressing TAB does not open the Completions buffer. When icicles is disabled, everything works fine. -- ''tor-exit-router42-readme.formlessnetworking.net''


[new:DrewAdams:2011-09-03 00:12 UTC]
Emacs 24 is not yet released, hence not supported by '''Icicles'''.  I have nevertheless tracked some Emacs 24 changes and updated '''Icicles''' accordingly.  But not very much in this regard.

Here is one workaround, after you download the latest '''Icicles''' files:

  (add-hook 'comint-mode-hook
            (lambda () (setq comint-dynamic-complete-functions
                        '(comint-replace-by-expanded-history
                          comint-dynamic-complete-filename))))

That gives you essentially the Emacs 23 '''Icicles''' completion for this.

If you do not want '''Icicles''' to get involved with such completion, then you can instead customize `icicle-comint-dynamic-complete-replacements' to `nil' and customize `icicle-functions-to-redefine' to remove the comint functions that are there by default. HTH -- DrewAdams



----

|| *Previous:*  IciclesIssues || '''[[Icicles]]''' || IciclesIssuesStale || IciclesIssuesClosed || 


CategoryCompletion
