: [[image:iciclesimage]]

|| *Previous:*  IciclesIssues || '''[[Icicles]]''' || IciclesIssuesStale || IciclesIssuesClosed || 

----

== Open Icicles Issues ==

This page is for discussion of open issues you might have with library '''<tt>[[icicles.el]]</tt>''' ('''[[Icicles]]'''), including bugs.

See also:

* IciclesIssuesStale -- Issues that users did not follow up on -- never heard back from them. Could mean that the problem is not a problem; could mean that they gave up ;-).

* IciclesIssuesClosed -- Issues that were resolved. Bugs that were fixed. Explanations of non-bugs. Issues from this page (IciclesIssuesOpen) and IciclesIssuesStale are moved there when they are resolved.

* IciclesDiscussion -- General discussion about the library, feedback, possible uses, and possible enhancements.


=== How To Report an Icicles Issue ===

You can report an '''Icicles''' issue (bug) on this page -- please follow the formatting suggestion provided below ([[#HowToUseThisPage]]).

Alternatively, you can report an '''Icicles''' issue by email, by doing 
one of the following:

* Choose item '''Send Bug Report''' from MenuBar menu '''Icicles'''
* `##M-x icicle-send-bug-report##'
* (1) `C-h' from the minibuffer; (2) click button '''Icicles Options and Faces''' in buffer `*Help*'; (3) click link `##Send Bug Report##' in buffer `##*Customize Group: icicles*##'

Always mention your Emacs version and platform (e.g. Windows, GNU/Linux). If you aren't using the latest '''Icicles''' files, let me know which you are using. '''Icicles''' files each have an <code>Update #</code> field in the header, which identifies the file exactly.

The advantage of reporting a bug here is that others can share in the discussion. The advantage of reporting a bug by email is that I will see it immediately. Sometimes I don't notice a bug report on this page for a while.




=== Debugging Tips ===

1. If you use the debugger to report a backtrace, first delete all '''Icicles''' byte-compiled files, so that you use only the source files (##icicles*.el##) for debugging.

2. By default, in ''Icicle'' mode, `M-x' is bound to command '''`icicle-execute-extended-command''''. This is a multi-command, which presents certain advantages over the standard command bound to `M-x' in Emacs, `execute-extended-command' -- see [[Icicles - Multi M-x]] for details.

However, `icicle-execute-extended-command' has one disadvantage: an error backtrace is less informative, which can make debugging more difficult. If you want to see a normal backtrace at the point of error, then do what I do:

  M-: (define-key icicle-mode-map "\M-x" 'execute-extended-command)
  M-x set-variable debug-on-error t




[:HowToUseThisPage]
=== How To Use This Page ===

For readability, please separate each issue thread with `----' (horizontal line), and introduce each entry within a thread with `<code>[new]</code>'. 

Better yet, use this to separate threads (puts space before and after the horizontal line):

 <pre>

 </pre>
 ----
 <pre>

 </pre>






== (Open) Issues ==




''Enter your report below.''

<pre>

</pre>
----
<pre>

</pre>




[new] 
<pre>
 ;;bugs about icicle and autoload
(require 'autoload)
(setq source-directory "~/.emacs.d/site-lisp/")
(setq generated-autoload-file "joseph-loaddefs.el")
;;so there is a ~/.emacs.d/site-lisp/lisp/joseph-loaddefs.el now


;; now I run
(update-directory-autoloads "~/.emacs.d/site-lisp/icicles/") ;;all files about icicles are in this directory 
;;to update  `joseph-loaddefs.el' now.

;; now I load icicles
(add-to-list 'load-path "~/.emacs.d/site-lisp/icicles")

(add-to-list 'load-path "~/.emacs.d/site-lisp/lisp/")
;;add joseph-loaddefs require
(require 'joseph-loaddefs)

;;then I run  
(icy-mode)
;; I got 
;; Debugger entered--Lisp error: (void-function icicle-restore-standard-options)
;;   (icicle-restore-standard-options)
;;   (cond (icicle-mode (add-hook ... ...) (add-hook ... ...) (add-hook ... ...) (add-hook ... ... ...) (icicle-redefine-standard-options) (icicle-undo-std-completion-faces) (icicle-redefine-std-completion-fns)) (t (remove-hook ... ...) (remove-hook ... ...) (remove-hook ... ...) (remove-hook ... ...) (icicle-restore-standard-options) (icicle-restore-std-completion-fns)))
;;   (let ((last-message ...)) (setq icicle-mode (cond ... ... ...)) (cond (icicle-mode ... ... ... ... ... ... ...) (t ... ... ... ... ... ...)) (message "Turning %s Icicle mode..." (if icicle-mode "ON" "OFF")) (icicle-rebind-completion-maps icicle-mode) (message "Turning %s Icicle mode...done" (if icicle-mode "ON" "OFF")) (run-hooks (quote icicle-mode-hook) (if icicle-mode ... ...)) (if (called-interactively-p ...) (progn ... ...)))
;;   icy-mode()
;;   eval-buffer(#<buffer  *load*> nil "/home/jixiuf/.emacs" nil t)  ; Reading at buffer position 601
;;   load-with-code-conversion("/home/jixiuf/.emacs" "/home/jixiuf/.emacs" t t)
;;   load("~/.emacs" t t)
;;   #[nil " \205\264
</pre>
-- [[Joseph]]


[new:DrewAdams:2011-04-04 01:10 UTC]
MichaelHeerdegen was kind enough to take a look.  He wasn't able to reproduce the problem, but he thinks it might be due to a recently fixed typo in the sources.  Could you please download the '''Icicles''' sources and try again.  Try first without byte-compiling (remove any byte-compiled files), to simplify.

Let me know if you still see a problem.  Sorry for your trouble.  You can reach me by email (`M-x icicle-send-bug-report') if you continue to have the problem.  Thx -- DrewAdams



<pre>

</pre>
----
<pre>

</pre>













----

|| *Previous:*  IciclesIssues || '''[[Icicles]]''' || IciclesIssuesStale || IciclesIssuesClosed || 


CategoryCompletion
