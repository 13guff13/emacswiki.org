: [[image:iciclesimage]]

|| *Previous:*  IciclesIssues || '''[[Icicles]]''' || IciclesIssuesStale || IciclesIssuesClosed || 

----

== Open Icicles Issues ==

This page is for discussion of open issues you might have with library '''<tt>[[icicles.el]]</tt>''' ('''[[Icicles]]'''), including bugs.

See also:

* IciclesIssuesStale -- Issues that users did not follow up on -- never heard back from them. Could mean that the problem is not a problem; could mean that they gave up ;-).

* IciclesIssuesClosed -- Issues that were resolved. Bugs that were fixed. Explanations of non-bugs. Issues from this page (IciclesIssuesOpen) and IciclesIssuesStale are moved there when they are resolved.

* IciclesDiscussion -- General discussion about the library, feedback, possible uses, and possible enhancements.












=== How To Report an Icicles Issue ===

You can report an '''Icicles''' issue (bug) on this page -- please follow the formatting suggestion provided below ([[#HowToUseThisPage]]).

Alternatively, you can report an '''Icicles''' issue by email, by doing 
one of the following:

* Choose item '''Send Bug Report''' from MenuBar menu '''Icicles'''
* `##M-x icicle-send-bug-report##'
* (1) `C-h' from the minibuffer; (2) click button '''Icicles Options and Faces''' in buffer `*Help*'; (3) click link `##Send Bug Report##' in buffer `##*Customize Group: icicles*##'

Always mention your Emacs version and platform (e.g. Windows, GNU/Linux). If you aren't using the latest '''Icicles''' files, let me know which you are using. '''Icicles''' files each have an <code>Update #</code> field in the header, which identifies the file exactly.

The advantage of reporting a bug here is that others can share in the discussion. The advantage of reporting a bug by email is that I will see it immediately. Sometimes I don't notice a bug report on this page for a while.










=== Debugging Tips ===

1. If you use the debugger to report a backtrace then you should first ensure that you are using the '''Icicles''' ''source'' files (##icicles*.el##) and not their byte-compiled versions (##icicles*.elc##).  If you normally use byte-compiled files (recommended), then either load the source files after the byte-compiled files or do not load the byte-compiled files at all.  To prevent loading the byte-compiled files you can either delete them or temporarily move them out of your `load-path'.

2. By default, in ''Icicle'' mode, some code captures errors that are raised, so that you can continue working.  For example, when you initiate an action command from the minibuffer and it raises an error, the error is suppressed so that you can continue with completion.

For debugging you will often want to turn off this capture of errors.  You can do this by temporarily setting `debug-on-error' to non-`nil'.  This will cause an error that would normally be captured (handled, not raised) to enter the debugger.

Similarly, to enter the debugger on `C-g', even in contexts that would normally handle a `quit' signal specially, set `debug-on-quit' to non-`nil'.











[:HowToUseThisPage]
=== How To Use This Page ===

For readability, please separate each issue thread with `----' (horizontal line), and introduce each entry within a thread with `<code>[new]</code>'. 

Better yet, use this to separate threads (puts space before and after the horizontal line):

 <pre>

 </pre>
 ----
 <pre>

 </pre>






















== (Open) Issues ==


''Enter your report below.''


<pre>

</pre>
----
<pre>

</pre>

[new]
C-x m is normally bound to compose-mail by emacs (in simple.el).  When I use icicles and bookmark+ alone, it works for me as documented here.  But with my normal .emacs, it doesn't: I get a new *mail* buffer.  That's true even when I load both at the very end of my .emacs.  How can I fix this?  E.g. track down where the conflict comes up, or what to add to my .emacs to re-bind it for use with bookmarks?  -- [[nealmcb]]

[new:DrewAdams:2012-08-12 07:20 UTC]
Sounds like somehow your ##.emacs## or something it loads is binding `C-x m' in a [[minibuffer]] keymap (which map depends on your Emacs release).

For example, with Emacs 24, the map that should contain `C-x m' as `icicle-bookmark-file-other-window' is `minibuffer-local-filename-completion-map'.  In ''Icicle'' mode, if you do `C-h v' and enter that keymap name then you should see this in the keymap value: ##(24 keymap (97) (109))##.  The 24 is `C-x' and the 109 is `m'.

As with all problems where you have no idea what the culprit is, bisect your [[init file]], by commenting out half of it.  Then bisect the problematic half, then the problematic quarter,...  This binary search is very quick.  You will locate the problem in no time. -- DrewAdams

[new]
Thanks for the quick response.  Sorry for leaving out even basic version info: I'm using the Emacs on Ubuntu Precise 12.04: GNU Emacs 23.3.1 (x86_64-pc-linux-gnu, GTK+ Version 2.24.10), and the icicles package in precise: 23.0+20110910-1, and the bookmark+ version from quodlibetor/bookmarkplus-github
 https://github.com/quodlibetor/bookmarkplus-github/.  

And thanks again for all this cool code!  Though I'll chime in with the frustration that you don't use or endorse any effective version control or version numbering or packaging scheme for all this code.  It pains me to follow the instructions here, but here goes for the 'version' I'm using:
<pre>
$ grep 'Update #' *
col-highlight.el:;;     Update #: 320
crosshairs.el:;;     Update #: 404
hexrgb.el:;;     Update #: 782
hl-line+.el:;;     Update #: 434
icicles-chg.el:;;     Update #: 7120
icicles-cmd1.el:;;     Update #: 22215
icicles-cmd1.el:Each Icicles file has a header `Update #' that you can use to identify it.\
Binary file icicles-cmd1.elc matches
icicles-cmd2.el:;;     Update #: 4206
icicles-doc1.el:;;     Update #: 26186
icicles-doc2.el:;;     Update #: 28228
icicles.el:;;     Update #: 22978
icicles-face.el:;;     Update #: 574
icicles-fn.el:;;     Update #: 12563
icicles-mac.el:;;     Update #: 813
icicles-mcmd.el:;;     Update #: 17246
icicles-mode.el:;;     Update #: 7595
icicles-opt.el:;;     Update #: 4465
icicles-var.el:;;     Update #: 1538
icomplete+.el:;;     Update #: 931
lacarte.el:;;     Update #: 638


bookmark+-1.el:;;     Update #: 5539
bookmark+-1.el:Be sure to mention the `Update #' from header of the particular Bookmark+ file header.\
bookmark+-bmu.el:;;     Update #: 2047
bookmark+-chg.el:;;     Update #: 14933
bookmark+-doc.el:;;     Update #: 14564
bookmark+.el:;;     Update #: 14985
bookmark+-key.el:;;     Update #: 564
bookmark+-lit.el:;;     Update #: 779
bookmark+-mac.el:;;     Update #: 97
</pre>

Upon further searching, I find that it is different than the one at https://github.com/emacsmirror/bookmark-plus.  Sigh.

I had found that minibuffer-local-filename-completion-map keymap, and it looks much like you say:

<pre>
 (24 keymap
     (109)
     (77)
     (116 . icicle-cycle-image-file-thumbnail)
     (46 . icicle-dispatch-C-x\.)
     keymap
     (6 . icicle-resolve-file-name))
</pre>

I was puzzled about why there was no function bound in "(109)".  At any rate, it looks the same both with and without my .emacs, but one works and the other doesn't, which just increased my confusion factor.  A bit of flipping thru the info pages on keymap didn't help.  What's going on?  And how can I just set it to the right thing, ignoring whatever is going on in my .emacs?





<pre>

</pre>
----
<pre>

</pre>


[:DanColishFileNameCompletion]
[new:DanColish:2012-07-31 20:00 UTC]
I am using Icicles with Emacs 24.1 and 23.4, both exhibit the same completion behavior. When I TAB to complete in the minibuffer while using find-file, the completion is appended to the input text. This differs from expansion in when using execute-command. I was expecting the buffer input to be replaced by the completion when hitting tab. The same behavior exists for apropos-completion. Is there any way to have completions expand and replace the existing input in the mini buffer? -- DanColish


[new:DrewAdams:2012-07-31 20:50 UTC]
Sorry, I don't understand.

1. I guess you are using `find-file', and not just `C-x C-f' (which at least by default is bound to `icicle-file').  Not a problem, but please confirm which command is used.

2. Do you use non-`nil' `insert-default-directory'?  Does the bug behavior change if you do or do not?  Please mention any other customizations ('''Icicles''' or otherwise) that you think might affect the behavior.  

3. Can you give a step-by-step recipe?  For example,

a. `M-x find-file' shows this in the minibuffer:

  Find file: /my/dir/

b. You type `toto' and hit `TAB':

  Find file: /my/dir/toto TAB

c. `toto' is completed in the minibuffer to the common prefix `toto-foo', and the full completions are shown in `*Completions*'.

  Find file: /my/dir/toto-foo

d. You type `titi'

  Find file: /my/dir/toto-footiti

Etc.

You get the idea -- please try to be more specific about what you do, what you see, and what you expect or want to see instead.  

Also, if you are using other libraries that you think might interact, try reporting what happens with only '''Icicles''' (i.e., ##emacs -Q##, then load '''Icicles''').  Thx -- DrewAdams


[new:DanColish:2012-07-31 21:36 UTC]
Sorry, I am using `C-x C-f'. I thought that called 'find-file' which called 'icicle-file'.

Currently, I have `insert-default-directory' set non-`nil'. I tried setting it to `nil' but the behavior did not change. The other customizations I have are:

<pre>
(custom-set-variables
 '(icicle-Completions-text-scale-decrease 0.1)
 '(icicle-TAB-completion-methods (quote (vanilla basic)))
 '(icicle-buffers-ido-like-flag nil)
 '(icicle-download-dir "~/.emacs.d/icicles")
 '(icicle-expand-input-to-common-match 2)
 '(icicle-files-ido-like-flag t)
 '(icicle-incremental-completion (quote always))
 '(icicle-mark-position-in-candidate (quote root-start))
 '(icicle-max-candidates nil)
 '(icicle-point-position-in-candidate (quote root-end))
)
</pre>

For example, I do a `C-x C-f' over this dir structure:

  ~/workspace
    ./xapian-github
      ./xapian
        ./xapian-core
          ./include
            ./xapian/
              ./database.h

I would like to only type: ##~/workspace/xap/xap-cor/inc/xapi## and use `TAB' to expand. However, when I do hit tab the minibuffer input ends up like this:

 File or directory: ~/workspace/xap/xap-cor/inc/xapi/xapian/xapian-core/include/xapian/database.h

If I were to hit `RET', a new buffer would be created under that complete dir structure.

I should add that I also tried this with ##emacs -Q## and loading '''Icicles''' with my customizations.  -- DanColish


[new:DrewAdams:2012-08-01 00:57 UTC]
I cannot reproduce the problem with those settings (or with different ones).  With the incremental completion settings and Ido setting the way you have them, do you even need to hit `TAB'?  I get immediate (eager) completion as soon as I type.

Perhaps the problem has something to do with what is in those directories, e.g., whether there is more than one subdir, so more than one possibility.  Try to come up with a tiny (minimal) directory structure that I can use to try to reproduce the problem (although things might be a bit different because I am using MS Windows).

The fewer customizations you have to repro the problem, the easier it will be to debug.  Try to come up with something that minimally reproduces the problem.   (And leave `insert-default-directory' = non-`nil'.)

Are you sure you have `icicle-TAB-completion-methods' = ##(vanilla basic)## at the time you test?  Can you please use `##C-(##' during completion to cycle to `VANILLA', to be sure vanilla completion is current?  The completion you seem to see looks more like `BASIC'.

Sorry for your trouble.  BTW, if you prefer to follow up using email instead of the wiki, that will also be easier for me.  Thx -- DrewAdams








<pre>

</pre>
----
<pre>

</pre>


[:PasJaTrampProblem2012-06-08]
[new]
I've found another little bug: when i go to another machine with tramp, like `/ssh:pasja@example.com:/pasja' and hit the famous tab key, the machine part goes to the completion. My prompt looks like `/ssh:pasja@example.com:/pasja/pasja@example.com'. Of course this directory does not exist in my home folder, and i have to delete back, to get the real completion. After that is could use it normally.

Regards-- PasJa


[new:DrewAdams:2012-06-08 15:40 UTC]
What Emacs version are you using, and what Tramp version? -- DrewAdams


[new]
Emacs: GNU Emacs 23.2.1 (i486-pc-linux-gnu, GTK+ Version 2.20.0) of 2010-12-11 on raven, modified by Debian

Tramp: 2.1.18-23.2

-- PasJa

[new:DrewAdams:2012-06-16 12:51 UTC]
I cannot repro it on Windows.  MichaelHeerdegen tried but cannot repro it on GNU/Linux.  Please follow up using email.  Thx -- DrewAdams











<pre>

</pre>
----
<pre>

</pre>

[new] I'm having a problem that is really frustrating me. I've got a new version of icicles from git. The old version I had when I did M-x cir TAB would instantly complete to circe. Now i have to hit tab multiple times. It's really frustrating me that I can't figure out how to fix this problem. -- DaveKerschner

[new:DrewAdams:2011-12-16 22:31 UTC]
Sorry for your trouble. Please always report your Emacs version etc.  I recommend that you use `M-x icicle-send-bug-report'. Please provide a complete recipe to reproduce your problem, preferably starting with ##emacs -Q##.  When I do `M-x cir TAB' I get no completions - there are no commands with that prefix in my session.  You should not need to hit `TAB' multiple times to complete. If you hit `TAB' multiple times then, after the first, you are cycling among the matches to your current input.  If there is only one match, then `TAB' completes to it immediately.

If you got '''Icicles''' from a git repository somewhere, then I know nothing about what you got.  The latest files are always here, on the wiki. For information about what files you need and how to download them in bulk see [[Icicles - Libraries]]. -- DrewAdams









<pre>

</pre>

----
<pre>

</pre>



[new]
Hi Drew,
a fresh checkout of Icicles stopped working on emacs 24.0.90. Here's the backtrace:

<pre>
Debugger entered--Lisp error:
(invalid-function icicle-define-bookmark-command)
  icicle-define-bookmark-command("non-file")
  byte-code("\300\301!\210\302\301!\...
  require(icicles-cmd1)
  byte-code("\300\301!\210\300\302!\...
  require(icicles)
</pre>

-- 46.165.196.182

[new:DrewAdams:2011-10-18 17:00 UTC]
1. A backtrace from byte-compiled code is useless, I'm afraid.  Always load only the ('''Icicles''') source files (##*.el##, not ##*.elc##) before creating a backtrace to report.

2. Please be sure to download the latest '''Icicles''' files.  If you byte-compile the files (not for debugging, but for use), which I recommend, then please read and follow the note in the header of <tt>[[icicles-mac.el]]</tt> (it is repeated in <tt>[[icicles.el]]</tt> and <tt>[[icicles-chg.el]]</tt>).  Here it is again:

<pre>
;;  ******************
;;  NOTE: Whenever you update Icicles (i.e., download new versions of
;;  Icicles source files), I recommend that you do the following:
;;
;;      1. Delete all existing byte-compiled Icicles files
;;         (icicles*.elc).
;;      2. Load Icicles (`load-library' or `require').
;;      3. Byte-compile the source files.
;;
;;  In particular, always load `icicles-mac.el' (not
;;  `icicles-mac.elc') before you byte-compile new versions of the
;;  files, in case there have been any changes to Lisp macros (in
;;  `icicles-mac.el').
;;  ******************
</pre>

(This is the case for ''all'' use of EmacsLisp macros, BTW.)

3. I do not support Emacs 24 for '''Icicles'''.  Emacs 24 has not yet been released.  I use it myself, and you are welcome to use it with '''Icicles''', but all bets are off wrt support and debugging.  If you are using it, I suggest you download the pretest, which is now available.  Thx -- DrewAdams


















<pre>

</pre>
----
<pre>

</pre>


[new:Anonymous:2011-10-10 04:29 UTC]
Hi Drew,
I would like to have Icicle Imenu (or variant) insert the Imenu match at point.  The use would be
to insert text (Imenu match) anywhere in the file WITHOUT having point jump to another location copy, jump back then paste.
A more interesting version would cycle sub-matches and allow the user to continue selecting\inserting until the user
ended the command. Is this possible? Thanks Mike






[new:DrewAdams:2011-10-10 13:15 UTC]

IIUC, you want to be able to choose a definition start string (e.g. for a function, variable, etc.) in the buffer, and have that string be inserted at point.  And preferably the command to do this would be a multi-command, so you could use `C-RET' to insert multiple such choices.  Is that right?

If so, there is no command to do that, but you could define one.  What is the use case?  Why would you want to, e.g., insert a string such as ##(defun icicle-color-help## in the buffer?  Or did you mean `icicle-imenu-full' instead of `icicle-imenu', so you would insert the full definition (all of its code)?  I still don't understand why that would be helpful -- why not just move to the definition, select it using `C-M-h', jump back, and insert the region?

Please describe what you want a bit more.  To define such a command, you would keep the "choosing" part of the regular '''Icicles''' Imenu command, then just insert that choice at [[point]] using `insert'.  To make it into a multi-command, you would just use `icicle-define-command' instead of `defun'.  I can be more specific about these things, but I would like to better understand why this would be useful: your use case.  Thx -- DrewAdams






























----

|| *Previous:*  IciclesIssues || '''[[Icicles]]''' || IciclesIssuesStale || IciclesIssuesClosed || 


CategoryCompletion
