: [[image:iciclesimage]]

|| *Previous:*  IciclesIssues || '''[[Icicles]]''' || IciclesIssuesStale || IciclesIssuesClosed || 

----

== Open Icicles Issues ==

This page is for discussion of open issues you might have with library '''<tt>[[icicles.el]]</tt>''' ('''[[Icicles]]'''), including bugs.

See also:

* IciclesIssuesStale -- Issues that users did not follow up on -- never heard back from them. Could mean that the problem is not a problem; could mean that they gave up ;-).

* IciclesIssuesClosed -- Issues that were resolved. Bugs that were fixed. Explanations of non-bugs. Issues from this page (IciclesIssuesOpen) and IciclesIssuesStale are moved there when they are resolved.

* IciclesDiscussion -- General discussion about the library, feedback, possible uses, and possible enhancements.




=== How To Report an Icicles Issue ===

You can report an '''Icicles''' issue (bug) on this page -- please follow the formatting suggestion provided below ([[#HowToUseThisPage]]).

Alternatively, you can report an '''Icicles''' issue by email, by doing 
one of the following:

* Choose item '''Send Bug Report''' from MenuBar menu '''Icicles'''
* `##M-x icicle-send-bug-report##'
* (1) `C-h' from the minibuffer; (2) click button '''Icicles Options and Faces''' in buffer `*Help*'; (3) click link `##Send Bug Report##' in buffer `##*Customize Group: icicles*##'

Always mention your Emacs version and platform (e.g. Windows, GNU/Linux). If you aren't using the latest '''Icicles''' files, let me know which you are using. '''Icicles''' files each have an <code>Update #</code> field in the header, which identifies the file exactly.

The advantage of reporting a bug here is that others can share in the discussion. The advantage of reporting a bug by email is that I will see it immediately. Sometimes I don't notice a bug report on this page for a while.




=== Debugging Tips ===

1. If you use the debugger to report a backtrace, first delete all '''Icicles''' byte-compiled files, so that you use only the source files (##icicles*.el##) for debugging.

2. By default, in ''Icicle'' mode, `M-x' is bound to command '''`icicle-execute-extended-command''''. This is a multi-command, which presents certain advantages over the standard command bound to `M-x' in Emacs, `execute-extended-command' -- see [[Icicles - Multi M-x]] for details.

However, `icicle-execute-extended-command' has one disadvantage: an error backtrace is less informative, which can make debugging more difficult. If you want to see a normal backtrace at the point of error, then do what I do:

  M-: (define-key icicle-mode-map "\M-x" 'execute-extended-command)
  M-x set-variable debug-on-error t




[:HowToUseThisPage]
=== How To Use This Page ===

For readability, please separate each issue thread with `----' (horizontal line), and introduce each entry within a thread with `<code>[new]</code>'. 

Better yet, use this to separate threads (puts space before and after the horizontal line):

 <pre>

 </pre>
 ----
 <pre>

 </pre>






== (Open) Issues ==


''Enter your report below''




<pre>

</pre>
----
<pre>

</pre>

[new:]

Dear Drew,

I noticed a weird behavior of my Icy completion in e-lisp mode. When I invoke (lisp-complete-symbol), the prompt jumps to minibuffer and nothing happens. So I need to press additional TAB even if there is a sole completion.

In short, can I have the default completion behavior:
* first invocation of lisp-complete-symbol (`M-TAB') completes the symbol *in place* to a common root.
* second invocation jumps to minibufer and *completions* are automatically shown ( if I pressed `M-tab' twice I already want to see all available candidates and additional `TAB' is somewhat time consuming and disturbing).

Thanks. -- SpinuVit

[new:DrewAdams:2009-09-09 17:48 UTC]
I'm not sure what you mean. If I hit `M-TAB' with the cursor after the text `forward-para', then I see this in the minibuffer:

 Complete Lisp symbol: forward-para

If I then hit `TAB' (or `RET') once, the text in the buffer is completed to `forward-paragraph', since that is the sole completion. IOW, what you describe as wanting is pretty much what I see in this regard.

However, completion takes place in the minibuffer, so, as you say, completing to a common prefix among several completions is not done in the buffer -- you see it in the minibuffer instead.

I don't see a bug here, unless I'm missing something. But the '''Icicles''' behavior is different from the vanilla behavior. If you prefer the vanilla behavior, these are your options:

* quit ''Icicle'' mode, at least temporarily
* customize `icicle-redefine-standard-commands-flag' to `nil'

In the latter case, however, you will lose '''Icicles''' completion also for other things -- see the definition of function `icicle-redefine-standard-commands' for the list.

HTH -- DrewAdams







<pre>

</pre>
----
<pre>

</pre>


----

|| *Previous:*  IciclesIssues || '''[[Icicles]]''' || IciclesIssuesStale || IciclesIssuesClosed || 


CategoryCompletion
