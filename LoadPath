The variable <code>load-path</code> lists all the directories where Emacs should look for elisp files.  They are searched in order.  The first file found is used, therefore the order of the directories might be relevant.  

Preference is given to compiled files when both a compiled file and a source file are found.  Therefore, make sure to recompile files after making changes to them -- or don't compile the files at all.


== Including subdirectories ==

By default Emacs doesn't include subdirectories of a directory which is added to load-path. But you can do it by issuing a command in startup file:

    (normal-top-level-add-subdirs-to-load-path)

which will add all subdirs of current directory and all subdirectories of those directories recursively.  <strong>Note:</strong> current directory is not necessarily the one where your script is executed at the moment. So you first need to change directory to the required one:

    (progn (cd "~/elisp") (normal-top-level-add-subdirs-to-load-path))

In this example it is assumed that you want to add all subdirs of the ~/elisp directory.

However, this will make your emacs run as if you had started it from ~/elisp,
which is annoying.  The following code snippet, found at
http://mail.gnu.org/archive/html/help-gnu-emacs/2003-07/msg00504.html
avoids this problem:

    (if (fboundp 'normal-top-level-add-subdirs-to-load-path)
        (let* ((my-lisp-dir "~/elisp/")
              (default-directory my-lisp-dir))
           (setq load-path (cons my-lisp-dir load-path))
           (normal-top-level-add-subdirs-to-load-path)))

If you only want some of the subdirectories added you can use

    (normal-top-level-add-to-load-path
     '("emms" "erc" "planner" "w3"))


== Add .emacs.d to load-path ==

To add ##.emacs.d/elisp## and its subdirectories to this variable, place the following in your ##.emacs##:

    (let ((default-directory (concat user-emacs-directory "elisp")))
      (add-to-list 'load-path default-directory)
      (normal-top-level-add-subdirs-to-load-path))

It is probably unwise to add all of ##.emacs.d/## to one's load-path since there's a risk of loading files in the ##.emacs.d## tree that aren't intended.  However, Emacs will add sub-directories that start with alpha-numerics and ignore directories that start with dot or include a file called ##.nosearch##.  Though, one can't always predict to be so diligent.

== Other directories ==

There are other directories for Emacs packages, which are listed in ##load-path## by default. The benefits of putting installed packages and personal code in the home directory makes it easy to transfer between machines, and that it's not affected by uninstalling and reinstalling Emacs. It might even survive a system format if the ##/home## tree is mounted from a separate volume or partition.

== Other directories ==

The default value of ##load-path## includes two special directories recursively: ##/usr/local/share/emacs/VERSION/site-lisp## and ##/usr/local/share/emacs/site-lisp##. (On Windows, the equivalent location is ##C:\Program Files\emacs-VERSION\site-lisp##.) The first directory contains packages for a particular Emacs version; the second contains packages for all installed versions of Emacs. These directories contain files for the current ''site'', for use by the system administrator when installing software locally.[http://www.pathname.com/fhs/pub/fhs-2.3.html#USRLOCALLOCALHIERARCHY] On the other hand, ##~/elisp## contains files for the current ''user'', and is independent of system-wide changes.


== Debugging ==

First, check the value of your <code>load-path</code> by asking for help on the variable:
 `C-h v load-path RET' 
should give you the documentation for the variable and its current value.  If your directory is not listed, you must add it (see above).

If your directory <em>is</em> listed, check for ConflictingLibraries.

== Searching for files in your load-path ==

See SearchingLoadPath

----
CategoryHelp
