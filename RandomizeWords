Randomly sorting words in a [[region]] can be done with:

  (defun randomize-region (beg end)
    "Randomize the order of words in region."
    (interactive "*r")
    (let ((all (mapcar
                (lambda (w) (if (string-match "\\w" w)
                                ;; Randomize words,
                                (cons (random) w)
                              ;; keep everything else in order.
                              (cons -1 w)))
                (split-string
                 (delete-and-extract-region beg end) "\\b")))
          words sorted)
      (mapc (lambda (x)
              ;; Words are numbers >= 0.
              (unless (> 0 (car x))
                (setq words (cons x words))))
            all)
      ;; Random sort!
      (setq sorted (sort words
                         (lambda (a b) (< (car a) (car b)))))
      (mapc
       'insert
       ;; Insert using original list, `all', 
       ;; but pull *words* from randomly-sorted list, `sorted'.
       (mapcar (lambda (x)
                 (if (> 0 (car x))
                     (cdr x)
                   (prog1 (cdar sorted)
                     (setq sorted (cdr sorted)))))
               all))))

Running `M-x randomize-region' on:

  first, second, third - last.

produces:

  second, third, last - first.

though, it may sometimes produce:

  first, second, third - last.

You never know.

Use `C-x z' to repeat until properly shuffled.

See SortWords for sorting the order of words alphabetically.

----
CategoryEditing
