[http://www.sublimetext.com/ Minimap] is a feature provided by the Sublime editor. It shows a smaller, "minibar", display of the current buffer alongside the main editing window.

This page is about a minimap implementation for Emacs. In the minibar window, it highlights the portion of the buffer that is currently visible in the main window. This highlight position is updated automatically, as you navigate in the main window. You can scroll the main window by dragging the
highlighted area in the minibar.

You can configure the size/readability of the sidebar freely by specifying the font familiy and height. Here are two screenshots of the minibar in action:

With Bitstream Vera Sans, Height 40:

http://randomsample.de/minimap1.jpg 

With Proggyfont Tiny, Height 20:

http://randomsample.de/minimap2.jpg

Get the latest version from http://randomsample.de/minimap.el

Alternatively, you can clone from the git repo:
<pre>
git://randomsample.de/minimap.git
or
http://randomsample.de/minimap.git
</pre>

Usage:

* Put ##minimap.el## in your load path.
* ##(require 'minimap)##
* Use `M-x minimap-create' in a buffer you're currently editing.
* Use `M-x minimap-kill' to kill the minimap.
* Use `M-x customize-group RET minimap RET' to adapt minimap to your needs.

KNOWN BUGS:

* Currently cannot deal with images.
* Display/movement can be a bit erratic at times.

TODO:

* Fix known bugs.
* Make sidebar permanently visible. This requires something like a
   'window group' feature in Emacs, which is currently being worked on (for the EmacsCodeBrowser).
* Moving the active region with the keyboard / mouse-wheel ?
* Somehow make the minimap more compact -- maybe the line spacing can still be reduced? For now, you can choose another, more condensed fonts.


== Discussion ==

Nice. I found two issues:

The movement of the very small cursor is visible in the minimap windows when the viewport is dragged with the mouse. The cursor should be hidden in that window with `cursor-type'.

The other thing is an interaction bug. When I finish dragging the viewport I get the following backtrace:

<pre>
Debugger entered--Lisp error: (error "The mark is not set now, so there is no region")
  call-interactively(copy-region-as-kill-nomark nil nil)
</pre>


I use pc-selection mode, copy-region-as-kill-nomark is a function in that package. pc-selection allows the user to copy text by simply selecting text and releasing the mouse button. Apparently, this feature clashes with viewport dragging. pc-selection mode should be deactivated in the minimap buffer, if it's possible.


[new]
Thanks, I think I fixed those two in the latest version.

[new]

I suggest hiding the vertical scrollbars in the minimap buffer. They are not really needed if the viewport can be dragged.

[new]

I agree. I added a new option for that. The default is to hide the scroll-bar.

[new]

You could create a new screenshot with the toolbars hidden. I assume it looks better too!

[new]

Done.

----

[new]

Some actions seem to steal the minimap window for their own output.  What about adding
<pre>
(set-window-dedicated-p nil t)
</pre>
in the mode setup to try and minimize that.

[new]

Added a new option for that. It defaults to 'nil' though, because dedicated windows tend to confuse users since they behave unexpectedly.

----

[new]

Really nice! How can you set up emacs so it creates a minimap for every buffer (or, for buffers of a certain type)? A problem I encounter is that when you create minimaps for 2 buffers, you get two minimap windows side-by-side. And so on. Could the minimap frame be reused when you switch buffer in a window? (On Carbon Emacs Fall 2008: Emacs 22.3.1) Thanks!

[new]

Well, that's in the TODO list. Currently, you can't really do that in Emacs without heaviliy using 'defadvice' on all the functions that switch or change buffers (thats what EmacsCodeBrowser does at the moment). There is some work going on to make this kind of fixed 'window grouping' possible in Emacs proper, so I rather just wait for that. At the moment, I'd suggest to bind 'minimap-create' to a key, then just maximize the buffer you're currently editing and use the key combination for 'minimap-create'. Existing minimaps which are currently hidden will then be reused.

----
CategoryWindows   CategoryDisplay
