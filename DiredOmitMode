[[zh:DiredOmitMode_目录隐藏模式]]
DiredOmitMode lets you hide uninteresting files, such as backup files and AutoSave files, from the DiredMode view.

It is defined in the [[Dired X]] package, so you must also arrange to load that:

    ;; Load Dired X when Dired is loaded.
    (add-hook 'dired-load-hook '(lambda () (require 'dired-x)))

    ;; Enable toggling of uninteresting files.
    (setq dired-omit-files-p t)

`M-o' in Dired buffers will toggle hiding of files. Variables `dired-omit-files' (note: no `-p' at end) and `dired-omit-extensions' together define the uninteresting files.

With most recent Emacs versions (e.g. 23.1.92.1) no hooks are needed and the following lines in your .emacs enable omit mode (in this example "dot" files are omitted):

    (require 'dired-x)

    (setq-default dired-omit-files-p t) ; this is buffer-local variable

    (setq dired-omit-files
          (concat dired-omit-files "\\|^\\..+$"))

----

One thing that I want is for dot-files (e.g., .bashrc, .emacs, etc.) to be colored in the same dim face that the other uninteresting files are colored in.  I set (setq dired-omit-files "^\\.?#\\|^\\.$\\|^\\.\\.$\\|^\\..*$"), which does hide my dot-files when I hit M-o, but these files aren't colored in the dim face.  It seems it only dims the files that match the extensions in dired-omit-extensions, but obviously this won't work for dot-files.  Does anyone have a work-around for this? Thanks.

-- parolang

'''See also Dired+''' (DiredPlus), for a way to color less-interesting files differently in Dired. Combined with DiredOmitMode, this can do either of the following:
* Give you two levels of disinterest.
* Let you ''see'' uninteresting files, but not have them stand out.

----
Dired ignores *~ files, which used by recover-session. This turns on omit mode except when running recover-session

   (defun enable-dired-omit-mode () (dired-omit-mode 1))
   (add-hook 'dired-mode-hook 'enable-dired-omit-mode)
   
   (defadvice recover-session (around disable-dired-omit-for-recover activate)
     (let ((dired-mode-hook dired-mode-hook))
       (remove-hook 'dired-mode-hook 'enable-dired-omit-mode)
       ad-do-it))

---

Toggleable dotfile visibility:

  # Ben Eills
  (defun dired-dotfiles-toggle ()
    "Show/hide dot-files"
    (interactive)
    (when (equal major-mode 'dired-mode)
      (if (or (not (boundp 'dired-dotfiles-show-p)) dired-dotfiles-show-p) ; if currently showing
	  (progn 
	    (set (make-local-variable 'dired-dotfiles-show-p) nil)
	    (message "h")
	    (dired-mark-files-regexp "^\\\.")
	    (dired-do-kill-lines))
	(progn (revert-buffer) ; otherwise just revert to re-show
	       (set (make-local-variable 'dired-dotfiles-show-p) t)))))
