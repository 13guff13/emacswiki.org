== Binaries for OS X (and OS 9) ==

Here are some Emacs and XEmacs binaries for OS X.

Cocoa is the Objective-C API (originally developed by !NeXT) that is used for native OS X applications (included in Emacs 23.1).  Aquamacs and Emacs.app (GNU Emacs/Cocoa) both run under Cocoa.  Note that Emacs.app, GNU Emacs/Cocoa, and GNU Emacs/nextstep refer to the same thing.

Carbon is the C language API (developed by Apple) that lets applications written under OS 9 (or earlier) run under OS X.  Carbon Emacs runs under Carbon.  As of Emacs 23, Carbon Emacs has been deprecated in favor of Emacs.app.

If you are a Mac user new to Emacs, many people find Aquamacs to be a good choice.  Many find it to be more Mac-like than Emacs.app, but it is currently based on the older Emacs 22 branch.  (A pre-release version built against Emacs 23 can be found on the [http://aquamacs.org/ Aquamacs] site.

If you've used Emacs before and already have your own emacs initialization file, then Emacs.app is likely a better choice.  As compared to Aquamacs, Emacs.app is more traditional in its approach, prefers a single frame, and is more likely to work with existing emacs initialization files.

[http://www.hoenn.net/blog/index.php?/archives/76-Die-Emacssituation-unter-OS-X.html Auf Deutsch] (in German).

=== OS X Binary Vanilla builds ===

These builds are based on the BZR version of GNU Emacs and do not contain any additional packages or patches. Popular Mac keyboard shortcuts are available though (e.g. Command-O for opening a file); these are mapped to the Super modifier (i.e., the Apple/Command key functions as Super).

* [http://emacsformacosx.com/ GNU Emacs 23.1 (Cocoa)]

* [http://atomized.org/wp-content/cocoa-emacs-nightly/ Nightly builds] of GNU Emacs 23 (Cocoa) from BZR, provided by IanEure

=== OS X Distributions with extras ===

Custom distributions contain startup routines and tweaks to make Emacs' UI behavior more "Mac-like". In addition to that, they typically include recent versions of popular packages.

* [http://aquamacs.org AquamacsEmac]s is a convenient distribution based on GNU Emacs 22.3 and, in a preview version, GNU Emacs 23.1. Aquamacs  comes preconfigured with a large number for packages and differs from other Emacsen in that it feels more like an OS X application. OS X standard keyboard shortcuts are supported, files open in separate windows or tabs, nice fonts are available, and it has a convenient drag&drop installer. Hundreds of file types are supported (C, Java, HTML, Python, Ruby, AppleScript, XML, R (Splus), LaTeX (AUCTeX) etc.). All these extra modes come included and readily configured -- no InitFile hacking. Spell checking is easy to install (e.g., CocoAspell) and asian input methods are also supplied, and options to deal with the missing Meta key on Mac keyboards. A Universal App for PPC and Intel Macs that works well on Panther, Tiger and Leopard. Recommended for Mac users who want an Emacs that is tailored to the Mac.

* CarbonEmacsPackage -- Carbon Emacs Package is a Mac-friendly distribution based on GNU Emacs 22.3.  Tons of extra packages (including AUCTeX, ColorTheme, EmacsMuse, EmacsSession, EmacsSpeaksStatistics, HaskellMode, HowmMode, [[Mew]], [NxhtmlMode nXhtml], PhpMode, PoMode, PsgmlMode, PythonMode, RubyMode etc.) come with it.  Several Mac-friendly features are added; window-opacity, OSX keyboard shortcuts (MacKeyMode), cocoa-stlye print dialog (MacPrintMode) and support for filenames with accent signs.  A Universal Binary application is available Leopard. There are builds for older Mac OS variants, but nothing current.

* [http://members.shaw.ca/akochoi-xemacs/ XEmacs 21.5.18 *beta*], AndrewChoi.  Also available via !DarwinPorts.  Via patches from his home page, you can fix a number of issues, and the patches apply to XEmacs 21.5.22 (See AkochoiXEmacsGplCompliance).

=== OS 9 Binaries ===

The newest available version is 20.6.  It does not support asynchronous processes or network connections, so Gnus and ViewMail do not work.  A hack using AppleEvents has been used to make RMAIL interface with Eudora if it exists on the Macintosh.

The most recent available version of XEmacs is Pitts Jarvis's [http://homepage.mac.com/pjarvis/xemacs.html XEmacs 19.14].

Thanks to SebastienKirche, a precompiled development release of [http://sebastien.kirche.free.fr/emacs_stuff/en.html GNU Emacs 21.3.50] is available for Mac OS 9. The cut/copy/paste buffer is not shared with the OS, so no pasting from other applications.  Drag and drop is not supported on the command line, but draging a text file to the application icon is.  Also, it works when QuickTime 5.0.5 is installed, but not with 4.1.2   If you're missing QT5 you should be able to get it [http://docs.info.apple.com/article.html?artnum=120132 here].

== Building Emacs From Source ==

=== Getting the Source ===

==== BZR ====

Directions for accessing the emacs BZR repository are found at [http://savannah.gnu.org/projects/emacs http://savannah.gnu.org/projects/emacs]. 
To download emacs, use the command:

    bzr branch http://bzr.savannah.gnu.org/r/emacs/trunk

    (or `bzr revert; bzr pull', if you already had checked it out)

==== Tarball ====

Available from the [http://savannah.gnu.org/projects/emacs/ GNU Savannah emacs] page.  Click on "Download Area" under "Quick Overview".

=== Building Emacs for OS X ===

There are many options for building emacs (such as whether to build the X11 version), which are discussed in the INSTALL file. There is also a script (emacs/mac/make-package) to create a Mac OS X package for use by the installer.

==== Cocoa Emacs ====

Emacs 23.1 ships with Cocoa support.  You can build it by running something like the following:

<pre>
  ./configure --with-ns
  make
  make install
</pre>

When the build is complete, you should see Emacs.app in ./nextstep/Emacs.app.  Simply copy it to your applications folder and open it to run.

For more detailed instructions, see the <tt>nextstep/INSTALL</tt> [http://cvs.savannah.gnu.org/viewvc/emacs/nextstep/INSTALL?root=emacs&view=markup file].  Additionally, you may benefit from reading the build script here: http://github.com/ieure/emacs-nightly.  

Note that 10.6.n (Snow Leopard) does not build from the June/July 23.1 release source tarball.  You need the latest BZR version of the trunk.  Emacs.app now builds x86-64 by default on platforms which are 64-bit capable.

As of 05.08.2010 builds fine on Snow Leopard.  Just built: GNU Emacs 23.2.1 (x86_64-apple-darwin10.0.0, NS apple-appkit-1038.00) of 2010-05-08 on ...

==== X11 Emacs ====

Directions to build and install may be found in the INSTALL or INSTALL.BZR files. The basic build and installation of the X11 Emacs application uses the commands:

<pre>
    ./configure --with-x
    make
    sudo make install
</pre>

==== Carbon Emacs (deprecated) ====

Directions to build and install may be found in the file newly downloaded to emacs/mac/INSTALL. The basic build and installation of the carbon Emacs application uses the commands:

<pre>
    ./configure --enable-carbon-app
    make
    sudo make install
</pre>

Note: Carbon emacs has been replaced with Cocoa Emacs in Emacs 23.1.




=== Building Emacs for OS 9 ===

Emacs can be compiled on the classic MacOS using the Macintosh
Programmer's Workshop.  MPW is a unix-like environment for the
MacOS, which used to cost thousands $$$$ USD but is
now freely available due to believed obsolescence.  Die hard
MacOS9 aficiondos rejoice.

MPW is available from:
ftp://ftp.apple.com/developer/Tool_Chest/Core_Mac_OS_Tools/MPW_etc./

Then, follow the instructions in the Emacs source, in the file $EMACS/mac/INSTALL .

== Packages ==

=== Fink ===

As of May 2nd, 2010 Fink [http://fink.sourceforge.net/ http://fink.sourceforge.net/] includes the following packages:

* XEmacs 21.4.20
* Emacs  23.1   from BZR   (no X11)
* Emacs  23.1   from BZR   (X11 Xaw3d)
* Emacs  9.0rc3 from BZR (Cocoa)
* color-theme, ecb, edb, eieio, emacs-w3, emacs-w3m, jdee, mew, nxml-mode, planner-el, speedbar, ...
and even AucTeX!
 

Note: OS X 10.2.2 changed the unexec-mechanism used by Emacs, so the prepackaged Emacs cannot be used for 10.2.2.  
You may want to either get the latest source from Emacs BZR and build it yourself (see Andrews page for the FAQ) 
or use XEmacs instead. -- ThorbjoernRavnAndersen

=== MacPorts ===

!MacPorts [http://www.macports.org/ http://www.macports.org/] is another means of installing Emacs on OS X 
(and other unix-alikes for that matter). 
As of May 2nd, 2010 it provides the following packages:

* Emacs -- version 23.1 (X11 Xaw3d)
* Emacs-app -- 23.1 (Cocoa)
* Emacs-app-devel  -- same as emacs-app, but with a newer BZR development version (20090104 as of October 2009)
* XEmacs -- 21.4.21 (X11)

For the OS-X native (Cocoa) versions, once you've got !MacPorts installed, run

   sudo port install emacs-app

or (if you prefer a more recent version)

   sudo port install emacs-app-devel

It's also possible to build the development version of GNU Emacs with ATSUI -- Apple Type Services for Unicode Imaging. 


== Tips ==

=== Use Alt/Option as Meta Key for Terminal.app on Snow Leopard ===

Terminal.app > Preferences > Settings > Keyboard > Use option as meta key

Alt-b and Alt-f for navigating by word also works for your shell now.

=== Call AppleScript from Emacs ===

I use Andrew Choi's build of GNU Emacs at work every day on OS X. I keep some notes and some Lisp functions for calling AppleScript from Emacs in my advogato.org diary:

http://advogato.org/person/wainstead/

=== Encoding for Terminal.app on OS X  ===

* UTF-8

The OS X Terminal.app uses UTF-8 by default.  To get the correct behaviour from the Emacs that comes with OS X,
I use the following settings in my InitFile file:

    (set-terminal-coding-system 'utf-8)
    (set-keyboard-coding-system 'utf-8)
    (prefer-coding-system 'utf-8)

you also can write accents like this C-x 8 ' character
see C-x 8 C-h

See UnicodeEncoding.

This also works with XEmacs 21.5.9 and above, at least.

* Ctrl-Up and Ctrl-Down in shell-mode

In shell-mode, the [C-up] and [C-down] key-bindings do not work as expected to browse the history ring. The problem
is that Terminal.app does not properly send these control sequences. To fix this behavior, open Terminal.app
Preferences>>Settings>>Keyboard. Select the "+" button and you will see that you can add bindings to the "cursor down" 
key with the "control" modifier. Select "send string to shell", and enter "ESCp", i.e., emacs M-p. Similarly,
define control cursor up to send "ESCn" to the shell.

=== Emacs keybindings in Cocoa Apps ===

This information does not regard the actual use of emacs, but I think many people will be happy to find out that some cursor movement / text editing keybindings can be used in Cocoa Apps. If you ever happen to use any other application on your Mac ... You can also set up additional keybindings as described in [http://developer.apple.com/documentation/Cocoa/Conceptual/EventOverview/TextDefaultsBindings/TextDefaultsBindings.html this document].

http://www.lorax.com/FreeStuff/TextExtras.html provides additional Emacs like features to every Cocoa application like alt-/ completion

=== Emacs keybindings in Terminal ===

[new]
So control-s is just beeping at me in emacs in the Mac OS X Terminal (10.4) on my home machine but works fine on 10.2 on my work machine -- what gives?  I've looked into the flow control tty issue and tried to disable it -- still emacs just sits there beeping.  M-x save-buffers and M-x isearch gets to be a pain.  Any hints for the Mac OS X Terminal?
[new]
: I don't know the answer to this, but the fact that it is beeping means that Emacs is probably getting it and just not understanding it. If it had anything to do with flow control, you wouldn't get even beeping. -- JonathanArnold

[new]
Say I want to run the function "forward-sexp" bound to C-M-f. I *should* be able to get at it with "hold ctrl, hold alt, hit f". However, if I actually do that I get the
result of the command forward-word (M-f). To actually get forward-sexp I must "hit esc, hold ctrl, hit f". However the alt key works fine as meta for things like M-x and basically anything that doesn't also require ctrl. Anyone know how to fix this? (This is using Terminal.app on 10.4.9 btw).

[new]
: iTerm sends C-M-keys and mouse events.  Remote emacsen run for months via iTerm + ssh + [[screen]].
Any volunteers to hack C-M- and mouse input into Terminal.app with GDB and Objective-C?

See the following blog post for swapping the cmd and meta key:

http://andrewmcdermott.blogspot.com/2009/11/cmd-key-happy-swap-cmdalt-keys-in.html

[new]
: Terminals on most operating systems (including Terminal.app) have a very limited set of keys that they send to applications. Rarely will they send C-M-keys to the app.  For this and several other reasons I recommend running Emacs as a full app, not inside a terminal, except for quick changes.  You can use Esc C-f in a pinch but it's not as efficient as M-C-f.

[new]
: C-M-f binding is processed properly in Leopard's Terminal.app. I filed a bug-report with Apple when running Tiger and actually received an email reply telling me this would be fixed in Leopard (which it was).

=== Emacs Keybindings under X11 ===

See the following blog post for using alt as your meta key:

http://tylerkieft.com/archives/2006/10/05/redefine-the-x11-meta-key-in-mac-os-x/

=== Command to Maximize Emacs 23.1 (vanilla) ===

Fullscreen mode doesn't work in Vanilla Emacs 23.1.  This at least maximizes your session to take up as much room as possible.

<pre>
(defun maximize-frame () 
  (interactive)
  (set-frame-position (selected-frame) 0 0)
  (set-frame-size (selected-frame) 1000 1000))

(global-set-key (kbd "<s-S-return>") 'maximize-frame)
</pre>

-- [[timcharper]]

=== True fullscreen for the Cocoa build in Emacs 23 ===

This fork has patches for true fullscreen and it works wonderfully.

<pre>
$ git clone git://github.com/typester/emacs.git
$ cd emacs
$ ./configure --with-ns
$ make bootstrap
$ make install
$ mv nextstep/Emacs.app /Applications
</pre>

<pre>
(global-set-key (kbd "M-RET") 'ns-toggle-fullscreen)
</pre>

Source: http://www.stratospark.com/blog/2010/fullscreen_emacs_on_osx.html

------
CategoryPorts CategoryBuilding
