Recent version of ESS integrates out of the box with [[http://cx4a.org/software/auto-complete/ auto-complete]] package.

There are threes sources included `ac-source-R-args', `ac-source-R-objects' and `ess-ac-source-R'. The latest combines previous two to play nicely together.

== Screenshots ==

[[image:ess-ac3]][[image:ess-ac1]]

[[image:ess-ac2]]

== Initialization ==

The easiest way to initialize in R-mode

{{{
(ess-init-ac)
}}}

or if you want AC in your inferior as well:

{{{
(ess-init-ac t)
}}}

== Quick help ==

ESS provides AC help both for arguments and objects (default keys: `C-?` or `<f1>`)

You can bind `M-h` to quick help (requires a fairly recent version of AC https://github.com/m2ym/auto-complete):

{{{
(define-key ac-completing-map (kbd "M-h") 'ac-quick-help)

}}}

== Movement keys ==

Ac binds M-n, and M-p for navigation in the completion menu, which might be inconvenient if you want it to use in the inferior R. Bind it to something else:

{{{
(define-key ac-completing-map "\M-n" nil) ;; was ac-next
(define-key ac-completing-map "\M-p" nil) ;; was ac-previous
(define-key ac-completing-map "\M-," 'ac-next)
(define-key ac-completing-map "\M-k" 'ac-previous)
}}}

== Misc customization ==

You can play with [[http://cx4a.org/software/auto-complete/manual.html#Configuration AC settings]] to adjust the completion to your needs:

{{{

(setq 
      ;; ac-auto-show-menu t
      ;; ac-candidate-limit nil
      ;; ac-delay 0.01
      ;; ac-disable-faces (quote (font-lock-comment-face font-lock-doc-face))
      ;; ac-ignore-case 'smart
      ;; ac-menu-height 10
      ;; ac-quick-help-delay 1.5
      ;; ac-quick-help-prefer-pos-tip t
      ;; ac-use-quick-help nil
)
}}}
