This page describe Lisp:virtual-desktops.el by Cédric Chépied

== Description ==

Virtual desktops for emacs is global minor mode which is quite the same as window manager virtual desktops. All your windows are saved and when you switch between desktops, they are restored in the same place, with the same size and the same content.


== How to use it ==

When mode is enabled the number of the desktop is added in the mode line. By default, you will see "Desk: nil".

=== nil desktop ===
This is the default desktop. You can't save/restore/delete it. It is only a useless desktop. But you can use it.  Your windows won't be saved and it could be what you want.

=== Create, select and delete desktops ===
To create a desktop, use M-x virtual-desktops-add. All windows in the frame will be saved in a new desktop and this desktop will be selected. You can see the current desktop in the mode line.
You can create as many desktops as you want.

To select a desktop, you can use M-x virtual-desktops-next, M-x virtual-desktops-prev, M-x virtual-desktops-goto.

To delete current desktop, use M-x virtual-desktop-del. To delete a specific desktop, use M-x virtual-desktops-del-specific.

=== Update a desktop ===
When you save a desktop, it contains windows which contain buffers. If you change the geometry of windows or the buffers displayed you need to update the desktop if you want your changes to be saved. This can be done with M-x virtual-desktops-update.

If you want your desktops to be automatically updated when you leave them, you can set the virtual-desktops-auto-update variable to t. virtual-desktops-update function will be called automatically when you use next/prev/goto functions.

=== List desktops ===
You can list all virtual desktops with M-x virtual-desktops-list. It will create a buffer which contains a list of all desktops with their buffers.
This buffer is not yet interactive but this feature may be able "soon".


== Notes ==

Virtual desktops are not fully functional. This is my first "real" program in lisp so code is not really optimized.
If you want to contribute or just help me to make code efficient you are welcome.


== Todo ==

Learn lisp.
Make the list buffer interactive: RET should make a virtual-desktops-goto, D virtual-desktops-del-specific, ...
Make current desktop frame specific: each frame could host a specific desktop.
Improve code and restore algorithm.
Learn lisp.
