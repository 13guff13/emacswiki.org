Hi. I met emacs in 2004, and it became my everyday used software till now. Maybe here is a 
good place to share my elisp codes with others or myself. 

I'm reachable at mailto:wuxch2000@gmail.com

----

* **bookmark** Lisp:wuxch-bookmark.el

      stuff about bookmark operation, which include:

** Lisp:wuxch-ibookmark.el 
   
          customize of ibookmark, using bookmark list to remember favorite links.

** Lisp:wuxch-fringe-bookmark.el 
   
          like bm.el, except using tiny flag on fringe instead of hi-lighting whole line.

* **browse-kill-ring** Lisp:wuxch-browse-kill-ring.el

      short-cut key to invoke browse-kill-ring.     


* **buffer** Lisp:wuxch-buffer.el

      config about ibuffer manage.

* **cc-mode** Lisp:wuxch-cc.el

      cc-mode customize.

* **cua** Lisp:wuxch-cua.el

      configure of CUA key definition, and some functions about edit.

* **cursor** Lisp:wuxch-cursor.el

      set bar-cursor.

* **current point** Lisp:wuxch-current-point.el

     display information of current point

* **date** Lisp:wuxch-date.el

      insert current time and date. Emacs alwyas crush when I use display-time with my Thinkpad X60 laptop.

* **desktop** Lisp:wuxch-desktop.el

      using desktop, save all buffers information last time.

* **diary** Lisp:wuxch-diary.el

      staff about diary function.

* **dired** Lisp:wuxch-dired.el Lisp:wuxch-dired-copy-paste.el (**my favorite one**)

      Dired is the most frequent used mode. I adapt this mode with additional function and favourite theme, 
      some key definition is same as Total Command.

      Sometimes, I go to one directory, copy or cut some files, and goto another directory to paste it.
      wuxch-dired-copy-paste.el does it.

* **dos-unix** Lisp:wuxch-dos-unix.el

      functions about dos and unix file format transport.

* **dict** Lisp:wuxch-dict.el

      parser babylon dictionary result, and insert into my personal dictionary.

* **ediff** Lisp:wuxch-ediff.el

      customize of ediff functions.

* **elisp-tag** Lisp:wuxch-elisp-tag.el

      Tag is a tiny and powerful tools for codes browse and edit just like Swiss Army Knife, 
      but build tag file precess is more complicate and other tools, so I write this elisp-file 
      to make it easy.

* **elisp** Lisp:wuxch-elisp.el

      customize of elisp-mode.

* **fill-column** Lisp:wuxch-fill-column.el

      customize of fill column command, especially for chinese characters.

* **find-grep** Lisp:wuxch-find-grep.el

      customize of local grep command.

* **font** Lisp:wuxch-font.el

      configuration of font setting, both english and chinese fonts.

* **fontlock** Lisp:wuxch-fontlock.el

      configuration of font-lock setting.

* **fringe-bookmark** Lisp:wuxch-fringe-bookmark.el Lisp:wuxch-fringe.el 

      display a little flag on fringe for bookmark

* **goto-char** Lisp:wuxch-goto-char.el

      quickly jump to special character.

* **hideshow** Lisp:wuxch-hideshow.el

      show hide label on fringe.

* **hex** Lisp:wuxch-hex.el

      shortcut to hex mode.

* **indent** Lisp:wuxch-indent.el

      do customized process when save file.

* **icicles** Lisp:wuxch-icicles.el

      configure for icicles.

* **imenu** Lisp:wuxch-imenu.el

      imenu config file, also for ecb.

* **mode** Lisp:wuxch-mode.el

      set mode according to suffix.

* **mode-line** Lisp:wuxch-mode-line.el

      customize mode-line.

* **org** Lisp:wuxch-org.el

      configures and codes for org mode.

* **outline** Lisp:wuxch-outline.el

      configures and codes for outline mode.

* **point-stack** Lisp:wuxch-point-stack.el

      codes for point-stack.

* **predictive** Lisp:wuxch-predictive.el

      configures and codes for predictive mode.

* **tex** Lisp:wuxch-tex.el

      configures and codes for tex mode.

* **register(perspective)** Lisp:wuxch-register.el

      store and get windows layout to and from registers.

* **sgml** Lisp:wuxch-sgml.el

      configures and codes for sgml-mode.

* **shell** Lisp:wuxch-shell.el

      codes for shell mode.

* **tag** Lisp:wuxch-tag.el

      configures and codes for tag.

[new]
Welcome to the wiki!  You are probably right that the EmacsWiki is the best place to share EmacsLisp codes snippets, tricks and other nice things about Emacs. --&nbsp;GiorgosKeramidas

----
CategoryHomepage
