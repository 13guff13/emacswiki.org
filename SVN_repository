The SVN repository is run by [[kensanata]] and hosted by [http://savannah.gnu.org/ Savannah].
It contains the raw text of all wiki pages.
A cron job updates the repository every 24h. Check it out: [https://savannah.nongnu.org/projects/emacswiki Emacs Wiki at Savannah].

    svn co svn://svn.sv.gnu.org/emacswiki/emacswikipages

Sources for this stuff: [http://www.emacswiki.org/scripts/emacs-svn-update emacs-svn-update] shell script making use of [http://cvs.savannah.nongnu.org/viewvc/oddmuse/raw.pl?root=oddmuse&view=log raw.pl] and [http://cvs.savannah.nongnu.org/viewvc/oddmuse/mimedecode.pl?root=oddmuse&view=log mimedecode.pl].

(Back to WikiDownload.)

== Git ==

[new]
After a security incident and hardware issues savannah is up again. Thanks to Alex for bringing this repository up again too.

Because subversion depends on the central repository being up to commit there were no updates between November 27th and December 7th. This is a bit of a problem but the bigger problem is that the history has been reset to the state before the incident. This is a big problem for projects that made use of the old history and now have to be reset too.

On the [[Emacsmirror]] I maintain separate git repositories for all packages hosted on the Emacswiki. All these repositories now have to be reset to an old state too. This possible causes problems for other people who have forked these repositories. At the very least it will be a lot of work for me.

All of this could have been prevented if we had used a vcs that did not depend on a central repository. So I would like to suggest that we switch to a distributed vcs. In a similar situation in the future we would only lose access to the repository for a few days but (1) history would not be lost because like in this case the effectively only repository (in the case of svn) had to be reset to a known good state, and (2) we could continue to commit locally since the repository used to get changes essentially is just a mirror of the repository on the machine running the Emacswiki. (Furthermore we could be certain that the repository contents had not been tampered with, making such a reset unnecessary in the first place.)

If you should decide to switch to git I could help with the process. Please contact my because it would be nice if you could use my existing git import. If you use another dvcs or do not use my import this will mean that I have to do a lot of work for nothing. Just like today. -- JonasBernoulli

[new]
As for your offer to move to git...

    aschroeder@thinkmo:~$ git
    -bash: git: command not found

And that's just the beginning. I have never used git. I understand your argument why git would be the better version control software to use in the general case. In this particular case, however, we don't use the history. Nobody else can commit to the repository. As I weigh the costs and benefits, I don't feel too motivated to invest time in this.
-- AlexSchroeder

[new]
*You* don't use the history. *I* do - using [https://github.com/tarsius/elm/raw/master/bin/elm-wiki this] and producing [https://github.com/emacsmirror/emacswiki.org/branches that] as explained [http://www.emacswiki.org/emacs/Emacsmirror#toc1 here] and [http://www.emacswiki.org/emacs/Git_repository#toc1 here].

So while nobody can commit I do use the commits to produce something else from it. And if the history get's corrupted that results in a lot of work for me.

I have looked into [http://www.emacswiki.org/scripts/emacs-svn-update emacs-svn-update] and created emacs-git-update from it. I have two versions of that file (1) [https://github.com/tarsius/ewiki-update/raw/master/emacs-git-update emacs-git-update] which tries to stay as close as possible to the original so that diff actually tells you what has been changed and (2) [https://github.com/tarsius/ewiki-update/raw/master/emacs-git-update.clean emacs-git-update.clean] which has been cleaned up.

This is the list of things that you would have to do to make this work:

* Register at github.com.  Enter your public-key in the settings. Tell me your username.  Wait until I tell you things are setup.  Install git.

* Get the existing repository:
<pre>
git clone https://github.com/emacsmirror/emacswiki.org ~/emacswikipages
</pre>

* Configure user/email for this repository only.

(You could use your name/email here but I think it makes more sense to use "anybody" to indicate that the changes might originate from well anybody (and have not been verified by you or anything like that.)

<pre>
cd ~/emacswikipages
git config user.name "anybody"
git config user.email "anybody@emacswiki.org"
</pre>

* If you want to maintain the svn repository in parallel for a while:
<pre>
sed -i -e "s/emacswikipages/emacswikipages-git/" emacs-git-update
</pre>

* Make executable.  Add to cron.

If something goes wrong at some point in the future I am here to help. I will update the wikipages. I will do whatever has to be done so that you don't feel like you are doing useless work.

Please reconsider. While this does mean some work for you, I will try to do as much as possible. E.g. I can get the cvs repository and simulate the import on my machine for a few days (starting this weekend), so that the changes are smaller that something goes wrong when deploying emacs-git-update on your machine. -- JonasBernoulli

[new]
Due to your complete lack of interest I have remove the repository with the script adapted for git from github. It's fine - there were no further incidents. If you should ever change your mind I still have a local copy waiting for you. -- JonasBernoulli

== Discussion ==

[new]
Why not make this DVC be part of the "Save modification" process ?
This would help in making it a AppropriateMedia of choice instead of
the EmacsNewsgroups or EmacsMailingLists to discuss or to have
know-how content on this wiki. Why ? Because we could easily browse it
offline, edit it offline and commit our changes when online. This is
how ikiwiki wiki engine is working and it damned efficient. -- XavierMaillard

[new]
I agree with Xavier. I think it would be really nice to have instant local access to the wiki,
and I think at least I would be more efficient in contributing to the wiki. Is there anything we could help with to make this happen? -- JoakimVerona

[new]
At one time I had a job running that would update from SVN, and if people had made changes offline, it would edit the wiki pages, too. That was possible without having to switch the wiki backend from simple files to SVN. On the wiki where I tested it, nobody ever used it, so I disabled it again. There was also the question of usability. At the time the job would just commit changes back to the wiki, but loosing SVN username and loosing SVN commit messages (since the job only ran once every 24h).

The alternative would be to write a module for Oddmuse to switch the backend from simple files to SVN. I'm assuming that will be a tricky thing to do.

Yet another alternative would be to switch Emacs Wiki from Oddmuse to Ikiwiki or any other related wiki engine. In that case, however, somebody else would have to take over maintainership. If you volunteer to do that, I suggest you start with a copy of the wiki somewhere, migrate the data, and then we'll do the domain hand-over once everybody is convinced that the new wiki is cool.

-- AlexSchroeder

[new]
The reason the emacswiki is alive and well is because of its splendid maintainership, I think, so anything making the current maintaner uncomfortable would be 
ruled out IMHO. Technology cant replace humans(yet).

I dont now anything about OddMuse, but I can have a look since I have basically the same problem with trac based wikis at work.

--JoakimVerona

[new]
Do you not like the first option? A sync every 24h, simple to implement but loosing some information on the way? I must confess I like that approach best because it promises running code at all times -- we will be able to improve it incrementally. -- Alex

[new]
A 24h svn sync would be fine by me I think. Ideally it would be more often, but the important thing is that it works, and that you can edit locally and upload changes that way.
When this basic support works, one could implement direct sync with filesystem hooks and svn hooks.
--JoakimVerona

[new]
The benefit of a wiki is, of course, that anybody can just write. Anybody who wants write access to SVN, however, needs to apply for it, the admin has to do something, and so on. I don't like it very much. Somebody else will have to work on this. -- Alex

----
CategoryEmacsWikiSite
