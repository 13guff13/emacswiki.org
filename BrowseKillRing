This page is about ways to browse the [[kill ring]], choosing a kill to [[yank]].


== Browsing the Kill Ring ==


* ##browse-kill-ring.el## -- a package by ColinWalters, maintained by NickHurley. You can get it here:
** There is a version with some bug fixes at [https://github.com/T-J-Teru/browse-kill-ring], plus a patch which doesn't seem include there at [http://alioth.debian.org/scm/viewvc.php/emacs-goodies-el/debian/patches/50_browse-kill-ring_bug224751.diff?view=markup&revision=1.1&root=pkg-goodies-el]
** <tt>[[browse-kill-ring.el]]</tt> -- I uploaded ##browse-kill-ring.el## from www.todesschaf.org, I guess this makes it at least semi-official :-) --ClausBrunzema
** Debian: ##apt-get install emacs-goodies-el## (DebianPackage:emacs-goodies-el)
** http://www.todesschaf.org/files/browse-kill-ring.el -- Another link, though I have no idea whether it is "official" in any way.   -- OliverScholz
** It used to be at [http://opensource.cis.ohio-state.edu/~hurley/browse-kill-ring.el], but this link seems dead.





* [[Icicles]]

** `C-- C-y' yanks from the kill ring using completion.

** `M-y' at top level (i.e., not after a yank from either the kill ring or the `secondary-selection-ring' of <tt>[[second-sel.el]]</tt>) yanks from one of those rings using completion.  It yanks a kill by default, but a secondary selection if you use a [[prefix argument]].

:: In both cases you can clean up the ring selectively during completion, deleting entries on the fly. And you can sort completions in various ways.  All '''Icicles''' completion features are available, including [[progressive completion]].




* <tt>[[browse-kill-ring+.el]]</tt> -- Enhancements to ##browse-kill-ring.el##.
** You can browse (or pop) other rings, in addition to the `kill-ring' --- in particular, the `secondary-selection-ring' (see [[SecondarySelection#secondary-sel.el|secondary-sel.el]]).
** You can copy or move selections from one ring to another (using `c').
** You can toggle the display style (new command and key binding).
** Does the right thing when you use DeleteSelectionMode: deletes (replaces) the [[active region]] whenever you insert a kill.



* KillRingSearch -- incremental search of the kill ring

* <tt>[[popup-kill-ring.el]]</tt> -- interactively insert item from kill-ring

* <tt>[[wuxch-browse-kill-ring.el]]</tt> -- key bindings, customization

* Similar to browse-kill-ring -- makes it easy to access and yank text from the kill ring:

       (global-set-key "\C-cy" '(lambda ()
                                 (interactive)
                                 (popup-menu 'yank-menu)))

* Similar function with 
[[Anything]], a candidate selection framework. Start with `M-x anything-show-kill-ring', narrow the list by typing some patterns(multiple patterns are space-delimited string),
select with up/down/pgup/pgdown/C-p/C-n/C-v/M-v, choose with enter to insert an element of `kill-ring'.


== Discussion ==

[new]
I can't praise browse-kill-ring enough -- I don't use it all that much, but when I need it there's no replacing it. -- [[Anonymous]]

[new]
Someone once said "The easiest way to invoke kill-ring browsing is just to use `M-y' without first using `C-y'".  But when I try that (with Emacs 22) I just get "Previous command was not a yank". 

[new]
To get the "M-y immediately pulls up the kill ring" behavior, you need to run M-x browse-kill-ring-default-keybindings.  Or, to put this in .emacs

 (require 'browse-kill-ring)
 (browse-kill-ring-default-keybindings)

[new]
Not that anyone here will believe me, but I am the NickHurley referenced above. I can safely say that I have abandoned browse-kill-ring.el (which is now hosted on GitHub: https://github.com/todesschaf/browse-kill-ring for those who are interested). Enjoy.

[new]
I adapted popup-kill-ring to replace a potential previous yank like the default M-y does (yank-pop).

{{{
diff --git a/libs/popup-kill-ring.el b/libs/popup-kill-ring.el
--- a/libs/popup-kill-ring.el
+++ b/libs/popup-kill-ring.el
@@ -280,6 +280,8 @@ and `pos-tip.el'"
                                            :scroll-bar t
                                            :isearch popup-kill-ring-isearch))
                    (when item
+                     (when (or (eq last-command 'cua--paste-rectangle) (eq last-command 'yank))
+                       (undo))
                      (setq num (popup-kill-ring-get-index item))
                      (when num
                        (let ((kill-ring-item (nth num kill-ring)))
}}}


-- ArneBab


----

CategoryEditing
