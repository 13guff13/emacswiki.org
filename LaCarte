== Q. When is a menu not a menu? A. When it's a la carte! ==


This page describes library '''<tt>[[lacarte.el]]</tt>''', which lets you execute ''menu'' commands from the keyboard, using [[completion]]: 

: '''<code>ESC M-x</code>'''

: <code>Menu command:</code>
: <code>Menu command:</code> '''<code>T [TAB]</code>'''
: <code>Menu command: Tools > </code>
: <code>Menu command: Tools > </code>'''<code>Compa [TAB]</code>'''
: <code>Menu command: Tools > Compare (Ediff) > </code>'''<code>Two F [TAB]</code>'''
: <code>Menu command: Tools > Compare (Ediff) > Two Files... </code>'''<code>[RET]</code>'''

(Note: ##lacarte.el## replaces [[icicles-menu.el]].)



== Menu Completion at the Keyboard ==

All you need to do is put this in your [[init file]] (##~/.emacs##):

  (require 'lacarte)

For convenience, bind a [[key sequence]] to `lacarte-execute-menu-command':

  (global-set-key [?\e ?\M-x] 'lacarte-execute-menu-command)

Consider also replacing the standard binding of `tmm-menu':

  (global-set-key [?\M-`] 'lacarte-execute-menu-command)

And you're good to go.  Type `<code><ESC> M-x</code>'. You are prompted for a menu command to execute.  Just start typing its name. Each menu item's full name, for completion, has its parent menu names as prefixes, as shown in the example above: 

  Tools > Compare (Ediff) > Two Files...




== Not Just for Wimps and Noobs Anymore ==

''You'' don't use menus. They're too slow. Only newbies and wimps use menus. '''''Not any more!''''' Use the keyboard to access any menu item, without knowing where it is or what its full name is. Type just part of its name -- ''any'' part -- and use completion to get the rest: the complete path and item name.





== Icicles Enhances Dining A La Carte ==

Use '''[[Icicles]]''' with '''La Carte''' to get more power and convenience.
Type any part of a menu-item, then use the '''Page Up''' and '''Page Down'''
keys (`prior' and `next') to [[Icicles - Cycling Completions|cycle through all menu commands]] that
contain the text you typed somewhere in their name.  You can match within
any menu or within all menus; that is, you can match any part(s) of the
menu-hierachy prefix.

You can use `S-TAB' to show and choose from all such [[Icicles - Apropos Completions|apropos
completions]], just as you normally use `TAB' to show all prefix
completions (that is, ordinary completions).  Vanilla prefix
completion is still available using `TAB', and you can cycle
through the prefix completions using the arrow keys.

'''Icicles''' apropos completion also lets you type a [[regular expression]]
(regexp) -- it is matched against all of the possible menu items.
So, for instance, you could type `##^e.+buff `next' `next'## ...' to
quickly cycle to menu command `##Edit > Go To > Goto End of Buffer##'.
Or type `##.*print.*buf S-TAB##' to choose from the list of all menu
commands that match `print' followed somewhere by `buf'.

: [[image:lacarte-w-icicles]]

If you know how to use regexps, you can easily and quickly get to the menu command you want, or at least narrow the list of candidates for completion and cycling.

In addition, when you cycle to a candidate or complete to one (entirely), you can see help for that candidate in the [[mode line]]. In the screenshot above, for example, the current candidate is menu item '''File > Print > Printify Buffer''', and this menu item is described in the mode-line as follows:
{{{
  Replace nonprinting characters in buffer with printable representations.
}}}




=== Menu Organization Helps You Find a Command ===

Unlike commands listed in a flat `*Apropos*' page, menu items are organized, grouped logically by common area of application (`File', `Edit',...).  This grouping is also available when cycling completion candidates, and you can take advantage of it to hasten your search for the right command.

You want to execute a command that puts the [[cursor]] at the end of a buffer, but you don't remember its name, what menu it might be a part of, or where it might appear in that (possibly complex) menu. You type `<code>ESC M-x</code>' and type `buffer' at the prompt. You use the '''Page Up''' and '''Page Down''' keys to cycle through all menu items that contain the word `buffer'. 

There are ''lots'' of such menu items. But, all items from the same menu (e.g. `File') are grouped together. You cycle quickly (not reading) to the `Edit' menu, because you guess that moving the cursor has more to do with editing than with file operations, tool use, buffer choice, help, etc. Then you cycle more slowly among the `buffer' menu items in the `Edit' menu. You quickly find `<code>Edit > Go To > Goto End of Buffer</code>'.  QED.



=== Learn About Menu Items By Exploring Them ===

You can display the complete documentation (doc string) for the command corresponding to each menu item, as the item appears in the [[minibuffer]].  To do this, just cycle menu-item candidates using `<code>C-down</code>' or `<code>C-next</code>', instead of `<code>[down]</code>' or `<code>[next]</code>'. The documentation appears in buffer `*Help*'.

In sum, if you use '''La Carte''', you will want to use it with '''[[Icicles]]''' -- ''enjoy!''


----
'''See Also:'''

* [[Icicles - Key Completion]] -- Navigate the MenuBar menus by using '''Icicles''' to complete the `menu-bar' prefix key!

* MenuAccessFromKeyboard, for alternative libraries that also give you keyboard access to menus, in different ways.

* AnythingSources defines anything-c-source-lacarte, the [[Anything]] interface.

----

DrewsElispLibraries referenced here: Lisp:lacarte.el, Lisp:icicles.el

CategoryCompletion CategoryMenus CategoryKeys

