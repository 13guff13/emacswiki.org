[[de:AnSysDe]]
[[ansys-mode.el.gz]] provides support for the FEA (Finite
Element Analysis) program Ansys (http://www.ansys.com) under Unix
and Window systems.  It defines 'Ansys mode', a major mode for
viewing, writing and navigating in APDL (Ansys Parametric Design
Language) files as well as providing managing and communication
capabilities for various Ansys solver processes.

The mode's capabilities are rather sophisticated but the documentation is targeted
for Ansys users with little Emacs
experience, the code is intended as a replacement of [[ansys-mod.el]] because the latter
code is incomplete and not based on newer Ansys versions (maintained up to 1997).

For the installation of [[ansys-mode.el.gz]] and usage please've a look below or in
the file itself. The code is written for Gnu Emacs 22 only and is based on Ansys 11.0.
Any suggestions for improvements are very welcome.
(The latest development version is available at http://code.google.com/p/ansys-mode/.)
-- [[dida]]

== Requirements ==

The code is based on Ansys version 11.0 and is written with GNU
Emacs 22.  It is tested with version 22.1 under XP and GNU/Linux.
The code won't run with Emacs 21.4 and is not (yet) targeted for
XEmacs.  Please visit ftp://ftp.gnu.org/pub/gnu/emacs/windows/ for
official Windows versions of GNU Emacs.

The Ansys solver communication capabilities are mainly restricted
to UNIX systems.

The experimental user variable highlighting is currently only
implemented for files with a '.mac' extension.

== Features ==

The screen-shot below shows an Emacs frame with an APDL file in a window with the help overlay (in yellow) for the "rectng" command.  The window below is displaying the "variables buffer" of this APDL file and on the right hand side the identical APDL file in "outline" mode, i. e. where uninteresting parts are hidden from view.

http://www.duenenhof-wilhelm.de/dieter/ansys-mode.jpg

* Process management (viewing error files, license status, etc.)

* Solver control and comunication (UNIX only)

* Command syntax help (similar but more verbose then the Ansys
  dynamic prompt)

* Keyword (case-sensitive) completion of commands, elements, get-
  and parametric-functions (nearly 1900 Ansys symbols).

* Auto-indentation of looping and conditional blocks

* Closing of open blocks with insertion of the appropriate end
  keyword (case-sensitive)

* Code navigation,extended keyboard shortcuts for code lines,
  number blocks, *DO,*IF, DOWHILE, *CREATE block etc.

* Sophisticated highlighting (optionally also for user variables)

* Displays summary for all definitions (*GET, *DIM, *SET, = and
  *DO) of APDL variables.

* Use of the Emacs abbreviation facility for block templates

* Convenient comment handling, commenting out of whole paragraphs

* Outlining (hiding and navigating) of code sections with Emacs'
  outline-minor-mode

* Auto-insertion of header and code templates into new APDL files


== Installation ==

=== Short instructions ===

put the following paragraph into your .emacs file.

    (autoload 'ansys-mode "ansys-mode" nil t)
       ;assuming ansys-mode.el directory is in your Emacs load-path!
    (add-to-list 'auto-mode-alist '("\\.mac\\'" . ansys-mode))
       ;assuming your APDL files have the extension .mac.
    (auto-insert-mode 1) ;needed for inserting Ansys skeleton
    (setq auto-insert-query t) ;insert skeleton only after request
    (add-to-list 'auto-insert-alist '(ansys-mode . [ansys-skeleton]))
    ;(setq ansys-dynamic-highlighting-flag t) ;helpful but experimental

=== Verbose instructions ===

* The most direct way of using ansys-mode.el is storing the file
  somewhere on disk and loading the included definitions from there
  with the standard Emacs command `load-file' i. e.  type "M-x
  load-file RET", "M-x" means typing first the "Alt"-key and
  then the "x"-key simultaneously.  This gives you a prompt where
  you can type `load-file' followed by the "RET" key to conclude
  the command.  Then Emacs will prompt you for a file location.

  If you feel unsure about these concepts I urgently recommend to
  you strolling through the build-in tutorial of GNU Emacs (you'll
  find it in the help menu of Emacs), it doesn't take much time and
  the investment will also help you speeding up your general
  editing tasks.

  When the definitions are loaded into memory you must type "M-x
  ansys-mode RET" for the files of interest to activate the mode.

* When it becomes annoying loading the Lisp file 'ansys-mode.el'
  every time you are starting Emacs anew, you should specify the
  path for this file in your '~/.emacs' file (the configuration
  file '.emacs' of GNU Emacs in your home directory '~\') and
  auto-load the function `ansys-mode':

     (add-to-list 'load-path
                  "c:\\your\\directory\\where\\ansys-mode.el\\recides")
     (autoload 'ansys-mode "ansys-mode" "Activate Ansys mode." 'interactive)

  So far you only have to type "M-x ansys-mode RET" for every
  interesting APDL file.  With the following code you are also able
  to use the certain Ansys related functions without the need of
  previously having called Ansys mode.  When in your Emacs session
  there is already a file under Ansys mode, then they are available
  anyway.

     (autoload 'ansys-abort-file "ansys-mode" "Activate Ansys abort file function." 'interactive)
     (autoload 'ansys-display-error-file "ansys-mode" "Activate Ansys display error file function." 'interactive)
     (autoload 'ansys-start-ansys-help "ansys-mode" "Activate Ansys start help function." 'interactive)
     (autoload 'ansys-license-status "ansys-mode" "Activate Ansys license status function." 'interactive)

* When you intend to use the mode automatically, e.g. for all files
  you are opening with the extension '.mac' and '.inp', add the
  following to your '.emacs' file:

     (add-to-list 'auto-mode-alist '("\\.inp$" . ansys-mode))
     (add-to-list 'auto-mode-alist '("\\.mac$" . ansys-mode))

* In case you also want to enjoy the auto insertion feature, which
  puts (optionally) some predefined body of Ansys commands to every
  new file--only those opened with `ansys-mode', of course--append
  the following to '.emacs':

     (setq auto-insert-mode 1)
     (setq auto-insert-query t) ;insert only after request
     (add-to-list 'auto-insert-alist '(ansys-mode . [ansys-skeleton]))


== Usage ==

* When not the Ansys mode is not yet started, please invoke the
  mode function `ansys-mode' with typing "M-x" (the "Alt" key and
  the "x" key simultaneously) then you end up in the Emacs
  minibuffer prompt, type "ansys-mode" (you could try the "TAB" key
  for auto-completion) and conclude your input with the "RET" key.
  Then type "C-h m" i. e. the CTRL key together with the "h" key
  and then the "m" key, which gives you an Emacs buffer with basic
  usage guides.


== Acknowledgements ==

(In no particular order)
rms,
Holger Sparr,
Eli Zaretzki,
Markus Triska,
Mathias Dahl,

== History: ==

* The version scheme is a mixture of the used Ansys version and the
  version of the Ansys mode (minor version number).

=== Version 11.0.1 ===

* Feature freeze: 2006-10-02

=== ansys-mode.el version 11.0.1 in comparison to its predecessor
  ansys-mod.el: ===

* New: Provides Ansys command parameter- and syntax help.

* New: Offers Ansys process management: Acquiring license server
  information in a buffer Starting and stopping asynchronously
  Ansys runs.  Sending code lines to running Ansys process (sort of
  code debugging facility) and getting the output into a buffer.

* New: Experimental highlighting of user defined variables.
  Redefinition and clearing of variables is not yet taken into
  account

* New: Emacs customisation facility is available for the new Ansys
  mode group.

* New: Emacs outline-minor-mode is readily available in conjunction
  with this mode.

* Completions of Ansys commands are now case-sensitive, with
  additional completion of function and element names.

* Previously defined skeletons are fully functional now, new ones
  are added and enabled with the abbreviation and auto-load
  facilities of Emacs 22.

* Ansys' interpreter's disregard of any capitalisation is now fully
  taken into account in the highlighting.

* The apostrophe "'" is now assigned as the Ansys string and the
  value of character parameters delimiter and not wrongly """;
  the strings are fontified accordingly.

* The dollar sign "$" is now emphasised as the Ansys condensed
  input character (multiple Ansys commands in one line).

* The colon ":" is now emphasised as the Ansys colon do loop
  character ("(x:y:z)" means from x to y, in z steps, z is equal to
  one as default).  For example: "n,(1:6),(2:18:2)" runs 6 loops.
  Colon loops are working also with real values: k,,(2.5:3:0.1) and
  with array parameters: k,,A(1:100), but the latter is an
  undocumented feature). Since ansys 11.0 the colon looping is
  working with *GET functions (example: A(1:5)=NX(1:5))). A ":"
  indicates also a beginning of a label for the *GO and *IF
  command.

* "%" is now distinguished as the Ansys parameter substitution
  and format specifier character.

* The ampersand "&" is now correctly highlighted as the only
  available Ansys continuation character applicable to the format
  commands (*MSG, *MWRITE, *VREAD and *VWRITE) command and the
  subsequent format strings of the command are fontified.

* New: " *" (SPC before *) is indicated as an (Ansys deprecated)
  comment sign e. g.: "a = 3 **4" results in "a" setting to 3,
  whereas "a = 3**4" sets "a" to 81!

* New: A line beginning with a comma is indented to the lenght of
  the last non slash or asterisk command as a reminder that the
  Ansys solver interprets this as a space holder for the last
  command keyword (the Ansys default command concept).

* Extended documentation, code cleaning and simplification of
  commands (e.g. comment handling) with the application of standard
  Emacs 22 facilities among other things.


== Resources ==

http://www.emacswiki.org
http://www.ansys.net -- general Ansys repository
http://www.ansys.com
http://www.ansyssolutions.com -- The Ansys solutions magazine


== Bugs and Problems ==

C*** does no parameter substitution, neither the /SYS command; this
is wrongly suggested in the highlighting of Ansys mode

Ansys format line (multi-line) highlighting is brittle, please use
M-o M-o to update the fontification in case the format line is not
correctly highlighted

*END is special: It needs 8 characters in all (+ 4 whitespaces)
before a comment character behind is possible (see the Ansys 11.0
manual), this is not indicated yet

=== Getting help ===

If you experience problems installing or running this mode you have
the following options:

* It might, at the first stage, be helpful for you to visit the
  Emacs Wiki (http://www.emacswiki.org/cgi-bin/wiki/AnsysMode) for
  further instructions.  At the Wiki you can also leave some
  comments or wishes.

* Write an email to the mode maintainer (you can trigger a bug
  report from the menu--at least a useful template when you are not
  in the position of sending emails via Emacs--or call the function
  `ansys-submit-bug-report').

* When you have already a (cost free) Google account you are able
  to issue a bug report at the Google Code hosted page
  http://code.google.com/p/ansys-mode/issues/list. On this side you
  can also download the latest development version.

----
The mode doesn't run smooth, although I have compiled those "el" files to "elc". I am using "GNU Emacs 22.1.50.1 (i386-mingw-nt5.1.2600) of 2007-05-13 on OS515-1". It seems fontification is slow because there're too much apdl command?

[new]
Yes, the current fontification regexps of the keywords are probably too complicated, in the next version I'll implement a choice variable between basic fontification and sophisticated one. [[dida]]

----
CategoryModes | ProgrammingModes
