== Paredit Viper Compatibility ==
Lisp:paredit-viper-compat.el allows paredit and viper to work together.

See the contents of the file for more information, or follow the instructions on this page. Also, see the bottom of the file for information about why paredit and viper weren't working together and how paredit-viper-compat.el fixes it.

PLEASE DO NOT CONTACT THE AUTHOR OF PAREDIT.EL FOR SUPPORT. This code is separate from paredit.el. I am submitting a patch to hopefully see this integrated into paredit, but in the meantime, don't bother him. Questions can be left on this wiki page and I will try to answer them.

Note that this file has just been released, and has had little testing. If you have any problems at all don't hesitate to leave a question on the wiki page.

== Setup ==
Download the file and put the following in your emacs:
<pre>
    (eval-after-load 'paredit
      '(progn
         (require 'paredit-viper-compat)
         (paredit-viper-compat))
</pre>

== Custom Keybindings ==
If you want to add custom keybindings, you can use <code>paredit-viper-add-local-keys</code>.
Usage is as follows:
<pre>
(paredit-viper-add-local-keys STATE KEY-ALIST)
</pre>

Where STATE can be <code>'insert-state, 'vi-state, 'emacs-state, or 'all-states</code>,
and KEY-ALIST is a list of key . function pairs of the form
<code>'((key-str . func) (key-str . func) ...)</code>.

For example, to rebind C-w in all viper states (insert, vi, and emacs states):
<pre>
(paredit-viper-add-local-keys 'all-states
                              '(("\C-w" . paredit-backward-kill-word)))
</pre>

If you want to bind keys for several states, add a paredit-viper-add-local-keys form for each one.

== Complete configuration example ==
Here is a complete example using user customized keybindings:
<pre>
(eval-after-load 'paredit
  '(progn
     (require 'paredit-viper-compat)
     (paredit-viper-compat)
     (paredit-viper-add-local-keys 'all-states
                                   '(("\C-w" . paredit-backward-kill-word)
                                     ;; ... more keys ...
                                     ))))
</pre>

== Inclusion with Paredit.el ==
I hope to see this get into paredit.el proper and am working on a patch. In the mean time I am making it available this way.

== Questions ==
Where is author's mail, to send him feedback? Thanks.

I've stumbled upon an issue on GNU Emacs 23.1 on Windows XP. After calling (paredit-viper-compat), I can't enter "<" anymore, since "<" is now a prefix command (the complete sequence is "< D E L >" (as showed by typing "< C-h").  My understanding is that PareditViperCompat failed to remap the <DEL> key. Here is my code:

{{{
(require 'viper)
(require 'paredit-viper-compat)
}}}

then:
{{{
(paredit-viper-compat)
}}}

Now, I can't enter "<" anymore.

[new:stepnem:2010-07-22 14:03 UTC]
: Yup, the code is broken. I tried it before some time and even fixed some of
the errors, but then I found out that it's not needed at all -- I use Viper
(really Vimpulse, but that's the same) with Paredit just fine. The only
customization I have AFAICT is (in the relevant mode hooks):

{{{
  (viper-add-local-keys 'insert-state
                        '(("\C-d" . paredit-forward-delete)
                          ([backspace] . paredit-backward-delete)
                          ("" . paredit-backward-delete)))
}}}

: IOW, most of the keybindings this library purports to fix works without any
problems. -- stepnem

Thank you, stepnem. It seems the wiki has eaten your line here:
{{{
("" . paredit-backward-delete)))
}}}

[new:stepnem:2010-07-22 19:50 UTC]
: Well, I don't think so. It displays fine in both emacs-w3m and Firefox now I
tried. It's just that Firefox displays 0x7F in a box instead of ^? for the
ASCII DEL character. Perhaps that confused you? -- stepnem

Ops! I forgot to mention what was wrong, sorry. Well, I was writing from a Firefox on Windows, and the quotes appeared empty. Now I'm writing from Firefox on Linux, and I can see an empty box inside the quotes. So, you typed the DEL character inside the quotes. I didn't even know that would be recognized by Emacs... Did you type it with `quoted-insert'? Thanks.

[new:stepnem:2010-07-23 15:50 UTC]
: Yes. Chances are you don't need it at all, or you can use "\d" or (kbd
"DEL") to the same effect. -- stepnem
