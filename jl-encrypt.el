#FILE text/x-emacs-lisp 
Ozs7IGpsLWVuY3J5cHQuZWwgLS0tIEluc2VydCBNTUwgZW5jcnlwdGlvbiB0YWdzIGlmIHB1Ymxp
YyBrZXlzIGFyZSBhdmFpbGFibGUKOzsgLSotIE1vZGU6IEVtYWNzLUxpc3AgLSotCjs7IC0qLSBj
b2Rpbmc6IHV0Zi04IC0qLQoKOzsgQ29weXJpZ2h0IChDKSAyMDExLCAyMDEyLCAyMDEzIEplbnMg
TGVjaHRlbmLDtnJnZXIKCjs7IFZlcnNpb246ICRJZDogamwtZW5jcnlwdC5lbCx2IDEuMiAyMDEz
LzAzLzEyIDE2OjE0OjIzIGxlY2h0ZW4gRXhwIGxlY2h0ZW4gJAo7OyBDb21wYXRpYmlsaXR5OiBT
aG91bGQgd29yayB3aXRoIEdOVSBFbWFjcyAyMy4xIGFuZCBsYXRlcgoKOzsgVGhpcyBwcm9ncmFt
IGlzIGZyZWUgc29mdHdhcmU7IHlvdSBjYW4gcmVkaXN0cmlidXRlIGl0IGFuZC9vcgo7OyBtb2Rp
ZnkgaXQgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBHTlUgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBh
cwo7OyBwdWJsaXNoZWQgYnkgdGhlIEZyZWUgU29mdHdhcmUgRm91bmRhdGlvbjsgZWl0aGVyIHZl
cnNpb24gMywgb3IKOzsgKGF0IHlvdXIgb3B0aW9uKSBhbnkgbGF0ZXIgdmVyc2lvbi4KCjs7IFRo
aXMgcHJvZ3JhbSBpcyBkaXN0cmlidXRlZCBpbiB0aGUgaG9wZSB0aGF0IGl0IHdpbGwgYmUgdXNl
ZnVsLAo7OyBidXQgV0lUSE9VVCBBTlkgV0FSUkFOVFk7IHdpdGhvdXQgZXZlbiB0aGUgaW1wbGll
ZCB3YXJyYW50eSBvZgo7OyBNRVJDSEFOVEFCSUxJVFkgb3IgRklUTkVTUyBGT1IgQSBQQVJUSUNV
TEFSIFBVUlBPU0UuICBTZWUgdGhlIEdOVQo7OyBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGZvciBt
b3JlIGRldGFpbHMuCgo7OyBZb3Ugc2hvdWxkIGhhdmUgcmVjZWl2ZWQgYSBjb3B5IG9mIHRoZSBH
TlUgR2VuZXJhbCBQdWJsaWMgTGljZW5zZQo7OyBhbG9uZyB3aXRoIEdOVSBFbWFjczsgc2VlIHRo
ZSBmaWxlIENPUFlJTkcuCjs7IElmIG5vdCwgc2VlIGh0dHA6Ly93d3cuZ251Lm9yZy9saWNlbnNl
cy8gb3Igd3JpdGUgdG8gdGhlCjs7IEZyZWUgU29mdHdhcmUgRm91bmRhdGlvbiwgSW5jLiwgNTEg
RnJhbmtsaW4gU3RyZWV0LCBGaWZ0aCBGbG9vciwKOzsgQm9zdG9uLCBNQSAwMjExMC0xMzAxLCBV
U0EuCgo7OyBLZXl3b3JkczogbWFpbCwgZW5jcnlwdGlvbiwgR251UEcsIGdwZywgUy9NSU1FLCBP
cGVuUEdQCgo7OyBVUkw6IGh0dHA6Ly93d3cuZW1hY3N3aWtpLm9yZy9lbWFjcy9qbC1lbmNyeXB0
LmVsCjs7IEVtYWNzV2lraTogRGVmYXVsdEVuY3J5cHQKCjs7IEEgc2lnbmVkIHZlcnNpb24gb2Yg
dGhpcyBmaWxlIGlzIGF2YWlsYWJsZSBvdmVyIHRoZXJlOgo7OyBodHRwOi8vd3d3LmluZm9ybWF0
aW9uZWxsZS1zZWxic3RiZXN0aW1tdW5nLWltLWludGVybmV0LmRlL2VtYWNzLwoKOzs7IENvbW1l
bnRhcnk6Cjs7IElmIHlvdSBzb21ldGltZXMgc2VuZCBwbGFpbnRleHQgZS1tYWlscyB0aGF0IHJl
YWxseSBzaG91bGQgaGF2ZSBiZWVuCjs7IGVuY3J5cHRlZCBvbmVzLCB0aGVuIHRoaXMgZmlsZSBt
YXkgYmUgZm9yIHlvdS4KOzsgSSBhc3N1bWUgdGhhdCB5b3UgYXJlIGZhbWlsaWFyIHdpdGggR251
UEcgc3VwcG9ydCBmb3IgR251cyBtZXNzYWdlcyBhcwo7OyBkZXNjcmliZWQgaW4gSW5mbyBub2Rl
IGAobWVzc2FnZSkgU2VjdXJpdHknOgo7OyBodHRwczovL3d3dy5nbnUub3JnL3NvZnR3YXJlL2Vt
YWNzL21hbnVhbC9odG1sX25vZGUvbWVzc2FnZS9TZWN1cml0eS5odG1sCjs7Cjs7IFRoZSBjb2Rl
IGFpbXMgZm9yIGF1dG9tYXRpYyBpbnNlcnRpb24gb2YgYW4gTU1MIHNlY3VyZSBlbmNyeXB0aW9u
IHRhZ3MgaW50bwo7OyBtZXNzYWdlcyBpZiBwdWJsaWMga2V5cyAoZWl0aGVyIEdudVBHIHB1Ymxp
YyBrZXlzIG9yIFMvTUlNRSBjZXJ0aWZpY2F0ZXMpCjs7IGZvciBhbGwgcmVjaXBpZW50cyBhcmUg
YXZhaWxhYmxlLiAgSW4gYWRkaXRpb24sIGJlZm9yZSBhIG1lc3NhZ2UgaXMgc2VudCwKOzsgdGhl
IHVzZXIgaXMgYXNrZWQgaWYgcGxhaW50ZXh0IHNob3VsZCByZWFsbHkgYmUgc2VudCB1bmVuY3J5
cHRlZGx5IHdoZW4KOzsgcHVibGljIGtleXMgZm9yIGFsbCByZWNpcGllbnRzIGFyZSBhdmFpbGFi
bGUuCjs7IFRoaXMgd29ya3MgYnkgcmViaW5kaW5nIGBDLWMgQy1jJyBhbmQgYEMtYyBDLXMnIGFz
IHdlbGwgYXMgYnkgYWRkaW5nCjs7IGBqbC1lbmNyeXB0LWlmLXBvc3NpYmxlJyB0byBgZ251cy1t
ZXNzYWdlLXNldHVwLWhvb2snLgo7OyBJZiB5b3UgYXJlIHJlYWxseSBpbnRlcmVzdGVkIGluIFMv
TUlNRSB0aGVuIEkgc3VnZ2VzdCB0aGF0IHlvdSB0YWtlIGEKOzsgbG9vayBhdCBqbC1zbWltZS5l
bCBpbiBhZGRpdGlvbiB0byB0aGlzIGZpbGUuCgo7OyBJbnN0YWxsOgo7OyBQbGFjZSB0aGlzIGZp
bGUgaW50byB5b3VyIGxvYWQtcGF0aCBhbmQgYWRkIHRoZSBmb2xsb3dpbmcgdG8gfi8uZW1hY3Mu
Cjs7ICAgICAocmVxdWlyZSAnamwtZW5jcnlwdCkKOzsgSWYgeW91IHNoYXJlIG15IHByZWZlcmVu
Y2VzLCBubyBmdXJ0aGVyIGNvbmZpZ3VyYXRpb24gc2hvdWxkIGJlIG5lY2Vzc2FyeS4KOzsgQ29u
ZmlndXJhYmxlIHZhcmlhYmxlcyBhcmUgYGpsLWdwZy13aXRob3V0LW1pbWUnLAo7OyBgamwtZW5j
cnlwdC13aXRob3V0LXNpZ25hdHVyZScsIGFuZCBgamwtcmVjaXBpZW50LWhlYWRlcnMnLgoKOzsg
U2FuaXR5IGNoZWNrOgo7OyBXaXRob3V0IGFueSBmdXJ0aGVyIGNvbmZpZ3VyYXRpb24sIHNlbmQg
YSBHbnVQRyBlbmNyeXB0ZWQgZS1tYWlsIHRvCjs7IHlvdXJzZWxmIGFzIGZvbGxvd3MuICBFbnRl
ciB5b3VyIG93biBlLW1haWwgYWRkcmVzcyBhZnRlciBUbywgY2hvb3NlIHNvbWUKOzsgU3ViamVj
dCwgYW5kIGVudGVyIGBNLXggc3Bvb2snIGluIHRoZSBib2R5LCB3aGljaCB3aWxsIGluc2VydCBz
dWl0YWJsZQo7OyB0ZXh0LiAgVGhlbiBwcmVzcyBgQy1jIEMtYycgdG8gc2VuZCB0aGUgZS1tYWls
IGFzIHVzdWFsIChmb3JnZXR0aW5nIHRvCjs7IGVuY3J5cHQpLiAgSWYgeW91IG93biBhIEdudVBH
IHB1YmxpYyBmb3IgdGhlIFRvIGUtbWFpbCBhZGRyZXNzIHRoZW4geW91Cjs7IHdpbGwgYmUgYXNr
ZWQgd2hldGhlciB5b3UgcmVhbGx5IHdhbnQgdG8gc2VuZCB0aGF0IGUtbWFpbCBhcyBwbGFpbnRl
eHQuCjs7IEFuc3dlcmluZyBgbm8nIHdpbGwgaW5zZXJ0IGFuIE1NTCBzZWN1cmUgdGFnIGZvciB5
b3UuICBQcmVzcyBgQy1jIEMtYycKOzsgYWdhaW4sIGFuZCBhbiBlbmNyeXB0ZWQgZS1tYWlsIHdp
bGwgYmUgc2VudC4gIElmIHlvdSByZWNlaXZlIHRoYXQgZS1tYWlsCjs7IHdpdGggZ2FyYmxlZCBh
dHRhY2htZW50cyByZWFkIHRoZSBjb21tZW50IGZvciBgamwtZ3BnLXdpdGhvdXQtbWltZScuCgo7
OyBZb3UgbWF5IHdhbnQgdG8gY2hlY2sgdGhlIHN1YnNlcXVlbnQgY29tbWVudHMgdG8gdW5kZXJz
dGFuZCB0aGUgcmF0aW9uYWxlCjs7IG9mIG15IGNoYW5nZXMgdG8gc3RhbmRhcmQgbWVzc2FnZSBi
ZWhhdmlvci4KCjs7IFRoaXMgZmlsZSBpcyAqTk9UKiBwYXJ0IG9mIEdOVSBFbWFjcy4KCjs7OyBD
b2RlOgoocmVxdWlyZSAnZ251cykKKHJlcXVpcmUgJ21lc3NhZ2UpCgo7OyBGb3IgcGdwKG1pbWUp
IHRoZSBmb2xsb3dpbmcgdmFyaWFibGUgZW5zdXJlcyB0aGF0IHJlcGxpZXMgdG8gZW5jcnlwdGVk
Cjs7IGUtbWFpbHMgYXJlIGVuY3J5cHRlZCAoaS5lLiwgYW4gTU1MIHRhZyBpcyBpbnNlcnRlZCBp
bnRvIHRoZSBtZXNzYWdlCjs7IGJ1ZmZlcikuCjs7IEhvd2V2ZXIsIHRoaXMgZG9lcyBub3Qgd29y
ayBmb3IgUy9NSU1FIGVuY3J5cHRlZCBlLW1haWxzLiAgT25jZSBkZWNyeXB0ZWQsCjs7IHRoZXkg
bG9vc2UgdGhlaXIgZW5jcnlwdGVkIHByb3BlcnR5IGluIGdudXMtYXJ0aWNsZS13YXNoLXR5cGVz
LiAgSWYgeW91Cjs7IGFyZSBpbnRlcmVzdGVkIGluIFMvTUlNRSwgeW91IG1heSB3YW50IHRvIGNv
bnNpZGVyIGpsLXNtaW1lLmVsLgooc2V0cSBnbnVzLW1lc3NhZ2UtcmVwbHllbmNyeXB0IHQpCgo7
OyBSZWJpbmQga2V5cyBmb3Igc2VuZGluZyBtZXNzYWdlcyB0byBjaGVjayB3aGV0aGVyIGVuY3J5
cHRpb24gaXMgcG9zc2libGUKOzsgKGFsbCBuZWNlc3NhcnkgcHVibGljIGtleXMgYXJlIGF2YWls
YWJsZSkuCjs7IEluIHRoZSBwYXN0LCB0aGlzIGNvdWxkIGhhdmUgcHJldmVudGVkIG1lIGZyb20g
c2VuZGluZyBwbGFpbnRleHQgZS1tYWlscwo7OyB0aGF0IHNob3VsZCBoYXZlIGJlZW4gc2VudCBl
bmNyeXB0ZWQuCihkZWZpbmUta2V5IG1lc3NhZ2UtbW9kZS1tYXAgKGtiZCAiQy1jIEMtYyIpICdq
bC1tZXNzYWdlLXNlbmQtYW5kLWV4aXQpCihkZWZpbmUta2V5IG1lc3NhZ2UtbW9kZS1tYXAgKGti
ZCAiQy1jIEMtcyIpICdqbC1tZXNzYWdlLXNlbmQpCgo7OyBNYWtlIGdudXMgaW5zZXJ0IE1NTCBl
bmNyeXB0aW9uIHRhZ3MgaWYga2V5cyBmb3IgYWxsIHJlY2lwaWVudHMgYXJlCjs7IGF2YWlsYWJs
ZS4gIFRodXMsIGlmIHlvdSByZXBseSAob3Igd2lkZSByZXBseSkgdG8gYSBtZXNzYWdlIG9yIGVk
aXQKOzsgYSBzYXZlZCBkcmFmdCwgdGhlbiBNTUwgZW5jcnlwdGlvbiB0YWdzIHdpbGwgYmUgaW5z
ZXJ0ZWQgcmlnaHQgYXdheS4KKGFkZC1ob29rICdnbnVzLW1lc3NhZ2Utc2V0dXAtaG9vayAnamwt
ZW5jcnlwdC1pZi1wb3NzaWJsZSkKCihkZWZ2YXIgamwtZ3BnLXdpdGhvdXQtbWltZSBuaWwKICAi
Q29udHJvbCB3aGV0aGVyIE1NTCBlbmNyeXB0aW9uIHNob3VsZCB1c2UgTUlNRSBTZWN1cml0eSB3
aXRoIE9wZW5QR1AuClJGQyAzMTU2IHNwZWNpZmllcyBob3cgT3BlblBHUCAoYW5kLCB0aHVzLCBH
bnVQRykgYW5kIE1JTUUgd29yayB0b2dldGhlci4KSW4gR251cywgYG1tbC1zZWN1cmUtbWVzc2Fn
ZS1lbmNyeXB0LXBncG1pbWUnIGZvbGxvd3MgdGhhdCBzdGFuZGFyZC4KQW4gYWx0ZXJuYXRpdmUg
aXMgYG1tbC1zZWN1cmUtbWVzc2FnZS1lbmNyeXB0LXBncCcsIHdoaWNoIHJlcHJlc2VudHMgYQps
ZXNzIHBvd2VyZnVsIGFwcHJvYWNoLiAgSWYgeW91IChsaWtlIG1lIGluIHRoZSBwYXN0KSBoYXBw
ZW4gdG8gc2VuZAplLW1haWxzIGluIGFuIGVudmlyb25tZW50IHVzaW5nIGJyb2tlbiBNJCBTTVRQ
IHNlcnZlcnMsIHRoZW4geW91cgpiZWF1dGlmdWwgZS1tYWlscyBwcm9kdWNlZCBieSBgbW1sLXNl
Y3VyZS1tZXNzYWdlLWVuY3J5cHQtcGdwbWltZScsCmZvbGxvd2luZyBSRkMgMzE1Niwgd2lsbCBi
ZSBjb3JydXB0ZWQgYWxvbmcgdGhlIHdheS4gIEUuZy4sIHRoZSBTTVRQCnNlcnZlciBhdCBteSBk
ZXBhcnRtZW50IHRocm93cyBhd2F5IHRoZSBlLW1haWwncyBDb250ZW50LVR5cGUKYG11bHRpcGFy
dC9lbmNyeXB0ZWQnIGFuZCBpdHMgYHByb3RvY29sPVwiYXBwbGljYXRpb24vcGdwLWVuY3J5cHRl
ZFwiJwphbmQgaW5zZXJ0cyBhIG1lYW5pbmdsZXNzIGBtdWx0aXBhcnQvbWl4ZWQnIG9uZS4gIFRo
dXMsIHRoZSByZWNpcGllbnQKd2lsbCBoYXZlIGEgaGFyZCB0aW1lIGZpZ3VyaW5nIG91dCB3aGF0
IHRoZSBlLW1haWwncyBzdHJhbmdlIGF0dGFjaG1lbnRzCmFyZSBnb29kIGZvci4gIEZVQkFSLgpJ
ZiB0aGlzIHZhcmlhYmxlIGlzIHNldCB0byBuaWwgKHRoZSBkZWZhdWx0KSB0aGVuIHlvdXIgZS1t
YWlscyBhcmUgYnVpbHQKYWNjb3JkaW5nIHRvIFJGQyAzMTU2LiAgSSBzdWdnZXN0IHRoYXQgeW91
IHNlbmQgYW4gZW5jcnlwdGVkIGUtbWFpbCB0bwp5b3Vyc2VsZi4gIENvbXBsYWluIHRvIHlvdXIg
SVQgZGVwYXJ0bWVudCBpZiB5b3UgcmVjZWl2ZSBnYXJibGVkCmF0dGFjaG1lbnRzLiAgVGhlbiBz
ZXQgdGhpcyB2YXJpYWJsZSB0byBub24tbmlsLCB3aGlsZSB0aGV5IGFyZSBzZXR0aW5nCnVwIGEg
cmVhc29uYWJsZSBTTVRQIHNlcnZlci4iKQoKKGRlZnZhciBqbC1lbmNyeXB0LXdpdGhvdXQtc2ln
bmF0dXJlIHQKICAiQ29udHJvbCB3aGV0aGVyIE1NTCBlbmNyeXB0aW9uIHRhZ3Mgc2hvdWxkIGFs
c28gcHJvZHVjZSBzaWduYXR1cmVzLgpTZXQgdG8gbmlsIHRvIHByb2R1Y2UgYW4gTU1MIHRhZyB0
aGF0IHNpZ25zIGluIGFkZGl0aW9uIHRvIGVuY3J5cHRpb24uCkluIGdlbmVyYWwsIEknbSBub3Qg
aW50ZXJlc3RlZCBpbiBzaWduaW5nIG15IGUtbWFpbHMuICBJbiBjb250cmFzdCwgSQpiZWxpZXZl
IHRoYXQgb2ZmLXRoZS1yZWNvcmQgY29tbXVuaWNhdGlvbiBhaW1zIGZvciB0aGUgY29ycmVjdCBz
ZXQgb2YKc2VjdXJpdHkgZ29hbHM6IENvbmZpZGVudGlhbGl0eSB3aXRoIHBlcmZlY3QgZm9yd2Fy
ZCBzZWNyZWN5LCBpbnRlZ3JpdHksCmFuZCByZXB1ZGlhYmlsaXR5LCBzZWU6IGh0dHA6Ly93d3cu
Y3lwaGVycHVua3MuY2Evb3RyLwpVbmZvcnR1bmF0ZWx5LCB0aGF0J3Mgbm90IGFuIG9wdGlvbiBm
b3IgZS1tYWlsLiIpCgooZGVmdmFyIGpsLXJlY2lwaWVudC1oZWFkZXJzICcoInRvIiAiY2MiKQog
ICJMaXN0IG9mIGhlYWRlcnMgdGhhdCBkZXRlcm1pbmUgd2hvc2Uga2V5cyBtdXN0IGJlIGF2YWls
YWJsZS4KQW4gTU1MIHNlY3VyZSB0YWcgd2lsbCBvbmx5IGJlIGluc2VydGVkIGJhc2VkIG9uIGBq
bC1lbmNyeXB0JyBpZiBwdWJsaWMga2V5cwpvciBjZXJ0aWZpY2F0ZXMgYXJlIGF2YWlsYWJsZSBm
b3IgYWxsIHJlY2lwaWVudHMgbWVudGlvbmVkIGluIHRoZXNlIGhlYWRlcnMuCk5vdGUgdGhhdCB0
aGlzIGxpc3QgZG9lcyBub3QgaW5jbHVkZSBGcm9tOyBpbiBjYXNlIG9mIEdudVBHLCBJIHJlY29t
bWVuZCB0aGUKZW5jcnlwdC10byBvcHRpb24gaW4gZ3BnLmNvbmYgaW5zdGVhZCAod2hpY2ggbWFr
ZXMgc3VyZSB0aGF0IHlvdSBjYW4gZGVjcnlwdAplLW1haWxzIHNlbnQgYnkgeW91cnNlbGYpLgpB
bHNvLCBiZSBjYXJlZnVsIHdpdGggQmNjIGhlYWRlcnM7IGl0ICptaWdodCogYmUgcG9zc2libGUg
dG8gbWFrZSB0aGlzIHdvcmsKd2l0aG91dCBnaXZpbmcgYXdheSB0aGUgQmNjJ2VkIGlkZW50aXRp
ZXMsIGJ1dCBJIGRpZCBub3QgdGVzdCB0aGlzIGFuZApyZWNvbW1lbmQgYWdhaW5zdCBzdWNoIGEg
dGhpbmc6IE9ubHkgYWRkIEJjYyBpZiB5b3UgYXJlIGFic29sdXRlbHkgc3VyZSB0aGF0CnlvdSBr
bm93IHdoYXQgeW91IGFyZSBkb2luZy4gIEFuZCBsZXQgbWUga25vdyBob3cgdG8gZG8gdGhhdCBw
cm9wZXJseSA7KSIpCgo7OyBGb3IgdGhlIHJlYXNvbiBzdGF0ZWQgaW4gdGhlIGRvY3N0cmluZyBv
ZiBqbC1lbmNyeXB0LXdpdGhvdXQtc2lnbmF0dXJlLAo7OyBJJ20gbm90IHVzaW5nOgo7OyAoc2V0
cSBnbnVzLW1lc3NhZ2UtcmVwbHlzaWduIHQpCgo7OyBNb3Jlb3ZlciwgSSBkb24ndCB0aGluayB0
aGF0IHNldHRpbmcgbW1sLWRlZmF1bHQtZW5jcnlwdC1tZXRob2QgbWFrZXMgbXVjaAo7OyBzZW5z
ZS4gIFRoZSBjb2RlIGluIHRoaXMgZmlsZSBkZXRlcm1pbmVzIHdoYXQgbWV0aG9kIHRvIHVzZSBi
YXNlZCBvbiB0aGUKOzsgYXZhaWxhYmlsaXR5IG9mIHB1YmxpYyBrZXlzIG9yIGNlcnRpZmljYXRl
cy4gIEFuZCBvbiBqbC1ncGctd2l0aG91dC1taW1lLgo7OyBCZSBzdXJlIHRvIHJlYWQgaXRzIGNv
bW1lbnQuCgo7Owo7OyBObyBjb25maWd1cmF0aW9uIG9wdGlvbnMgYmV5b25kIHRoaXMgcG9pbnQu
ICBKdXN0IGNvZGUuCjs7CgooZGVmdW4gamwtbWVzc2FnZS1zZW5kLWFuZC1leGl0ICgmb3B0aW9u
YWwgYXJnKQogICJEZWxlZ2F0ZSB3b3JrIHRvIGBqbC1tZXNzYWdlLXNlbmQtbWF5YmUtZXhpdCcs
IHBhc3NpbmcgQVJHLiIKICAoaW50ZXJhY3RpdmUgInAiKQogIChqbC1tZXNzYWdlLXNlbmQtbWF5
YmUtZXhpdCB0IGFyZykpCgooZGVmdW4gamwtbWVzc2FnZS1zZW5kICgmb3B0aW9uYWwgYXJnKQog
ICJEZWxlZ2F0ZSB3b3JrIHRvIGBqbC1tZXNzYWdlLXNlbmQtbWF5YmUtZXhpdCcsIHBhc3Npbmcg
QVJHLiIKICAoaW50ZXJhY3RpdmUgInAiKQogIChqbC1tZXNzYWdlLXNlbmQtbWF5YmUtZXhpdCBu
aWwgYXJnKSkKCihkZWZ1biBqbC1tZXNzYWdlLXNlbmQtbWF5YmUtZXhpdCAoZXhpdCBhcmcpCiAg
IlNlbmQgbWVzc2FnZSBpZiBNTUwgc2VjdXJlIGVuY3J5cHQgdGFnIGlzIHByZXNlbnQgb3Igbm90
IGFwcHJvcHJpYXRlLgpJZiBNTUwgc2VjdXJlIGVuY3J5cHQgdGFnIGlzIG5vdCBwcmVzZW50LCBj
aGVjayB2aWEKYGpsLXByb2NlZWQtd2l0aG91dC1lbmNyeXB0aW9uLXAnIHdoZXRoZXIgcHVibGlj
IGtleXMgZm9yIGFsbApyZWNpcGllbnRzIGFyZSBhdmFpbGFibGUgYW5kIGFuIE1NTCBzZWN1cmUg
dGFnIHNob3VsZCBiZSBhZGRlZCwgb3IKd2hldGhlciB0aGUgbWVzc2FnZSBzaG91bGQgYmUgc2Vu
dCB3aXRob3V0IGVuY3J5cHRpb24uICBJbiB0aGUgbGF0dGVyCmNhc2UgRVhJVCBjb250cm9scyB3
aGV0aGVyIGBtZXNzYWdlLXNlbmQtYW5kLWV4aXQnIG9yIGBtZXNzYWdlLXNlbmQnCmlzIGNhbGxl
ZCwgYW5kIEFSRyBpcyBwYXNzZWQgYXMgYXJndW1lbnQuIgogIChzYXZlLWV4Y3Vyc2lvbgogICAg
KGdvdG8tY2hhciAocG9pbnQtbWluKSkKICAgIChpZiAob3IgKHNlYXJjaC1mb3J3YXJkICI8I3Nl
Y3VyZS4rZW5jcnlwdCIgbmlsIHQpCgkgICAgKGpsLXByb2NlZWQtd2l0aG91dC1lbmNyeXB0aW9u
LXApKQoJKGlmIGV4aXQKCSAgICAobWVzc2FnZS1zZW5kLWFuZC1leGl0IGFyZykKCSAgKG1lc3Nh
Z2Utc2VuZCBhcmcpKSkpKQoKKGRlZnVuIGpsLXByb2NlZWQtd2l0aG91dC1lbmNyeXB0aW9uLXAg
KCkKICAiUmV0dXJuIHQgaWYgbm8gKGFkZGl0aW9uYWwpIGVuY3J5cHRpb24gaXMgbmVjZXNzYXJ5
LgpUaGlzIGhhcHBlbnMgaWYgKGEpIHRoZSBtZXNzYWdlIGNhbm5vdCBiZSBlbmNyeXB0ZWQgYmVj
YXVzZSBhIGtleQpmb3Igc29tZSByZWNpcGllbnQgaXMgbWlzc2luZywgb3IgKGIpIGFsbCBrZXlz
IGFyZSBhdmFpbGFibGUgYnV0CnRoZSB1c2VyIGV4cGxpY2l0bHkgYW5zd2VyZWQgYHllcycgdG8g
cHJvY2VlZCB3aXRob3V0IGVuY3J5cHRpb24uCk90aGVyd2lzZSwgaS5lLiwgYWxsIGtleXMgYXJl
IGF2YWlsYWJsZSBhbmQgdGhlIHVzZXIgYW5zd2VyZWQKYG5vJywgYW4gYXBwcm9wcmlhdGUgTU1M
IHRhZyBpcyBpbnNlcnRlZCwgYW5kIG5pbCBpcyByZXR1cm5lZC4iCiAgKGludGVyYWN0aXZlKQog
IChsZXQgKChyZWNpcGllbnRzIChqbC1tZXNzYWdlLWZldGNoLXJlY2lwaWVudHMpKSkKICAgIChp
ZiAoamwtdGVzdC1saXN0IHJlY2lwaWVudHMgJ2psLWdwZ2tleS1hdmFpbGFibGUtcCkKCShpZiAo
eWVzLW9yLW5vLXAgIkdudVBHIHB1YmxpYyBrZXlzIGF2YWlsYWJsZSBmb3IgYWxsIHJlY2lwaWVu
dHMuICBSZWFsbHkgcHJvY2VlZCAqd2l0aG91dCogZW5jcnlwdGlvbj8gIikKCSAgICB0CgkgIChq
bC1zZWN1cmUtbWVzc2FnZS1ncGcpCgkgIG5pbCkKICAgICAgKGlmIChqbC10ZXN0LWxpc3QgcmVj
aXBpZW50cyAnamwtY2VydGZpbGUtYXZhaWxhYmxlLXApCgkgIChpZiAoeWVzLW9yLW5vLXAgIlMv
TUlNRSBjZXJ0aWZpY2F0ZXMgYXZhaWxhYmxlIGZvciBhbGwgcmVjaXBpZW50cy4gIFJleWxseSBw
cm9jZWVkICp3aXRob3V0KiBlbmNyeXB0aW9uPyAiKQoJICAgICAgdAoJICAgIChqbC1zZWN1cmUt
bWVzc2FnZS1zbWltZSkKCSAgICBuaWwpCgl0KSkpKQoKKGRlZnVuIGpsLW1lc3NhZ2UtZmV0Y2gt
cmVjaXBpZW50cyAoKQogICJSZXR1cm4gbGlzdCBvZiBjdXJyZW50IG1lc3NhZ2UncyByZWNpcGll
bnRzLgpFYWNoIGxpc3QgZWxlbWVudCByZXByZXNlbnRzIG9uZSByZWNpcGllbnQgKGFtb25nIHRo
b3NlIGxpc3RlZCBpbiB0aGUKaGVhZGVycyBgamwtcmVjaXBpZW50LWhlYWRlcnMnKSB1c2luZyB0
aGUgZm9ybWF0IG9mCmBtYWlsLWV4dHJhY3QtYWRkcmVzcy1jb21wb25lbnRzJy4iCiAgKHNhdmUt
ZXhjdXJzaW9uCiAgICAoc2F2ZS1yZXN0cmljdGlvbgogICAgICAobWVzc2FnZS1uYXJyb3ctdG8t
aGVhZGVycykKICAgICAgKGxldCAoKHJlY2lwaWVudHMKCSAgICAgKG1hcGNvbmNhdCAnaWRlbnRp
dHkKCQkJKHJlbW92ZSBuaWwgKGRlbGV0ZS1kdXBzCgkJCQkgICAgIChtYXBjYXIgJ21lc3NhZ2Ut
ZmV0Y2gtZmllbGQKCQkJCQkgICAgIGpsLXJlY2lwaWVudC1oZWFkZXJzKSkpCgkJCSIsIikpKQoJ
ICAobWFpbC1leHRyYWN0LWFkZHJlc3MtY29tcG9uZW50cyByZWNpcGllbnRzIHQpKSkpKQoKKGRl
ZnVuIGpsLWNlcnRmaWxlLWF2YWlsYWJsZS1wIChyZWNpcGllbnQpCiAgIkNoZWNrIHdoZXRoZXIg
Y2VydGlmaWNhdGUgZmlsZSBpcyBhdmFpbGFibGUgZm9yIFJFQ0lQSUVOVC4KVGhpcyB0ZXN0cyB3
aGV0aGVyIGBzbWltZS1jZXJ0aWZpY2F0ZS1kaXJlY3RvcnknIGNvbnRhaW5zIGEKY2VydGlmaWNh
dGUgZmlsZSB3aG9zZSBuYW1lIGVxdWFscyB0aGUgZS1tYWlsIGFkZHJlc3Mgb2YKUkVDSVBJRU5U
ICh3aGljaCBpcyBpbiB0aGUgZm9ybWF0IG9mCmBtYWlsLWV4dHJhY3QtYWRkcmVzcy1jb21wb25l
bnRzJykuClByb2JhYmx5IHRoaXMgdGVzdCBpcyBvbmx5IHVzZWZ1bCBpbiBjb21iaW5hdGlvbiB3
aXRoIGBqbC1zbWltZScuIgogIChmaWxlLWV4aXN0cy1wIChjb25jYXQgc21pbWUtY2VydGlmaWNh
dGUtZGlyZWN0b3J5IChjYWRyIHJlY2lwaWVudCkpKSkKCihkZWZ1biBqbC1ncGdrZXktYXZhaWxh
YmxlLXAgKHJlY2lwaWVudCkKICAiQ2hlY2sgd2hldGhlciBHbnVQRyBrbm93cyBhIHB1YmxpYyBr
ZXkgZm9yIHRoZSBnaXZlbiBSRUNJUElFTlQuClJFQ0lQSUVOVCBtdXN0IGJlIGluIHRoZSBmb3Jt
YXQgb2YgYG1haWwtZXh0cmFjdC1hZGRyZXNzLWNvbXBvbmVudHMnLiIKICAoPSAwIChjYWxsLXBy
b2Nlc3MgImdwZyIgbmlsIG5pbCBuaWwgIi0tbGlzdC1rZXkiIChjYWRyIHJlY2lwaWVudCkpKSkK
CihkZWZ1biBqbC10ZXN0LWxpc3QgKGxpc3QgcHJlZGljYXRlKQogICJUbyBlYWNoIGVsZW1lbnQg
b2YgTElTVCBhcHBseSBQUkVESUNBVEUuClJldHVybiBuaWwgaWYgc29tZSB0ZXN0IHJldHVybnMg
bmlsOyBvdGhlcndpc2UsIHJldHVybiB0LiIKICAobGV0ICgocmVzdWx0IChtYXBjYXIgcHJlZGlj
YXRlIGxpc3QpKSkKICAgIChpZiAobWVtcSBuaWwgcmVzdWx0KQoJbmlsCiAgICAgIHQpKSkKCihk
ZWZ1biBqbC1zZWN1cmUtbWVzc2FnZS1ncGcgKCkKICAiSW52b2tlIE1NTCBmdW5jdGlvbiB0byBh
ZGQgYXBwcm9wcmlhdGUgc2VjdXJlIHRhZyBmb3IgR251UEcuClRoZSBjaG9pY2UgYmV0d2VlbiBw
Z3Agb3IgcGdwbWltZSBpcyBiYXNlZCBvbiBgamwtZ3BnLXdpdGhvdXQtbWltZScuCkNyZWF0aW9u
IG9mIHNpZ25hdHVyZXMgaXMgY29udHJvbGxlZCBieSBgamwtZG8tbm90LXNpZ24tcCcuIgogIChp
ZiBqbC1ncGctd2l0aG91dC1taW1lCiAgICAgIChtbWwtc2VjdXJlLW1lc3NhZ2UtZW5jcnlwdC1w
Z3AgKGpsLWRvLW5vdC1zaWduLXApKQogICAgKG1tbC1zZWN1cmUtbWVzc2FnZS1lbmNyeXB0LXBn
cG1pbWUgKGpsLWRvLW5vdC1zaWduLXApKSkpCgooZGVmdW4gamwtc2VjdXJlLW1lc3NhZ2Utc21p
bWUgKCkKICAiSW52b2tlIE1NTCBmdW5jdGlvbiB0byBhZGQgYXBwcm9wcmlhdGUgc2VjdXJlIHRh
ZyBmb3IgUy9NSU1FLgpDcmVhdGlvbiBvZiBzaWduYXR1cmVzIGlzIGNvbnRyb2xsZWQgYnkgYGps
LWVuY3J5cHQtd2l0aG91dC1zaWduYXR1cmUnLiIKICAobW1sLXNlY3VyZS1tZXNzYWdlLWVuY3J5
cHQtc21pbWUgKGpsLWRvLW5vdC1zaWduLXApKSkKCihkZWZ1biBqbC1pcy1zaWduZWQtcCAoKQog
ICJDaGVjayB3aGV0aGVyIHNlY3VyZSBzaWduIHRhZyBpcyBwcmVzZW50LiIKICAoc2F2ZS1leGN1
cnNpb24KICAgIChnb3RvLWNoYXIgKHBvaW50LW1pbikpCiAgICAocmUtc2VhcmNoLWZvcndhcmQg
Ijwjc2VjdXJlLitzaWduPiIgbmlsIHQpKSkKCihkZWZ1biBqbC1kby1ub3Qtc2lnbi1wICgpCiAg
IkNoZWNrIHdoZXRoZXIgdGhlIG1lc3NhZ2Ugc2hvdWxkIG5vdCBiZSBzaWduZWQuClRoaXMgaXMg
dGhlIGNhc2UgaWYgdGhlIGBqbC1lbmNyeXB0LXdpdGhvdXQtc2lnbmF0dXJlJyBpcyBUcnVlIGFu
ZCBubyBzZWN1cmUKc2lnbiB0YWcgaXMgcHJlc2VudC4iCiAgKGFuZCBqbC1lbmNyeXB0LXdpdGhv
dXQtc2lnbmF0dXJlCiAgICAgICAobm90IChqbC1pcy1zaWduZWQtcCkpKSkKCihkZWZ1biBqbC1l
bmNyeXB0LWlmLXBvc3NpYmxlICgpCiAgIkluc2VydCBNTUwgZW5jcnlwdGlvbiB0YWcgaWYgYXBw
cm9wcmlhdGUuCklmIHRoZXJlIGlzIGF0IGxlYXN0IG9uZSByZWNpcGllbnQgKG5vdCBjb3VudGlu
ZyB0aGUgRnJvbSBoZWFkZXIpCmFuZCBHbnVQRyBwdWJsaWMga2V5cyBvciBTL01JTUUgY2VydGlm
aWNhdGVzIGFyZSBhdmFpbGFibGUgZm9yIGFsbApyZWNpcGllbnRzIGluIGBqbC1yZWNpcGllbnQt
aGVhZGVycycgdGhlbiBpbnNlcnQgTU1MIGVuY3J5cHRpb24gdGFnLiIKICAobGV0ICgocmVjaXBp
ZW50cyAoamwtbWVzc2FnZS1mZXRjaC1yZWNpcGllbnRzKSkpCiAgICAoaWYgKD4gKGxlbmd0aCBy
ZWNpcGllbnRzKQoJICAgKGlmIChtZW1iZXItaWdub3JlLWNhc2UgImZyb20iIGpsLXJlY2lwaWVu
dC1oZWFkZXJzKQoJICAgICAgIDEKCSAgICAgMCkpCgkoaWYgKGpsLXRlc3QtbGlzdCByZWNpcGll
bnRzICdqbC1ncGdrZXktYXZhaWxhYmxlLXApCgkgICAgKGpsLXNlY3VyZS1tZXNzYWdlLWdwZykK
CSAgKGlmIChqbC10ZXN0LWxpc3QgcmVjaXBpZW50cyAnamwtY2VydGZpbGUtYXZhaWxhYmxlLXAp
CgkgICAgICAoamwtc2VjdXJlLW1lc3NhZ2Utc21pbWUpKSkpKSkKCihwcm92aWRlICdqbC1lbmNy
eXB0KQo7OzsgamwtZW5jcnlwdC5lbCBlbmRzIGhlcmUK
