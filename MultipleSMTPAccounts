Basically, there are two possible approaches to let gnus decide which SMTP server should be used for sending email.
* The easiest solution is probably using [http://msmtp.sourceforge.net/ msmtp]: Either let msmtp choose based on the "From" header or explicitly advice it, which account should be used using the "-a" switch. You can find elisp snippets to configure msmtp [http://www.emacswiki.org/emacs/GnusMSMTP here].
* If you want to avoid dependency on emacs-external tools, another approach using message hooks is documented on this page.

Unfortunately, there doesn't exist a built-in feature set to decide which SMTP server should be used by looking at the "From:" header line of the current post. However, this can be easily implemented by using message hooks. Here are a couple of functions that will do this for you.

 ;; Let Gnus change the "From:" line by looking at current group we are in.
 (setq gnus-posting-styles
       '(("foo" (address "me@foo.com"))
         ("bar" (address "me@bar.com"))
         ("baz" (address "me@baz.com"))))

 ;; Available SMTP accounts.
 (defvar smtp-accounts
   '((plain    "me@foo.com" "smtp.foo.com" 25  "user-foo" "pass-foo")
     (login    "me@foo.com" "smtp.moo.com" 25  "user-moo" nil)
     (cram-md5 "me@foo.com" "smtp.hoo.com" 25  "user-hoo" nil)
     (ssl      "me@bar.com" "smtp.bar.com" 587 "user-bar" "pass-bar" "key" "cert")
     (ssl      "me@baz.com" "smtp.baz.com" 587 "user-baz" "pass-baz" "key" "cert")))

 ;; Default smtpmail.el configurations.
 (require 'smtpmail)
 (setq send-mail-function 'smtpmail-send-it
       message-send-mail-function 'smtpmail-send-it
       mail-from-style nil
       user-full-name "Johnny B. Good"
       smtpmail-debug-info t
       smtpmail-debug-verb t)

 (defun set-smtp (mech server port user password)
   "Set related SMTP variables for supplied parameters."
   (setq smtpmail-smtp-server server
         smtpmail-smtp-service port
         smtpmail-auth-credentials (list (list server port user password))
         smtpmail-auth-supported (list mech)
         smtpmail-starttls-credentials nil)
   (message "Setting SMTP server to `%s:%s' for user `%s'."
            server port user))

 (defun set-smtp-ssl (server port user password key cert)
   "Set related SMTP and SSL variables for supplied parameters."
   (setq starttls-use-gnutls t
         starttls-gnutls-program "gnutls-cli"
         starttls-extra-arguments nil
         smtpmail-smtp-server server
         smtpmail-smtp-service port
         smtpmail-auth-credentials (list (list server port user password))
         smtpmail-starttls-credentials (list (list server port key cert)))
   (message
    "Setting SMTP server to `%s:%s' for user `%s'. (SSL enabled.)"
    server port user))

 (defun change-smtp ()
   "Change the SMTP server according to the current from line."
   (save-excursion
     (loop with from = (save-restriction
                         (message-narrow-to-headers)
                         (message-fetch-field "from"))
           for (auth-mech address . auth-spec) in smtp-accounts
           when (string-match address from)
           do (cond
               ((memq auth-mech '(cram-md5 plain login))
                (return (apply 'set-smtp (cons auth-mech auth-spec))))
               ((eql auth-mech 'ssl)
                (return (apply 'set-smtp-ssl auth-spec)))
               (t (error "Unrecognized SMTP auth. mechanism: `%s'." auth-mech)))
           finally (error "Cannot infer SMTP information."))))

 (add-hook 'message-send-hook 'change-smtp) ; OBSOLETE! (See below!)

Also keep in mind that, supplying NIL instead of a password in SMTP-ACCOUNTS, will make SMTPMAIL-SEND-IT function to ask for password before sending every message. (More secure, more bugging.)

Unfortunately, above CHANGE-SMTP (hooked into MESSAGE-SEND-HOOK) gets called only by SEND-MESSAGE, which means while sending multiple messages (consider SMTPMAIL-SEND-QUEUED-MAIL) CHANGE-SMTP won't get triggered. (Thanks Memnon for the bug report!) To tackle this problem, instead of hooking CHANGE-SMTP into MESSAGE-SEND-HOOK, wrap SMTPMAIL-VIA-SMTP totally:

  (defvar %smtpmail-via-smtp (symbol-function 'smtpmail-via-smtp))

  (defun smtpmail-via-smtp (recipient smtpmail-text-buffer)
    (with-current-buffer smtpmail-text-buffer
      (change-smtp))
    (funcall (symbol-value '%smtpmail-via-smtp) recipient smtpmail-text-buffer))

This will make CHANGE-SMTP to get triggered just before every SMTPMAIL-VIA-SMTP call.

--- Volkan YAZICI

----

This version is a bit simpler than the above because it only has two SMTP accounts and no SSL. --tzz

 (defun tzz-change-smtp ()
   "Change the SMTP server according to the current from line."
   (save-excursion
     (save-restriction
       (message-narrow-to-headers)
       (let* ((from (message-fetch-field "from"))
	      (from-work (string-match "workaddress" from))) ;; is this a "work" From address?
	 (setq smtpmail-smtp-service (if from-work 235 25)   ;; the SMTP port at work is different
	       smtpmail-smtp-server (if from-work
	 			       "worksmtp"           ;; the SMTP server at work
	 			     "regularsmtp")         ;; the SMTP server otherwise
	       smtpmail-default-smtp-server smtpmail-smtp-server)))))

 (add-hook 'message-send-hook 'tzz-change-smtp)

[new:DanielClemente:dt set  9 21:25:37 CEST 2008]
Are there plans to integrate this (the first solution) in the official distribution?

[new]This doesn't seem to work.
apply: Wrong number of arguments: #[(server port key cert) "Æ^PÇ^QÈ^R^K^T^M^V^K^K^M^N^L^N^MFC^V^N^K^M^N^O^N^PFC^V^QÉÊ^K^M^N^R$?" [starttls-use-gnutls starttls-gnutls-program starttls-extra-arguments server smtpmail-smtp-server port t "gnutls-cli" nil message ...] 5 ("/home/goo/.gnus.el" . 1634)], 6
----

----
CategoryGnus
